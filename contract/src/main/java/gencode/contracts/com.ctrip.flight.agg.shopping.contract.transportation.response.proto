syntax = "proto3";

package com.ctrip.flight.agg.shopping.contract.transportation.response;
import "BaijiCommonTypes.proto";
import "com.ctrip.flight.agg.shopping.contract.transportation.proto";
import "com.ctrip.flight.agg.shopping.contract.message.proto";
import "com.ctrip.flight.agg.shopping.contract.baggage.proto";
option java_package = "com.ctrip.flight.agg.shopping.contract.transportation.response";
option java_multiple_files = true;

message SearchResponseType {
    // 通用响应状态
    com.ctrip.soa.ResponseStatusType ResponseStatus = 1;
    // 响应头
    com.ctrip.flight.agg.shopping.contract.message.ResponseHeaderType ResponseHeader = 2;
    // 响应实体
    ResponseBodyType ResponseBody = 3;
    // 异常信息
    com.ctrip.flight.agg.shopping.contract.message.ErrorResultType ErrorResult = 4;
}

message ResponseBodyType {
    // 行程组合
    repeated ItineraryType Itinerary = 1;
    // 数据集合
    DataListsType DataLists = 2;
    // 扩展结点
    repeated com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 3;
    // 推荐信息
    repeated RecommendItineraryType RecommendItinerary = 4;
    // 元数据类型
    MetaDataType MetaData = 5;
    // 国际Agg的SearchCriteriaToken，调国际Agg的DetailSearch接口时使用;
    // 国内Agg的ResponseToken，调国内Agg的GetProductDetails接口时使用;
    string CompatibleDetailToken = 6;
    // 机酒缓存Token，调机酒服务时使用
    string HotelLoadToken = 7;
    // 对应了请求参数SearchCriteriaType, 调用本服务的DetailSearch接口时使用
    string SearchCriteriaToken = 8;
    // X产品缓存key，通过本key可调用SearchXproductByKey接口拿到X信息
    string XproductSearchKey = 9;
}

message DataListsType {
    // 交通工具相关信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.TransportType Transport = 1;
    // 机票产品信息
    repeated FlightProductType FlightProduct = 2;
    // 火车产品信息
    repeated TrainProductType TrainProduct = 3;
    // 巴士产品信息
    repeated BusProductType BusProduct = 4;
    // 机票运价信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.FareInfoType FareInfo = 5;
    // 行李额信息
    repeated com.ctrip.flight.agg.shopping.contract.baggage.BaggageType Baggage = 6;
    // 辅营类产品等信息
    com.ctrip.flight.agg.shopping.contract.transportation.MarketingProductType MarketingProduct = 7;
    // 缓存信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.CacheType Cache = 8;
    // 信用卡支付信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.CreditCardPaymentLimitType CreditCardPaymentLimit = 9;
    // 文本引用信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.TextRemarkType TextRemark = 10;
    // 让利信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.PaymentDiscountType PaymentDiscount = 11;
    // 下单用预订信息
    BookingReferenceType BookingReference = 12;
}

message MetaDataType {
    // 销售币种
    string SaleCurrency = 1;
}

// 行程组合列表
message ItineraryType {
    // 行程组合类型, 所有的TransportType的位或操作,如：3-flight+Train
    int32 TransportTypeGroup = 1;
    // 行程、段索引
    repeated TransportSegmentType TransportSegment = 2;
    // 报价信息，每一个报价包含一组产品信息
    repeated OfferType Offer = 3;
    // 0:不是飞人, 1:普通飞人, 2:超级飞人
    int32 FlyingManType = 4;
    // 换乘信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;
    // 扩展结点
    repeated com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;
    // 优先级, 数值越小优先级越高
    double Priority = 7;
    // 被正常运价引用的运价信息，如：儿童标准价
    repeated OfferType ReferenceOffer = 8;
    // 不同offer 混合预定关系（国内混舱预定）
    repeated MultiCombinationType MultiCombination = 9;
}

message OfferType {
    // 行段详细信息，顺序与TransportRef一一对应
    repeated TransportFareMappingType TransportFareMapping = 1;
    // 产品详情列表，含价格等重要信息
    repeated ProductDetailType ProductDetail = 2;
    // 服务内部为每一个offer生成一个字符串类型的token，内容为加密字符串，反查时需要回传，不保证唯一性！
    string OfferToken = 3;
    // 产品组合类型, 包括了单程直飞的部分信息
    repeated string ProductCombinationType = 4;
    // 绑定在Offer维度的辅营信息
    com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;
    // 行李信息
    repeated com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;
    // 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
    repeated com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;
    // 国际机票价格属性ID集合
    repeated int32 PriceAttributeID = 8;
    // 扩展结点
    repeated com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;
    // 推荐类运价类型, 默认0：普通运价； 1: 推荐类运价； 2:普通运价+推荐类(既是普通又是推荐类，与前端展示有关)
    int32 RecommendedType = 10;
    // 机酒Token，调机酒服务时使用
    string TransportHotelToken = 11;
    // 优先级, 数值越小优先级越高
    double Priority = 12;
    // 与行程有关的相关信息。List中元素的数量最多和行程数一样
    repeated com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;
    // 运价索引 每次查询唯一
    int32 OfferID = 14;
    // 引用的offerId。暂时用于标识儿童标准价offer隶属于哪个Offer下
    int32 ChildStandardOfferRef = 15;
    // Upsell促销信息
    UpsellProductType UpsellProduct = 16;
    // 可展示的运价金额 已确认目前没人用,直接删除
    // DisplayedOfferAmountType DisplayedOfferAmount = 17 [deprecated = true];
    // 产品组合关系
    com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType ProductComposition = 17;
    // 比价信息
    com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType OfferComparison = 18;
}

message TransportSegmentType {
    // 程号，从1开始
    int32 JourneyNo = 1;
    // 每一程内的段号，从1开始
    int32 SegmentNo = 2;
    // 交通工具信息的索引号
    int32 TransportRef = 3;
    // 是否行程内的主航段
    bool MainSegmentInd = 4;
    // 扩展结点
    repeated com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 5;
}

// 与TransportRefType一一对应
message TransportFareMappingType {
    // (航班/火车/巴士等) 详情索引号
    int32 TransportRef = 1;
    // 乘客类型对应的舱等舱位信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.PaxSeatType PaxSeat = 2;
}

// 价格单元信息
message ProductDetailType {
    // 交通工具的价格类型，1: FlightProductType; 2: TrainProductType; 3: BusProductType
    int32 TransportProductType = 1;
    // FlightProduct、TrainProduct、BusProduct等对应的索引号
    int32 ProductRef = 2;
    // 退改签反查key(对应国际的PenaltyKey, 国内的RcKey)
    string CompatiblePenaltyKey = 3;
}

// 机票信息
message FlightProductType {
    // 索引号
    int32 RefNum = 1;
    // 出票航司
    string ValidatingCarrier = 2;
    // 查询Channel
    string BookingChannel = 3;
    // 根据乘客类型划分的航班价格信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.FlightPaxProductType PaxProduct = 4;
    // 产品类型
    repeated string ProductType = 5;
    // 提供行程单或发票选项：1: 发票, 2: 行程单, 4: 行+差, 8: 电子凭证, 按位相加可以表示多个值
    int32 InvoiceType = 6;
    // 限制类信息
    com.ctrip.flight.agg.shopping.contract.transportation.RestrictionType Restriction = 7;
    /*
    None = 0;
    Exclusive = 1;
    Cloud = 2;
    Prioritizing = 4;
    LowestPrice = 8;
    FlagShipStore = 16;
    */
    int32 ProductCategory = 8;
    /*
    None = 0;
    Platforms = 1;
    PlatformsPrivate = 2;
    OverseasPrivate = 3;
    Overseas = 4;
    Owner = 5;
    Pseat = 6;
    RTSeat = 7;
    CSD = 8;
    CSDPrivate = 9;
    Airline = 10;
    LowestPrice = 11;
    KWPrivate = 12;
    CSDPublish = 13;
    OSeat = 14;
    */
    int32 SubProductCategory = 9;
    // 缓存信息，调试用
    int32 CacheRef = 10;
    // 最晚出票时限
    com.ctrip.flight.agg.shopping.contract.transportation.TicketingTimeLimitType TicketingTimeLimit = 11;
    // 运价Fare信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.FareRefType FareRef = 12;
    // 航司最晚出票时间
    string CarrierTicketingDeadline = 13;
    // 资质描述信息的RefID
    int32 EligibilityRemarkRef = 14;
    // 国际机票标签类信息
    repeated int32 RecommendPrdType = 15;
    // 供应商信息
    FlightSupplierType FlightSupplier = 16;
    // 按航司显示舱位、票面价
    CarrierPriceShowType CarrierPriceShow = 17;
    // 抢票信息
    com.ctrip.flight.agg.shopping.contract.transportation.GrabTicketType GrabTicket = 18;
    // 会员注册,1：联系人注册,2：单个乘机人注册,3：多个乘机人注册
    int32 MembershipRegisterType = 19;
    // 航司直销Pc码
    string PcCode = 20;
    // 营销活动代码
    repeated string MarketingCode = 21;
    // 扩展结点
    repeated com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 22;

    // 政策关键信息
    PolicyKeyType PolicyKey = 23;

    // 多程政策的限制信息
    MultiSegmentRestrictionType MultiSegmentRestriction = 24;

    // 绿飞权益信息
    GreenFlyingType GreenFlying = 25;

    // 预订场景信息的Ref
    int32 BookingSceneSpecifiedRef = 26;

    // 国内PATA信息
    PataType Pata = 27;

    // 无证件标识 0:不支持无证件 1:支持无证件
    int32 NoIdentityCardInd = 28;

    // 会员注册信息【请使用MemberRegisters列表，该字段即将废弃】
    MemberRegisterType MemberRegister = 29 [deprecated = true];

    // 溢价产品信息
    PremiumProductType PremiumProduct = 30;

    // 账单信息
    BillingType Billing = 31;

    // 优惠的产品信息
    PreferentialProductType PreferentialProduct = 32;

    // 航班舱位可累积里程积分
    repeated MileageCreditType MileageCredit = 33;

    // 餐食信息
    MealType Meal = 34;

    // 两舱特征信息
    CFCabinFeatureType CFCabinFeature = 35;

    // 会员注册信息列表
    repeated MemberRegisterType MemberRegisters = 36;

    // SuccessRate
    double ApplySuccessRate = 37;
}

message BillingType {
    // 行程单金额
    com.ctrip.flight.agg.shopping.contract.transportation.DoubleType ItineraryAmount = 1;
    // 发票金额
    com.ctrip.flight.agg.shopping.contract.transportation.DoubleType InoviceAmount = 2;
}

message PreferentialProductType {
    // 优惠产品价格
    com.ctrip.flight.agg.shopping.contract.transportation.DoubleType Amount = 1;
    // 优惠产品token，下单回传
    string Token = 2;
    // 航司AgreementID列表
    repeated string AirlineAgreementID = 3;
}

message MileageCreditType {
    // 里程积分
    int32 Credit = 1;
    // 里程积分类型
    string Type = 2;
}

message FlightSupplierType {
    // 票台ID
    int32 AgencyID = 1;
    // 供应商名称，iata号码的信息放在IATANumber节点中
    string OfficialName = 2;
    // IATA号
    string IATANumber = 3;
    // 票台披露信息，比如代理资质：“中国国航授权代理”
    string AgentDisclosure = 4;
    // 供应商资质信息
    string AgencyLicenseUrl = 5;
}

message CarrierPriceShowType {
    // 子舱
    string RBD = 1;
    // 价格，销售币种
    double Price = 2;
}

// 火车票信息
message TrainProductType {
    // 索引号
    int32 RefNum = 1;
    // 根据乘客类型和乘客资质划分的火车价格信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.PaxProductType PaxProduct = 2;
    // 促销标签
    string PromotionTag = 3;
    // 详情查询时存放token等扩展信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 4;
    // 退改签简体信息
    com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType RefundChange = 5;
}

// 巴士票信息
message BusProductType {
    // 索引号
    int32 RefNum = 1;
    // 根据乘客类型和乘客资质划分的Bus价格信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.PaxProductType PaxProduct = 2;
    // 详情查询时存放token等信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 3;
}

message RecommendItineraryType {
    // 推荐位类型
    string Type = 1;
    //推荐位简体结构，重新列表查询
    RedirectItineraryType RedirectItinerary = 2;
    // 扩展结点
    repeated com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 3;
}

message RedirectItineraryType {
    // 推荐简体结构中每一段的信息
    repeated RedirectSegmentType RedirectSegment = 1;
    // 卖价
    double SalePrice = 2;
    // 换乘信息
    repeated com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 3;
    // 推荐产品属性
    repeated ProductAttributesType ProductAttributes = 4;
}

// 推荐位简体的“段”定义
message RedirectSegmentType {
    // 程号，从1开始
    int32 JourneyNo = 1;
    // 每一程内的段号，从1开始
    int32 SegmentNo = 2;
    // 交通工具类型，1-flight; 2-train; 4-bus
    int32 TransportType = 3;
    //出发城市ID
    int32 DepartCityID = 4;
    // 出发机场或铁路或巴士起点站
    string DepartSite = 5;
    // 到达城市ID
    int32 ArriveCityID = 6;
    // 到达机场/铁路或巴士终点站
    string ArriveSite = 7;
    // 出发时间 format: yyyy-MM-dd HH:mm:ss
    string DepartDateTime = 8;
    // 到达时间 format: yyyy-MM-dd HH:mm:ss
    string ArriveDateTime = 9;
    // 航班号/火车号等
    string TransportNo = 10;
    // 出发站台 可能为空
    string DepartTerminal = 11;
    // 到达站台 可能为空
    string ArriveTerminal = 12;
    // 机票信息 可能为空
    FlightType Flight = 13;
}

// 推荐产品属性
message ProductAttributesType {
    // 产品类型
    string ProductType = 1;
    // 子产品类型
    string SubProductType = 2;
    // 产品名称
    string ProductName = 3;
    // 营销Code
    string MarketingCode = 4;
}

// 下单用预订信息
message BookingReferenceType {
    repeated CommissionStatusType CommissionStatus = 1;
    repeated FlightProductBookingSceneType FlightProductBookingScene = 2;
}

// 佣金倒查状态
message CommissionStatusType {
    string ID = 1;
    string ContentType = 2;
    string Value = 3;
}

// 预订场景信息
message FlightProductBookingSceneType {
    // 索引号
    int32 RefNum = 1;
    /**
    对应原DeprecatedInfo 作为待废弃兼容实体的替换
    Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     */
    repeated com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;
    /**
    对应原DeprecatedInfo.AdditionalInfoList
    2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
    3	 :废弃,保留占位
    4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
    5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
    6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
    7	 :废弃,保留占位 -- LuggageRemarks
    8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
    9	 :废弃,保留占位
    10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
    11	 :PriceAdjustment, 废弃
    12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
    13	 :废弃,保留占位
    14	 :废弃,保留占位
     */
    repeated com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;
    // 分票信息
    TicketSharingType TicketSharing = 4;
    // 中转政策信息
    TransitPolicyType TransitPolicy = 5;
}

// 分票信息
message TicketSharingType {
    /**
    分票类型
    [autoGenerated commentRef="TicketSharingType"]
    NORMAL_AVATAR	 :普通伪航司分票
    RAW_WITH_AGENCY	 :指定票台佣金的伪航司分票
    SPECIAL_WITH_AGENCY	 :指定票台特殊政策的伪航司分票
    RULE_WITH_AGENCY	 :指定票台规则运价的伪航司分票
    NDC_B2T	 :NDC B2T分票，这里的分票是与有航司直营标签政策的展现比例
    NDC_QNRDR	 :NDC官网代购分票，这里的分票是与有航司直营标签政策的展示比例
    SPECIFIC_AIRLINE	 :特定航司的直联分票，这些航司不支持航司直营标签，如：9C、AQ，用PS=2的政策替换PS=4的这些航司的政策
    GRAY_RAW	 :灰名单佣金分票，这里的分票是灰名单票台的佣金针对普通佣金的分票
     */
    string Type = 1;
    // 分票前的政策来源渠道
    string OriginalPolicySourceChannel = 2;
    // 分票前的政策的出票票台
    int32 OriginalPolicyFlightAgency = 3;
    // 儿童婴儿是否转回真直联出
    bool ChildInfantChangeBackToDirectInd = 4;
}

// 中转政策信息
message TransitPolicyType {
    // 政策开始日期	yyyy-MM-dd
    string EffectDate = 1;
    // 政策截止日期	yyyy-MM-dd
    string ExpireDate = 2;
}

// 政策关键信息
message PolicyKeyType {
    // 主政策信息
    PolicyItemType PolicyItem = 1;
}

// 主政策信息
message PolicyItemType {
    /**
    供应商类型，对应enum:SupplierTypeConst
    0	 :未定义（程序没有给变量赋值）
    1	 :自有票台
    2	 :普通供应商
    3	 :航司供应商，航司通过平台录入政策
    4	 :航司直营，PS＝4
    5	 :航司旗舰店  通过去哪儿平台
    255	 :未知类型（程序无法确定类型）
     */
    int32 SupplierType = 1;

    /**
    政策类型，如FD/NFD/特价/佣金等
    [autoGenerated commentRef="PolicyTypeConst"]
    UNDEFINED	 :未定义（程序没有给变量赋值）
    UNKNOWN	 :未知类型（程序无法确定类型）
    OW_SPECIAL	 :单程特价，对应表FltSpecialShard02DB..Flt_ShareSpecialPolicyOW
    RT_SPECIAL	 :往返特价，对应表FltSpecialShard02DB..Flt_ShareSpecialPolicyRT
    OW_RAW	 :单程佣金，对应表FltCommShard02DB..Flt_ShareRawPolicy
    RT_RAW	 :往返佣金，对应表FltCommShard02DB..Flt_ShareRawPolicy
    OW_RULE	 :单程规则运价，对应表FltTradePolicyDB..FltRulePolicy
    RT_RULE	 :往返规则运价，对应表FltTradePolicyDB..FltRulePolicy
    OW_FLOAT	 :单程上浮政策，对应表FltTradePolicyDB..Flt_ShareFloatPolicy
    RT_FLOAT	 :往返上浮政策，对应表FltTradePolicyDB..Flt_ShareFloatPolicy
    OW_OFFICIAL	 :单程公务机政策，对应表FltTradePolicyDB..Flt_CorporateAircraft
    RT_OFFICIAL	 :往返公务机政策，对应表FltTradePolicyDB..Flt_CorporateAircraft
    TS_INTERLINE	 :中转联程，对应表FltTradePolicyDB..Flt_ShareTransitPolicy
    OJ_OPENJAW	 :缺口程政策，对应表FltTradePolicyDB..Flt_ShareGapPolicy
    OW_FD	 :单程FD，对应表FltPubDB..Flt_FdPolicy
    OW_SHAREFD	 :单程共享航班FD，对应表FltPubDB..Flt_ShareFDPolicy
    RT_FD	 :往返FD，对应表FltPubDB..Flt_FdPolicy
    OW_NFD	 :普通单程NFD，对应表FltProductDB..Flt_RawFlightfee
    OW_NDC	 :单程NDC
    TS_NDC	 :中转NDC
    RT_NDC	 :往返NDC
    OW_CORPORATION	 :商旅政策，对应表FltProductDB..Flt_CorpFlightFee
    OW_VACATION	 :单程度假政策，对应表FltTradePolicyDB..Flt_ShareSpecialPolicy
    RT_VACATION	 :往返度假政策，对应表FltTradePolicyDB..Flt_ShareSpecialPolicy
    OW_AIRLINE_DIRECT	 :单程航司直连政策，对应表FltCacheDB..FAV_ClassInfo_ZL
    RT_AIRLINE_DIRECT	 :往返航司直连政策，对应RedisCluster.OAGFlightScheduleDataCache
    OW_WAITING_POLICY	 :单程候补政策，对应表FltPUBDB..Flt_WaitingPolicy
     */
    string PolicyType = 2;

    /**
    政策分组类型列表：代表政策所属的分组，对应enum:PolicyGroupConst
    [autoGenerated commentRef="PolicyGroupConst"]
    OW	 :单程政策
    RT	 :真往返政策(含往返佣金，即PolicyTypeConst=RT_RAW的政策)
    TS	 :中转联程政策
    OJ	 :缺口程政策
     */
    repeated string PolicyGroup = 3;
}

// 多程政策的限制信息
message MultiSegmentRestrictionType {
    /**
    多段的合并订位方式
    0:未知由下单确定,1:分开订位,2:合并订位， 当前1和2仅供中转联程使用
     */
    int32 MultiSegmentBookingType = 1;
    // 1：是多程/段的政策 0：非多程/段的政策
    int32 MultiSegmentPolicyType = 2;
}

message GreenFlyingType {
    /**
    权益类型：0-无效 1-餐食兑换里程
     */
    int32 ExchangeType = 1;
    /**
    权益数值（兑换里程数）
     */
    int32 ExchangeValue = 2;
}

message PataType {
    /**
    pata基准价格
     */
    double BasePrice = 1;
    /**
    下浮选项（绝对值/比例）0-比例,1-绝对值
     */
    int32 DownFloatOption = 2;
    /**
    下浮值（具体绝对值/比例）
     */
    int32 DownFloatValue = 3;
    /**
    Pata价格上浮控制值
     */
    int32 PriceValue = 4;
    /**
    PATA验价上浮控制选项，0-比例、1-绝对值
     */
    int32 VerifyPriceOption = 5;
    /**
    PATA验价上浮控制的数值
     */
    double VerifyOffsetValue = 6;
    /**
    PATA特殊指令，由平台随政策录入，引擎及Agg透传，下单落地，对接及后处理解析
     */
    string PataCode = 7;
}

message UpsellProductType {
    // 引用基准运价id
    int32 BaseOfferID = 1;
    // 差异化服务信息
    repeated DiffServiceType DiffService = 2;
}

message DiffServiceType {
    // 产品类型，高返，快速出票，X产品等
    string UpsellProductType = 1;
}

message PremiumProductType {
    // 搭赠类型
    int32 BundleSaleType = 1;
}

message MemberRegisterType {
    // 营销Code
    string MarketingCode = 1;
    // 产品类型： 0：产品送里程 1：注册送里程
    int32 ProductType = 2;
    // 会员类型: 0：新会员 1：老会员
    string VipType = 3;
    // 是否需要在线注册 T/F
    string OnlineRegister = 4;
    // 注册来源
    string RegisterSource = 5;
    // 赠送内容: 0:里程
    string GiveOption = 6;
    // 年龄限制。成人0，儿童1，必选
    string AgeLimit = 7;
    // 产品规则
    string ProductRule = 8;
    // 规则内容
    string RuleContent = 9;
    // 年龄范围
    repeated com.ctrip.flight.agg.shopping.contract.transportation.IntRangeType AgeLimitRange = 10;
}

message MealType {
    // Eterm下载的餐食标识,如B:早餐,L:午餐,D:晚餐/正餐,F:供采购的食物,C:免费酒精饮料 等等
    string MealTypeEterm = 1;
    // 引擎封装的餐食明细类型,如1:早餐,8:午餐,3:晚餐/正餐,4:供采购的食物,2:免费酒精饮料 等等
    int32 DisplayType = 2;
}

message CFCabinFeatureType {
    // CF两舱权益
    CFCabinBenefitType CFCabinBenefit = 1;
}

message CFCabinBenefitType {
    // 规则ID，透传平台表ID
    int64 RuleID = 1;
    // 权益
    repeated string Benefit = 2;
}

// 不同offer 混合预定类型
message MultiCombinationType {
    // 严格反查时需要回传
    string PolicyToken = 1;
    // 可用混舱组合关系 如：OfferA成人 组合OfferB儿童、婴儿
    repeated CombinationUnitType CombinationUnit = 2;
    // 组合tag标签
    repeated com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 3;
    // 可展示的运价金额
    DisplayedOfferAmountType DisplayedOfferAmount = 4;
}

message CombinationUnitType {
    // 可组合的offerid引用
    int32 OfferRef = 1;
    // 可组合乘客类型, 1: Adult; 2: Child; 4: Infant
    int32 AgeType = 2;
    // 可用人数
    int32 Count = 3;
}