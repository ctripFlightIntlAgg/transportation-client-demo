// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.ctrip.flight.agg.shopping.contract.transportation.proto

package com.ctrip.flight.agg.shopping.contract.transportation;

public interface JourneyAttachmentTypeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 行程号，从1开始
   * </pre>
   *
   * <code>int32 JourneyNo = 1;</code>
   */
  int getJourneyNo();

  /**
   * <pre>
   * 国内的产品组合类型，RT/MT时有值
   * </pre>
   *
   * <code>repeated string ProductCombinationType = 2;</code>
   */
  java.util.List<java.lang.String>
      getProductCombinationTypeList();
  /**
   * <pre>
   * 国内的产品组合类型，RT/MT时有值
   * </pre>
   *
   * <code>repeated string ProductCombinationType = 2;</code>
   */
  int getProductCombinationTypeCount();
  /**
   * <pre>
   * 国内的产品组合类型，RT/MT时有值
   * </pre>
   *
   * <code>repeated string ProductCombinationType = 2;</code>
   */
  java.lang.String getProductCombinationType(int index);
  /**
   * <pre>
   * 国内的产品组合类型，RT/MT时有值
   * </pre>
   *
   * <code>repeated string ProductCombinationType = 2;</code>
   */
  com.google.protobuf.ByteString
      getProductCombinationTypeBytes(int index);

  /**
   * <pre>
   * 中转类型
   * </pre>
   *
   * <code>string TransferProductType = 3;</code>
   */
  java.lang.String getTransferProductType();
  /**
   * <pre>
   * 中转类型
   * </pre>
   *
   * <code>string TransferProductType = 3;</code>
   */
  com.google.protobuf.ByteString
      getTransferProductTypeBytes();

  /**
   * <pre>
   * 下发中转组合产品维度，无法放在单程上的信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType TransferCombinationTag = 4;</code>
   */
  java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> 
      getTransferCombinationTagList();
  /**
   * <pre>
   * 下发中转组合产品维度，无法放在单程上的信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType TransferCombinationTag = 4;</code>
   */
  com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType getTransferCombinationTag(int index);
  /**
   * <pre>
   * 下发中转组合产品维度，无法放在单程上的信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType TransferCombinationTag = 4;</code>
   */
  int getTransferCombinationTagCount();
  /**
   * <pre>
   * 下发中转组合产品维度，无法放在单程上的信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType TransferCombinationTag = 4;</code>
   */
  java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> 
      getTransferCombinationTagOrBuilderList();
  /**
   * <pre>
   * 下发中转组合产品维度，无法放在单程上的信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType TransferCombinationTag = 4;</code>
   */
  com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder getTransferCombinationTagOrBuilder(
      int index);
}
