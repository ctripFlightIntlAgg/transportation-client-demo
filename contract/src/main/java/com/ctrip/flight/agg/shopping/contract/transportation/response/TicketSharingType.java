// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.ctrip.flight.agg.shopping.contract.transportation.response.proto

package com.ctrip.flight.agg.shopping.contract.transportation.response;

/**
 * <pre>
 * 分票信息
 * </pre>
 *
 * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType}
 */
public  final class TicketSharingType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType)
    TicketSharingTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use TicketSharingType.newBuilder() to construct.
  private TicketSharingType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private TicketSharingType() {
    type_ = "";
    originalPolicySourceChannel_ = "";
    originalPolicyFlightAgency_ = 0;
    childInfantChangeBackToDirectInd_ = false;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private TicketSharingType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();

            type_ = s;
            break;
          }
          case 18: {
            java.lang.String s = input.readStringRequireUtf8();

            originalPolicySourceChannel_ = s;
            break;
          }
          case 24: {

            originalPolicyFlightAgency_ = input.readInt32();
            break;
          }
          case 32: {

            childInfantChangeBackToDirectInd_ = input.readBool();
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_TicketSharingType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_TicketSharingType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.class, com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.Builder.class);
  }

  public static final int TYPE_FIELD_NUMBER = 1;
  private volatile java.lang.Object type_;
  /**
   * <pre>
   **
   *分票类型
   *[autoGenerated commentRef="TicketSharingType"]
   *NORMAL_AVATAR	 :普通伪航司分票
   *RAW_WITH_AGENCY	 :指定票台佣金的伪航司分票
   *SPECIAL_WITH_AGENCY	 :指定票台特殊政策的伪航司分票
   *RULE_WITH_AGENCY	 :指定票台规则运价的伪航司分票
   *NDC_B2T	 :NDC B2T分票，这里的分票是与有航司直营标签政策的展现比例
   *NDC_QNRDR	 :NDC官网代购分票，这里的分票是与有航司直营标签政策的展示比例
   *SPECIFIC_AIRLINE	 :特定航司的直联分票，这些航司不支持航司直营标签，如：9C、AQ，用PS=2的政策替换PS=4的这些航司的政策
   *GRAY_RAW	 :灰名单佣金分票，这里的分票是灰名单票台的佣金针对普通佣金的分票
   * </pre>
   *
   * <code>string Type = 1;</code>
   */
  public java.lang.String getType() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      type_ = s;
      return s;
    }
  }
  /**
   * <pre>
   **
   *分票类型
   *[autoGenerated commentRef="TicketSharingType"]
   *NORMAL_AVATAR	 :普通伪航司分票
   *RAW_WITH_AGENCY	 :指定票台佣金的伪航司分票
   *SPECIAL_WITH_AGENCY	 :指定票台特殊政策的伪航司分票
   *RULE_WITH_AGENCY	 :指定票台规则运价的伪航司分票
   *NDC_B2T	 :NDC B2T分票，这里的分票是与有航司直营标签政策的展现比例
   *NDC_QNRDR	 :NDC官网代购分票，这里的分票是与有航司直营标签政策的展示比例
   *SPECIFIC_AIRLINE	 :特定航司的直联分票，这些航司不支持航司直营标签，如：9C、AQ，用PS=2的政策替换PS=4的这些航司的政策
   *GRAY_RAW	 :灰名单佣金分票，这里的分票是灰名单票台的佣金针对普通佣金的分票
   * </pre>
   *
   * <code>string Type = 1;</code>
   */
  public com.google.protobuf.ByteString
      getTypeBytes() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      type_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ORIGINALPOLICYSOURCECHANNEL_FIELD_NUMBER = 2;
  private volatile java.lang.Object originalPolicySourceChannel_;
  /**
   * <pre>
   * 分票前的政策来源渠道
   * </pre>
   *
   * <code>string OriginalPolicySourceChannel = 2;</code>
   */
  public java.lang.String getOriginalPolicySourceChannel() {
    java.lang.Object ref = originalPolicySourceChannel_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      originalPolicySourceChannel_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 分票前的政策来源渠道
   * </pre>
   *
   * <code>string OriginalPolicySourceChannel = 2;</code>
   */
  public com.google.protobuf.ByteString
      getOriginalPolicySourceChannelBytes() {
    java.lang.Object ref = originalPolicySourceChannel_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      originalPolicySourceChannel_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ORIGINALPOLICYFLIGHTAGENCY_FIELD_NUMBER = 3;
  private int originalPolicyFlightAgency_;
  /**
   * <pre>
   * 分票前的政策的出票票台
   * </pre>
   *
   * <code>int32 OriginalPolicyFlightAgency = 3;</code>
   */
  public int getOriginalPolicyFlightAgency() {
    return originalPolicyFlightAgency_;
  }

  public static final int CHILDINFANTCHANGEBACKTODIRECTIND_FIELD_NUMBER = 4;
  private boolean childInfantChangeBackToDirectInd_;
  /**
   * <pre>
   * 儿童婴儿是否转回真直联出
   * </pre>
   *
   * <code>bool ChildInfantChangeBackToDirectInd = 4;</code>
   */
  public boolean getChildInfantChangeBackToDirectInd() {
    return childInfantChangeBackToDirectInd_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, type_);
    }
    if (!getOriginalPolicySourceChannelBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, originalPolicySourceChannel_);
    }
    if (originalPolicyFlightAgency_ != 0) {
      output.writeInt32(3, originalPolicyFlightAgency_);
    }
    if (childInfantChangeBackToDirectInd_ != false) {
      output.writeBool(4, childInfantChangeBackToDirectInd_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, type_);
    }
    if (!getOriginalPolicySourceChannelBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, originalPolicySourceChannel_);
    }
    if (originalPolicyFlightAgency_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, originalPolicyFlightAgency_);
    }
    if (childInfantChangeBackToDirectInd_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, childInfantChangeBackToDirectInd_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType other = (com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType) obj;

    boolean result = true;
    result = result && getType()
        .equals(other.getType());
    result = result && getOriginalPolicySourceChannel()
        .equals(other.getOriginalPolicySourceChannel());
    result = result && (getOriginalPolicyFlightAgency()
        == other.getOriginalPolicyFlightAgency());
    result = result && (getChildInfantChangeBackToDirectInd()
        == other.getChildInfantChangeBackToDirectInd());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getType().hashCode();
    hash = (37 * hash) + ORIGINALPOLICYSOURCECHANNEL_FIELD_NUMBER;
    hash = (53 * hash) + getOriginalPolicySourceChannel().hashCode();
    hash = (37 * hash) + ORIGINALPOLICYFLIGHTAGENCY_FIELD_NUMBER;
    hash = (53 * hash) + getOriginalPolicyFlightAgency();
    hash = (37 * hash) + CHILDINFANTCHANGEBACKTODIRECTIND_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getChildInfantChangeBackToDirectInd());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 分票信息
   * </pre>
   *
   * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType)
      com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_TicketSharingType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_TicketSharingType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.class, com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.Builder.class);
    }

    // Construct using com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      type_ = "";

      originalPolicySourceChannel_ = "";

      originalPolicyFlightAgency_ = 0;

      childInfantChangeBackToDirectInd_ = false;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_TicketSharingType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType getDefaultInstanceForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType build() {
      com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType buildPartial() {
      com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType result = new com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType(this);
      result.type_ = type_;
      result.originalPolicySourceChannel_ = originalPolicySourceChannel_;
      result.originalPolicyFlightAgency_ = originalPolicyFlightAgency_;
      result.childInfantChangeBackToDirectInd_ = childInfantChangeBackToDirectInd_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType) {
        return mergeFrom((com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType other) {
      if (other == com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.getDefaultInstance()) return this;
      if (!other.getType().isEmpty()) {
        type_ = other.type_;
        onChanged();
      }
      if (!other.getOriginalPolicySourceChannel().isEmpty()) {
        originalPolicySourceChannel_ = other.originalPolicySourceChannel_;
        onChanged();
      }
      if (other.getOriginalPolicyFlightAgency() != 0) {
        setOriginalPolicyFlightAgency(other.getOriginalPolicyFlightAgency());
      }
      if (other.getChildInfantChangeBackToDirectInd() != false) {
        setChildInfantChangeBackToDirectInd(other.getChildInfantChangeBackToDirectInd());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object type_ = "";
    /**
     * <pre>
     **
     *分票类型
     *[autoGenerated commentRef="TicketSharingType"]
     *NORMAL_AVATAR	 :普通伪航司分票
     *RAW_WITH_AGENCY	 :指定票台佣金的伪航司分票
     *SPECIAL_WITH_AGENCY	 :指定票台特殊政策的伪航司分票
     *RULE_WITH_AGENCY	 :指定票台规则运价的伪航司分票
     *NDC_B2T	 :NDC B2T分票，这里的分票是与有航司直营标签政策的展现比例
     *NDC_QNRDR	 :NDC官网代购分票，这里的分票是与有航司直营标签政策的展示比例
     *SPECIFIC_AIRLINE	 :特定航司的直联分票，这些航司不支持航司直营标签，如：9C、AQ，用PS=2的政策替换PS=4的这些航司的政策
     *GRAY_RAW	 :灰名单佣金分票，这里的分票是灰名单票台的佣金针对普通佣金的分票
     * </pre>
     *
     * <code>string Type = 1;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     **
     *分票类型
     *[autoGenerated commentRef="TicketSharingType"]
     *NORMAL_AVATAR	 :普通伪航司分票
     *RAW_WITH_AGENCY	 :指定票台佣金的伪航司分票
     *SPECIAL_WITH_AGENCY	 :指定票台特殊政策的伪航司分票
     *RULE_WITH_AGENCY	 :指定票台规则运价的伪航司分票
     *NDC_B2T	 :NDC B2T分票，这里的分票是与有航司直营标签政策的展现比例
     *NDC_QNRDR	 :NDC官网代购分票，这里的分票是与有航司直营标签政策的展示比例
     *SPECIFIC_AIRLINE	 :特定航司的直联分票，这些航司不支持航司直营标签，如：9C、AQ，用PS=2的政策替换PS=4的这些航司的政策
     *GRAY_RAW	 :灰名单佣金分票，这里的分票是灰名单票台的佣金针对普通佣金的分票
     * </pre>
     *
     * <code>string Type = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     **
     *分票类型
     *[autoGenerated commentRef="TicketSharingType"]
     *NORMAL_AVATAR	 :普通伪航司分票
     *RAW_WITH_AGENCY	 :指定票台佣金的伪航司分票
     *SPECIAL_WITH_AGENCY	 :指定票台特殊政策的伪航司分票
     *RULE_WITH_AGENCY	 :指定票台规则运价的伪航司分票
     *NDC_B2T	 :NDC B2T分票，这里的分票是与有航司直营标签政策的展现比例
     *NDC_QNRDR	 :NDC官网代购分票，这里的分票是与有航司直营标签政策的展示比例
     *SPECIFIC_AIRLINE	 :特定航司的直联分票，这些航司不支持航司直营标签，如：9C、AQ，用PS=2的政策替换PS=4的这些航司的政策
     *GRAY_RAW	 :灰名单佣金分票，这里的分票是灰名单票台的佣金针对普通佣金的分票
     * </pre>
     *
     * <code>string Type = 1;</code>
     */
    public Builder setType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      type_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     *分票类型
     *[autoGenerated commentRef="TicketSharingType"]
     *NORMAL_AVATAR	 :普通伪航司分票
     *RAW_WITH_AGENCY	 :指定票台佣金的伪航司分票
     *SPECIAL_WITH_AGENCY	 :指定票台特殊政策的伪航司分票
     *RULE_WITH_AGENCY	 :指定票台规则运价的伪航司分票
     *NDC_B2T	 :NDC B2T分票，这里的分票是与有航司直营标签政策的展现比例
     *NDC_QNRDR	 :NDC官网代购分票，这里的分票是与有航司直营标签政策的展示比例
     *SPECIFIC_AIRLINE	 :特定航司的直联分票，这些航司不支持航司直营标签，如：9C、AQ，用PS=2的政策替换PS=4的这些航司的政策
     *GRAY_RAW	 :灰名单佣金分票，这里的分票是灰名单票台的佣金针对普通佣金的分票
     * </pre>
     *
     * <code>string Type = 1;</code>
     */
    public Builder clearType() {
      
      type_ = getDefaultInstance().getType();
      onChanged();
      return this;
    }
    /**
     * <pre>
     **
     *分票类型
     *[autoGenerated commentRef="TicketSharingType"]
     *NORMAL_AVATAR	 :普通伪航司分票
     *RAW_WITH_AGENCY	 :指定票台佣金的伪航司分票
     *SPECIAL_WITH_AGENCY	 :指定票台特殊政策的伪航司分票
     *RULE_WITH_AGENCY	 :指定票台规则运价的伪航司分票
     *NDC_B2T	 :NDC B2T分票，这里的分票是与有航司直营标签政策的展现比例
     *NDC_QNRDR	 :NDC官网代购分票，这里的分票是与有航司直营标签政策的展示比例
     *SPECIFIC_AIRLINE	 :特定航司的直联分票，这些航司不支持航司直营标签，如：9C、AQ，用PS=2的政策替换PS=4的这些航司的政策
     *GRAY_RAW	 :灰名单佣金分票，这里的分票是灰名单票台的佣金针对普通佣金的分票
     * </pre>
     *
     * <code>string Type = 1;</code>
     */
    public Builder setTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      type_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object originalPolicySourceChannel_ = "";
    /**
     * <pre>
     * 分票前的政策来源渠道
     * </pre>
     *
     * <code>string OriginalPolicySourceChannel = 2;</code>
     */
    public java.lang.String getOriginalPolicySourceChannel() {
      java.lang.Object ref = originalPolicySourceChannel_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        originalPolicySourceChannel_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 分票前的政策来源渠道
     * </pre>
     *
     * <code>string OriginalPolicySourceChannel = 2;</code>
     */
    public com.google.protobuf.ByteString
        getOriginalPolicySourceChannelBytes() {
      java.lang.Object ref = originalPolicySourceChannel_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        originalPolicySourceChannel_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 分票前的政策来源渠道
     * </pre>
     *
     * <code>string OriginalPolicySourceChannel = 2;</code>
     */
    public Builder setOriginalPolicySourceChannel(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      originalPolicySourceChannel_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 分票前的政策来源渠道
     * </pre>
     *
     * <code>string OriginalPolicySourceChannel = 2;</code>
     */
    public Builder clearOriginalPolicySourceChannel() {
      
      originalPolicySourceChannel_ = getDefaultInstance().getOriginalPolicySourceChannel();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 分票前的政策来源渠道
     * </pre>
     *
     * <code>string OriginalPolicySourceChannel = 2;</code>
     */
    public Builder setOriginalPolicySourceChannelBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      originalPolicySourceChannel_ = value;
      onChanged();
      return this;
    }

    private int originalPolicyFlightAgency_ ;
    /**
     * <pre>
     * 分票前的政策的出票票台
     * </pre>
     *
     * <code>int32 OriginalPolicyFlightAgency = 3;</code>
     */
    public int getOriginalPolicyFlightAgency() {
      return originalPolicyFlightAgency_;
    }
    /**
     * <pre>
     * 分票前的政策的出票票台
     * </pre>
     *
     * <code>int32 OriginalPolicyFlightAgency = 3;</code>
     */
    public Builder setOriginalPolicyFlightAgency(int value) {
      
      originalPolicyFlightAgency_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 分票前的政策的出票票台
     * </pre>
     *
     * <code>int32 OriginalPolicyFlightAgency = 3;</code>
     */
    public Builder clearOriginalPolicyFlightAgency() {
      
      originalPolicyFlightAgency_ = 0;
      onChanged();
      return this;
    }

    private boolean childInfantChangeBackToDirectInd_ ;
    /**
     * <pre>
     * 儿童婴儿是否转回真直联出
     * </pre>
     *
     * <code>bool ChildInfantChangeBackToDirectInd = 4;</code>
     */
    public boolean getChildInfantChangeBackToDirectInd() {
      return childInfantChangeBackToDirectInd_;
    }
    /**
     * <pre>
     * 儿童婴儿是否转回真直联出
     * </pre>
     *
     * <code>bool ChildInfantChangeBackToDirectInd = 4;</code>
     */
    public Builder setChildInfantChangeBackToDirectInd(boolean value) {
      
      childInfantChangeBackToDirectInd_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 儿童婴儿是否转回真直联出
     * </pre>
     *
     * <code>bool ChildInfantChangeBackToDirectInd = 4;</code>
     */
    public Builder clearChildInfantChangeBackToDirectInd() {
      
      childInfantChangeBackToDirectInd_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType)
  private static final com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType();
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<TicketSharingType>
      PARSER = new com.google.protobuf.AbstractParser<TicketSharingType>() {
    @java.lang.Override
    public TicketSharingType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new TicketSharingType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<TicketSharingType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<TicketSharingType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

