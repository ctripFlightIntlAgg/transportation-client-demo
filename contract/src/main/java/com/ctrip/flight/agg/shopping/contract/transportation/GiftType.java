// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.ctrip.flight.agg.shopping.contract.transportation.proto

package com.ctrip.flight.agg.shopping.contract.transportation;

/**
 * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.GiftType}
 */
public  final class GiftType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.agg.shopping.contract.transportation.GiftType)
    GiftTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use GiftType.newBuilder() to construct.
  private GiftType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private GiftType() {
    refNum_ = 0;
    giftID_ = 0L;
    iconName_ = "";
    quantity_ = 0;
    showType_ = 0;
    giftType_ = 0;
    marketingCode_ = "";
    giftService_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private GiftType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            refNum_ = input.readInt32();
            break;
          }
          case 16: {

            giftID_ = input.readInt64();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            iconName_ = s;
            break;
          }
          case 32: {

            quantity_ = input.readInt32();
            break;
          }
          case 40: {

            showType_ = input.readInt32();
            break;
          }
          case 48: {

            giftType_ = input.readInt32();
            break;
          }
          case 58: {
            java.lang.String s = input.readStringRequireUtf8();

            marketingCode_ = s;
            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
              giftService_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType>();
              mutable_bitField0_ |= 0x00000080;
            }
            giftService_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
        giftService_ = java.util.Collections.unmodifiableList(giftService_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_GiftType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_GiftType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.agg.shopping.contract.transportation.GiftType.class, com.ctrip.flight.agg.shopping.contract.transportation.GiftType.Builder.class);
  }

  private int bitField0_;
  public static final int REFNUM_FIELD_NUMBER = 1;
  private int refNum_;
  /**
   * <code>int32 RefNum = 1;</code>
   */
  public int getRefNum() {
    return refNum_;
  }

  public static final int GIFTID_FIELD_NUMBER = 2;
  private long giftID_;
  /**
   * <pre>
   * 礼盒ID，数据库中ID
   * </pre>
   *
   * <code>int64 GiftID = 2;</code>
   */
  public long getGiftID() {
    return giftID_;
  }

  public static final int ICONNAME_FIELD_NUMBER = 3;
  private volatile java.lang.Object iconName_;
  /**
   * <pre>
   * 图标名字
   * </pre>
   *
   * <code>string IconName = 3;</code>
   */
  public java.lang.String getIconName() {
    java.lang.Object ref = iconName_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      iconName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 图标名字
   * </pre>
   *
   * <code>string IconName = 3;</code>
   */
  public com.google.protobuf.ByteString
      getIconNameBytes() {
    java.lang.Object ref = iconName_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      iconName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int QUANTITY_FIELD_NUMBER = 4;
  private int quantity_;
  /**
   * <pre>
   * 礼盒数量
   * </pre>
   *
   * <code>int32 Quantity = 4;</code>
   */
  public int getQuantity() {
    return quantity_;
  }

  public static final int SHOWTYPE_FIELD_NUMBER = 5;
  private int showType_;
  /**
   * <pre>
   * 展示形式(0 普通礼盒 礼盒展示在价格；1：航班礼盒,2：航线礼盒)
   * </pre>
   *
   * <code>int32 ShowType = 5;</code>
   */
  public int getShowType() {
    return showType_;
  }

  public static final int GIFTTYPE_FIELD_NUMBER = 6;
  private int giftType_;
  /**
   * <pre>
   * 礼盒类型，0:未指定，此时ServiceList中包含多个服务类型，1：积分，2：保险，3：抵用券，4：其他，5：经深飞，6：休息室，8：优惠券，10：三亚航班，11：酒店住宿，12：行李直挂，13：机场餐食，来自DB
   * </pre>
   *
   * <code>int32 GiftType = 6;</code>
   */
  public int getGiftType() {
    return giftType_;
  }

  public static final int MARKETINGCODE_FIELD_NUMBER = 7;
  private volatile java.lang.Object marketingCode_;
  /**
   * <pre>
   * 营销Code
   * </pre>
   *
   * <code>string MarketingCode = 7;</code>
   */
  public java.lang.String getMarketingCode() {
    java.lang.Object ref = marketingCode_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      marketingCode_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 营销Code
   * </pre>
   *
   * <code>string MarketingCode = 7;</code>
   */
  public com.google.protobuf.ByteString
      getMarketingCodeBytes() {
    java.lang.Object ref = marketingCode_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      marketingCode_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int GIFTSERVICE_FIELD_NUMBER = 8;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType> giftService_;
  /**
   * <pre>
   * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType> getGiftServiceList() {
    return giftService_;
  }
  /**
   * <pre>
   * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceTypeOrBuilder> 
      getGiftServiceOrBuilderList() {
    return giftService_;
  }
  /**
   * <pre>
   * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
   */
  public int getGiftServiceCount() {
    return giftService_.size();
  }
  /**
   * <pre>
   * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType getGiftService(int index) {
    return giftService_.get(index);
  }
  /**
   * <pre>
   * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceTypeOrBuilder getGiftServiceOrBuilder(
      int index) {
    return giftService_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (refNum_ != 0) {
      output.writeInt32(1, refNum_);
    }
    if (giftID_ != 0L) {
      output.writeInt64(2, giftID_);
    }
    if (!getIconNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, iconName_);
    }
    if (quantity_ != 0) {
      output.writeInt32(4, quantity_);
    }
    if (showType_ != 0) {
      output.writeInt32(5, showType_);
    }
    if (giftType_ != 0) {
      output.writeInt32(6, giftType_);
    }
    if (!getMarketingCodeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, marketingCode_);
    }
    for (int i = 0; i < giftService_.size(); i++) {
      output.writeMessage(8, giftService_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (refNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, refNum_);
    }
    if (giftID_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, giftID_);
    }
    if (!getIconNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, iconName_);
    }
    if (quantity_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, quantity_);
    }
    if (showType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, showType_);
    }
    if (giftType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(6, giftType_);
    }
    if (!getMarketingCodeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, marketingCode_);
    }
    for (int i = 0; i < giftService_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, giftService_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.agg.shopping.contract.transportation.GiftType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.agg.shopping.contract.transportation.GiftType other = (com.ctrip.flight.agg.shopping.contract.transportation.GiftType) obj;

    boolean result = true;
    result = result && (getRefNum()
        == other.getRefNum());
    result = result && (getGiftID()
        == other.getGiftID());
    result = result && getIconName()
        .equals(other.getIconName());
    result = result && (getQuantity()
        == other.getQuantity());
    result = result && (getShowType()
        == other.getShowType());
    result = result && (getGiftType()
        == other.getGiftType());
    result = result && getMarketingCode()
        .equals(other.getMarketingCode());
    result = result && getGiftServiceList()
        .equals(other.getGiftServiceList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + REFNUM_FIELD_NUMBER;
    hash = (53 * hash) + getRefNum();
    hash = (37 * hash) + GIFTID_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getGiftID());
    hash = (37 * hash) + ICONNAME_FIELD_NUMBER;
    hash = (53 * hash) + getIconName().hashCode();
    hash = (37 * hash) + QUANTITY_FIELD_NUMBER;
    hash = (53 * hash) + getQuantity();
    hash = (37 * hash) + SHOWTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getShowType();
    hash = (37 * hash) + GIFTTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getGiftType();
    hash = (37 * hash) + MARKETINGCODE_FIELD_NUMBER;
    hash = (53 * hash) + getMarketingCode().hashCode();
    if (getGiftServiceCount() > 0) {
      hash = (37 * hash) + GIFTSERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getGiftServiceList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.GiftType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.GiftType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.GiftType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.GiftType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.GiftType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.GiftType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.GiftType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.GiftType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.GiftType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.GiftType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.GiftType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.GiftType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.agg.shopping.contract.transportation.GiftType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.GiftType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.agg.shopping.contract.transportation.GiftType)
      com.ctrip.flight.agg.shopping.contract.transportation.GiftTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_GiftType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_GiftType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.agg.shopping.contract.transportation.GiftType.class, com.ctrip.flight.agg.shopping.contract.transportation.GiftType.Builder.class);
    }

    // Construct using com.ctrip.flight.agg.shopping.contract.transportation.GiftType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getGiftServiceFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      refNum_ = 0;

      giftID_ = 0L;

      iconName_ = "";

      quantity_ = 0;

      showType_ = 0;

      giftType_ = 0;

      marketingCode_ = "";

      if (giftServiceBuilder_ == null) {
        giftService_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
      } else {
        giftServiceBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_GiftType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.GiftType getDefaultInstanceForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.GiftType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.GiftType build() {
      com.ctrip.flight.agg.shopping.contract.transportation.GiftType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.GiftType buildPartial() {
      com.ctrip.flight.agg.shopping.contract.transportation.GiftType result = new com.ctrip.flight.agg.shopping.contract.transportation.GiftType(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.refNum_ = refNum_;
      result.giftID_ = giftID_;
      result.iconName_ = iconName_;
      result.quantity_ = quantity_;
      result.showType_ = showType_;
      result.giftType_ = giftType_;
      result.marketingCode_ = marketingCode_;
      if (giftServiceBuilder_ == null) {
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          giftService_ = java.util.Collections.unmodifiableList(giftService_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.giftService_ = giftService_;
      } else {
        result.giftService_ = giftServiceBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.agg.shopping.contract.transportation.GiftType) {
        return mergeFrom((com.ctrip.flight.agg.shopping.contract.transportation.GiftType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.agg.shopping.contract.transportation.GiftType other) {
      if (other == com.ctrip.flight.agg.shopping.contract.transportation.GiftType.getDefaultInstance()) return this;
      if (other.getRefNum() != 0) {
        setRefNum(other.getRefNum());
      }
      if (other.getGiftID() != 0L) {
        setGiftID(other.getGiftID());
      }
      if (!other.getIconName().isEmpty()) {
        iconName_ = other.iconName_;
        onChanged();
      }
      if (other.getQuantity() != 0) {
        setQuantity(other.getQuantity());
      }
      if (other.getShowType() != 0) {
        setShowType(other.getShowType());
      }
      if (other.getGiftType() != 0) {
        setGiftType(other.getGiftType());
      }
      if (!other.getMarketingCode().isEmpty()) {
        marketingCode_ = other.marketingCode_;
        onChanged();
      }
      if (giftServiceBuilder_ == null) {
        if (!other.giftService_.isEmpty()) {
          if (giftService_.isEmpty()) {
            giftService_ = other.giftService_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureGiftServiceIsMutable();
            giftService_.addAll(other.giftService_);
          }
          onChanged();
        }
      } else {
        if (!other.giftService_.isEmpty()) {
          if (giftServiceBuilder_.isEmpty()) {
            giftServiceBuilder_.dispose();
            giftServiceBuilder_ = null;
            giftService_ = other.giftService_;
            bitField0_ = (bitField0_ & ~0x00000080);
            giftServiceBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getGiftServiceFieldBuilder() : null;
          } else {
            giftServiceBuilder_.addAllMessages(other.giftService_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.agg.shopping.contract.transportation.GiftType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.agg.shopping.contract.transportation.GiftType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int refNum_ ;
    /**
     * <code>int32 RefNum = 1;</code>
     */
    public int getRefNum() {
      return refNum_;
    }
    /**
     * <code>int32 RefNum = 1;</code>
     */
    public Builder setRefNum(int value) {
      
      refNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int32 RefNum = 1;</code>
     */
    public Builder clearRefNum() {
      
      refNum_ = 0;
      onChanged();
      return this;
    }

    private long giftID_ ;
    /**
     * <pre>
     * 礼盒ID，数据库中ID
     * </pre>
     *
     * <code>int64 GiftID = 2;</code>
     */
    public long getGiftID() {
      return giftID_;
    }
    /**
     * <pre>
     * 礼盒ID，数据库中ID
     * </pre>
     *
     * <code>int64 GiftID = 2;</code>
     */
    public Builder setGiftID(long value) {
      
      giftID_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 礼盒ID，数据库中ID
     * </pre>
     *
     * <code>int64 GiftID = 2;</code>
     */
    public Builder clearGiftID() {
      
      giftID_ = 0L;
      onChanged();
      return this;
    }

    private java.lang.Object iconName_ = "";
    /**
     * <pre>
     * 图标名字
     * </pre>
     *
     * <code>string IconName = 3;</code>
     */
    public java.lang.String getIconName() {
      java.lang.Object ref = iconName_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        iconName_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 图标名字
     * </pre>
     *
     * <code>string IconName = 3;</code>
     */
    public com.google.protobuf.ByteString
        getIconNameBytes() {
      java.lang.Object ref = iconName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        iconName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 图标名字
     * </pre>
     *
     * <code>string IconName = 3;</code>
     */
    public Builder setIconName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      iconName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 图标名字
     * </pre>
     *
     * <code>string IconName = 3;</code>
     */
    public Builder clearIconName() {
      
      iconName_ = getDefaultInstance().getIconName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 图标名字
     * </pre>
     *
     * <code>string IconName = 3;</code>
     */
    public Builder setIconNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      iconName_ = value;
      onChanged();
      return this;
    }

    private int quantity_ ;
    /**
     * <pre>
     * 礼盒数量
     * </pre>
     *
     * <code>int32 Quantity = 4;</code>
     */
    public int getQuantity() {
      return quantity_;
    }
    /**
     * <pre>
     * 礼盒数量
     * </pre>
     *
     * <code>int32 Quantity = 4;</code>
     */
    public Builder setQuantity(int value) {
      
      quantity_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 礼盒数量
     * </pre>
     *
     * <code>int32 Quantity = 4;</code>
     */
    public Builder clearQuantity() {
      
      quantity_ = 0;
      onChanged();
      return this;
    }

    private int showType_ ;
    /**
     * <pre>
     * 展示形式(0 普通礼盒 礼盒展示在价格；1：航班礼盒,2：航线礼盒)
     * </pre>
     *
     * <code>int32 ShowType = 5;</code>
     */
    public int getShowType() {
      return showType_;
    }
    /**
     * <pre>
     * 展示形式(0 普通礼盒 礼盒展示在价格；1：航班礼盒,2：航线礼盒)
     * </pre>
     *
     * <code>int32 ShowType = 5;</code>
     */
    public Builder setShowType(int value) {
      
      showType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 展示形式(0 普通礼盒 礼盒展示在价格；1：航班礼盒,2：航线礼盒)
     * </pre>
     *
     * <code>int32 ShowType = 5;</code>
     */
    public Builder clearShowType() {
      
      showType_ = 0;
      onChanged();
      return this;
    }

    private int giftType_ ;
    /**
     * <pre>
     * 礼盒类型，0:未指定，此时ServiceList中包含多个服务类型，1：积分，2：保险，3：抵用券，4：其他，5：经深飞，6：休息室，8：优惠券，10：三亚航班，11：酒店住宿，12：行李直挂，13：机场餐食，来自DB
     * </pre>
     *
     * <code>int32 GiftType = 6;</code>
     */
    public int getGiftType() {
      return giftType_;
    }
    /**
     * <pre>
     * 礼盒类型，0:未指定，此时ServiceList中包含多个服务类型，1：积分，2：保险，3：抵用券，4：其他，5：经深飞，6：休息室，8：优惠券，10：三亚航班，11：酒店住宿，12：行李直挂，13：机场餐食，来自DB
     * </pre>
     *
     * <code>int32 GiftType = 6;</code>
     */
    public Builder setGiftType(int value) {
      
      giftType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 礼盒类型，0:未指定，此时ServiceList中包含多个服务类型，1：积分，2：保险，3：抵用券，4：其他，5：经深飞，6：休息室，8：优惠券，10：三亚航班，11：酒店住宿，12：行李直挂，13：机场餐食，来自DB
     * </pre>
     *
     * <code>int32 GiftType = 6;</code>
     */
    public Builder clearGiftType() {
      
      giftType_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object marketingCode_ = "";
    /**
     * <pre>
     * 营销Code
     * </pre>
     *
     * <code>string MarketingCode = 7;</code>
     */
    public java.lang.String getMarketingCode() {
      java.lang.Object ref = marketingCode_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        marketingCode_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 营销Code
     * </pre>
     *
     * <code>string MarketingCode = 7;</code>
     */
    public com.google.protobuf.ByteString
        getMarketingCodeBytes() {
      java.lang.Object ref = marketingCode_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        marketingCode_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 营销Code
     * </pre>
     *
     * <code>string MarketingCode = 7;</code>
     */
    public Builder setMarketingCode(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      marketingCode_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 营销Code
     * </pre>
     *
     * <code>string MarketingCode = 7;</code>
     */
    public Builder clearMarketingCode() {
      
      marketingCode_ = getDefaultInstance().getMarketingCode();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 营销Code
     * </pre>
     *
     * <code>string MarketingCode = 7;</code>
     */
    public Builder setMarketingCodeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      marketingCode_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType> giftService_ =
      java.util.Collections.emptyList();
    private void ensureGiftServiceIsMutable() {
      if (!((bitField0_ & 0x00000080) == 0x00000080)) {
        giftService_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType>(giftService_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType, com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceTypeOrBuilder> giftServiceBuilder_;

    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType> getGiftServiceList() {
      if (giftServiceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(giftService_);
      } else {
        return giftServiceBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public int getGiftServiceCount() {
      if (giftServiceBuilder_ == null) {
        return giftService_.size();
      } else {
        return giftServiceBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType getGiftService(int index) {
      if (giftServiceBuilder_ == null) {
        return giftService_.get(index);
      } else {
        return giftServiceBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public Builder setGiftService(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType value) {
      if (giftServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGiftServiceIsMutable();
        giftService_.set(index, value);
        onChanged();
      } else {
        giftServiceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public Builder setGiftService(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType.Builder builderForValue) {
      if (giftServiceBuilder_ == null) {
        ensureGiftServiceIsMutable();
        giftService_.set(index, builderForValue.build());
        onChanged();
      } else {
        giftServiceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public Builder addGiftService(com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType value) {
      if (giftServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGiftServiceIsMutable();
        giftService_.add(value);
        onChanged();
      } else {
        giftServiceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public Builder addGiftService(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType value) {
      if (giftServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureGiftServiceIsMutable();
        giftService_.add(index, value);
        onChanged();
      } else {
        giftServiceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public Builder addGiftService(
        com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType.Builder builderForValue) {
      if (giftServiceBuilder_ == null) {
        ensureGiftServiceIsMutable();
        giftService_.add(builderForValue.build());
        onChanged();
      } else {
        giftServiceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public Builder addGiftService(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType.Builder builderForValue) {
      if (giftServiceBuilder_ == null) {
        ensureGiftServiceIsMutable();
        giftService_.add(index, builderForValue.build());
        onChanged();
      } else {
        giftServiceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public Builder addAllGiftService(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType> values) {
      if (giftServiceBuilder_ == null) {
        ensureGiftServiceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, giftService_);
        onChanged();
      } else {
        giftServiceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public Builder clearGiftService() {
      if (giftServiceBuilder_ == null) {
        giftService_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        giftServiceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public Builder removeGiftService(int index) {
      if (giftServiceBuilder_ == null) {
        ensureGiftServiceIsMutable();
        giftService_.remove(index);
        onChanged();
      } else {
        giftServiceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType.Builder getGiftServiceBuilder(
        int index) {
      return getGiftServiceFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceTypeOrBuilder getGiftServiceOrBuilder(
        int index) {
      if (giftServiceBuilder_ == null) {
        return giftService_.get(index);  } else {
        return giftServiceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceTypeOrBuilder> 
         getGiftServiceOrBuilderList() {
      if (giftServiceBuilder_ != null) {
        return giftServiceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(giftService_);
      }
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType.Builder addGiftServiceBuilder() {
      return getGiftServiceFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType.getDefaultInstance());
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType.Builder addGiftServiceBuilder(
        int index) {
      return getGiftServiceFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType.getDefaultInstance());
    }
    /**
     * <pre>
     * 中转服务，此时GIftType=0。中转环节会用，用于基础类服务标识——行李直挂、一票到底、航班变无忧、行李代转运，一个礼盒中可以勾选多个类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType GiftService = 8;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType.Builder> 
         getGiftServiceBuilderList() {
      return getGiftServiceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType, com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceTypeOrBuilder> 
        getGiftServiceFieldBuilder() {
      if (giftServiceBuilder_ == null) {
        giftServiceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType, com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.GiftServiceTypeOrBuilder>(
                giftService_,
                ((bitField0_ & 0x00000080) == 0x00000080),
                getParentForChildren(),
                isClean());
        giftService_ = null;
      }
      return giftServiceBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.agg.shopping.contract.transportation.GiftType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.agg.shopping.contract.transportation.GiftType)
  private static final com.ctrip.flight.agg.shopping.contract.transportation.GiftType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.agg.shopping.contract.transportation.GiftType();
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.GiftType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<GiftType>
      PARSER = new com.google.protobuf.AbstractParser<GiftType>() {
    @java.lang.Override
    public GiftType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new GiftType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<GiftType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<GiftType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.agg.shopping.contract.transportation.GiftType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

