// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.ctrip.flight.agg.shopping.contract.transportation.response.proto

package com.ctrip.flight.agg.shopping.contract.transportation.response;

public interface TicketSharingTypeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   **
   *分票类型
   *[autoGenerated commentRef="TicketSharingType"]
   *NORMAL_AVATAR	 :普通伪航司分票
   *RAW_WITH_AGENCY	 :指定票台佣金的伪航司分票
   *SPECIAL_WITH_AGENCY	 :指定票台特殊政策的伪航司分票
   *RULE_WITH_AGENCY	 :指定票台规则运价的伪航司分票
   *NDC_B2T	 :NDC B2T分票，这里的分票是与有航司直营标签政策的展现比例
   *NDC_QNRDR	 :NDC官网代购分票，这里的分票是与有航司直营标签政策的展示比例
   *SPECIFIC_AIRLINE	 :特定航司的直联分票，这些航司不支持航司直营标签，如：9C、AQ，用PS=2的政策替换PS=4的这些航司的政策
   *GRAY_RAW	 :灰名单佣金分票，这里的分票是灰名单票台的佣金针对普通佣金的分票
   * </pre>
   *
   * <code>string Type = 1;</code>
   */
  java.lang.String getType();
  /**
   * <pre>
   **
   *分票类型
   *[autoGenerated commentRef="TicketSharingType"]
   *NORMAL_AVATAR	 :普通伪航司分票
   *RAW_WITH_AGENCY	 :指定票台佣金的伪航司分票
   *SPECIAL_WITH_AGENCY	 :指定票台特殊政策的伪航司分票
   *RULE_WITH_AGENCY	 :指定票台规则运价的伪航司分票
   *NDC_B2T	 :NDC B2T分票，这里的分票是与有航司直营标签政策的展现比例
   *NDC_QNRDR	 :NDC官网代购分票，这里的分票是与有航司直营标签政策的展示比例
   *SPECIFIC_AIRLINE	 :特定航司的直联分票，这些航司不支持航司直营标签，如：9C、AQ，用PS=2的政策替换PS=4的这些航司的政策
   *GRAY_RAW	 :灰名单佣金分票，这里的分票是灰名单票台的佣金针对普通佣金的分票
   * </pre>
   *
   * <code>string Type = 1;</code>
   */
  com.google.protobuf.ByteString
      getTypeBytes();

  /**
   * <pre>
   * 分票前的政策来源渠道
   * </pre>
   *
   * <code>string OriginalPolicySourceChannel = 2;</code>
   */
  java.lang.String getOriginalPolicySourceChannel();
  /**
   * <pre>
   * 分票前的政策来源渠道
   * </pre>
   *
   * <code>string OriginalPolicySourceChannel = 2;</code>
   */
  com.google.protobuf.ByteString
      getOriginalPolicySourceChannelBytes();

  /**
   * <pre>
   * 分票前的政策的出票票台
   * </pre>
   *
   * <code>int32 OriginalPolicyFlightAgency = 3;</code>
   */
  int getOriginalPolicyFlightAgency();

  /**
   * <pre>
   * 儿童婴儿是否转回真直联出
   * </pre>
   *
   * <code>bool ChildInfantChangeBackToDirectInd = 4;</code>
   */
  boolean getChildInfantChangeBackToDirectInd();
}
