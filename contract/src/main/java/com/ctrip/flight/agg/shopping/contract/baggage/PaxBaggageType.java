// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.ctrip.flight.agg.shopping.contract.baggage.proto

package com.ctrip.flight.agg.shopping.contract.baggage;

/**
 * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType}
 */
public  final class PaxBaggageType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType)
    PaxBaggageTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use PaxBaggageType.newBuilder() to construct.
  private PaxBaggageType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private PaxBaggageType() {
    ageTypeGroup_ = 0;
    baggageWay_ = java.util.Collections.emptyList();
    baggageSpecifiedDesc_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private PaxBaggageType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            ageTypeGroup_ = input.readInt32();
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              baggageWay_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType>();
              mutable_bitField0_ |= 0x00000002;
            }
            baggageWay_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType.parser(), extensionRegistry));
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            baggageSpecifiedDesc_ = s;
            break;
          }
          case 34: {
            com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension.Builder subBuilder = null;
            if (paxBaggageExtension_ != null) {
              subBuilder = paxBaggageExtension_.toBuilder();
            }
            paxBaggageExtension_ = input.readMessage(com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(paxBaggageExtension_);
              paxBaggageExtension_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        baggageWay_ = java.util.Collections.unmodifiableList(baggageWay_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.agg.shopping.contract.baggage.ComCtripFlightAggShoppingContractBaggage.internal_static_com_ctrip_flight_agg_shopping_contract_baggage_PaxBaggageType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.agg.shopping.contract.baggage.ComCtripFlightAggShoppingContractBaggage.internal_static_com_ctrip_flight_agg_shopping_contract_baggage_PaxBaggageType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType.class, com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType.Builder.class);
  }

  private int bitField0_;
  public static final int AGETYPEGROUP_FIELD_NUMBER = 1;
  private int ageTypeGroup_;
  /**
   * <pre>
   * 年龄组合
   * </pre>
   *
   * <code>int32 AgeTypeGroup = 1;</code>
   */
  public int getAgeTypeGroup() {
    return ageTypeGroup_;
  }

  public static final int BAGGAGEWAY_FIELD_NUMBER = 2;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType> baggageWay_;
  /**
   * <pre>
   * 行李额类型
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType> getBaggageWayList() {
    return baggageWay_;
  }
  /**
   * <pre>
   * 行李额类型
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayTypeOrBuilder> 
      getBaggageWayOrBuilderList() {
    return baggageWay_;
  }
  /**
   * <pre>
   * 行李额类型
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
   */
  public int getBaggageWayCount() {
    return baggageWay_.size();
  }
  /**
   * <pre>
   * 行李额类型
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType getBaggageWay(int index) {
    return baggageWay_.get(index);
  }
  /**
   * <pre>
   * 行李额类型
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayTypeOrBuilder getBaggageWayOrBuilder(
      int index) {
    return baggageWay_.get(index);
  }

  public static final int BAGGAGESPECIFIEDDESC_FIELD_NUMBER = 3;
  private volatile java.lang.Object baggageSpecifiedDesc_;
  /**
   * <pre>
   * 行李描述，根据请求的Language决定输出的语言类型
   * </pre>
   *
   * <code>string BaggageSpecifiedDesc = 3;</code>
   */
  public java.lang.String getBaggageSpecifiedDesc() {
    java.lang.Object ref = baggageSpecifiedDesc_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      baggageSpecifiedDesc_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 行李描述，根据请求的Language决定输出的语言类型
   * </pre>
   *
   * <code>string BaggageSpecifiedDesc = 3;</code>
   */
  public com.google.protobuf.ByteString
      getBaggageSpecifiedDescBytes() {
    java.lang.Object ref = baggageSpecifiedDesc_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      baggageSpecifiedDesc_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PAXBAGGAGEEXTENSION_FIELD_NUMBER = 4;
  private com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension paxBaggageExtension_;
  /**
   * <pre>
   * 乘客行李信息扩展
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension PaxBaggageExtension = 4;</code>
   */
  public boolean hasPaxBaggageExtension() {
    return paxBaggageExtension_ != null;
  }
  /**
   * <pre>
   * 乘客行李信息扩展
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension PaxBaggageExtension = 4;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension getPaxBaggageExtension() {
    return paxBaggageExtension_ == null ? com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension.getDefaultInstance() : paxBaggageExtension_;
  }
  /**
   * <pre>
   * 乘客行李信息扩展
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension PaxBaggageExtension = 4;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtensionOrBuilder getPaxBaggageExtensionOrBuilder() {
    return getPaxBaggageExtension();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (ageTypeGroup_ != 0) {
      output.writeInt32(1, ageTypeGroup_);
    }
    for (int i = 0; i < baggageWay_.size(); i++) {
      output.writeMessage(2, baggageWay_.get(i));
    }
    if (!getBaggageSpecifiedDescBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, baggageSpecifiedDesc_);
    }
    if (paxBaggageExtension_ != null) {
      output.writeMessage(4, getPaxBaggageExtension());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (ageTypeGroup_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, ageTypeGroup_);
    }
    for (int i = 0; i < baggageWay_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, baggageWay_.get(i));
    }
    if (!getBaggageSpecifiedDescBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, baggageSpecifiedDesc_);
    }
    if (paxBaggageExtension_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getPaxBaggageExtension());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType other = (com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType) obj;

    boolean result = true;
    result = result && (getAgeTypeGroup()
        == other.getAgeTypeGroup());
    result = result && getBaggageWayList()
        .equals(other.getBaggageWayList());
    result = result && getBaggageSpecifiedDesc()
        .equals(other.getBaggageSpecifiedDesc());
    result = result && (hasPaxBaggageExtension() == other.hasPaxBaggageExtension());
    if (hasPaxBaggageExtension()) {
      result = result && getPaxBaggageExtension()
          .equals(other.getPaxBaggageExtension());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + AGETYPEGROUP_FIELD_NUMBER;
    hash = (53 * hash) + getAgeTypeGroup();
    if (getBaggageWayCount() > 0) {
      hash = (37 * hash) + BAGGAGEWAY_FIELD_NUMBER;
      hash = (53 * hash) + getBaggageWayList().hashCode();
    }
    hash = (37 * hash) + BAGGAGESPECIFIEDDESC_FIELD_NUMBER;
    hash = (53 * hash) + getBaggageSpecifiedDesc().hashCode();
    if (hasPaxBaggageExtension()) {
      hash = (37 * hash) + PAXBAGGAGEEXTENSION_FIELD_NUMBER;
      hash = (53 * hash) + getPaxBaggageExtension().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType)
      com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.agg.shopping.contract.baggage.ComCtripFlightAggShoppingContractBaggage.internal_static_com_ctrip_flight_agg_shopping_contract_baggage_PaxBaggageType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.agg.shopping.contract.baggage.ComCtripFlightAggShoppingContractBaggage.internal_static_com_ctrip_flight_agg_shopping_contract_baggage_PaxBaggageType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType.class, com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType.Builder.class);
    }

    // Construct using com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getBaggageWayFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      ageTypeGroup_ = 0;

      if (baggageWayBuilder_ == null) {
        baggageWay_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        baggageWayBuilder_.clear();
      }
      baggageSpecifiedDesc_ = "";

      if (paxBaggageExtensionBuilder_ == null) {
        paxBaggageExtension_ = null;
      } else {
        paxBaggageExtension_ = null;
        paxBaggageExtensionBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.agg.shopping.contract.baggage.ComCtripFlightAggShoppingContractBaggage.internal_static_com_ctrip_flight_agg_shopping_contract_baggage_PaxBaggageType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType getDefaultInstanceForType() {
      return com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType build() {
      com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType buildPartial() {
      com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType result = new com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.ageTypeGroup_ = ageTypeGroup_;
      if (baggageWayBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          baggageWay_ = java.util.Collections.unmodifiableList(baggageWay_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.baggageWay_ = baggageWay_;
      } else {
        result.baggageWay_ = baggageWayBuilder_.build();
      }
      result.baggageSpecifiedDesc_ = baggageSpecifiedDesc_;
      if (paxBaggageExtensionBuilder_ == null) {
        result.paxBaggageExtension_ = paxBaggageExtension_;
      } else {
        result.paxBaggageExtension_ = paxBaggageExtensionBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType) {
        return mergeFrom((com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType other) {
      if (other == com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType.getDefaultInstance()) return this;
      if (other.getAgeTypeGroup() != 0) {
        setAgeTypeGroup(other.getAgeTypeGroup());
      }
      if (baggageWayBuilder_ == null) {
        if (!other.baggageWay_.isEmpty()) {
          if (baggageWay_.isEmpty()) {
            baggageWay_ = other.baggageWay_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBaggageWayIsMutable();
            baggageWay_.addAll(other.baggageWay_);
          }
          onChanged();
        }
      } else {
        if (!other.baggageWay_.isEmpty()) {
          if (baggageWayBuilder_.isEmpty()) {
            baggageWayBuilder_.dispose();
            baggageWayBuilder_ = null;
            baggageWay_ = other.baggageWay_;
            bitField0_ = (bitField0_ & ~0x00000002);
            baggageWayBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBaggageWayFieldBuilder() : null;
          } else {
            baggageWayBuilder_.addAllMessages(other.baggageWay_);
          }
        }
      }
      if (!other.getBaggageSpecifiedDesc().isEmpty()) {
        baggageSpecifiedDesc_ = other.baggageSpecifiedDesc_;
        onChanged();
      }
      if (other.hasPaxBaggageExtension()) {
        mergePaxBaggageExtension(other.getPaxBaggageExtension());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int ageTypeGroup_ ;
    /**
     * <pre>
     * 年龄组合
     * </pre>
     *
     * <code>int32 AgeTypeGroup = 1;</code>
     */
    public int getAgeTypeGroup() {
      return ageTypeGroup_;
    }
    /**
     * <pre>
     * 年龄组合
     * </pre>
     *
     * <code>int32 AgeTypeGroup = 1;</code>
     */
    public Builder setAgeTypeGroup(int value) {
      
      ageTypeGroup_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 年龄组合
     * </pre>
     *
     * <code>int32 AgeTypeGroup = 1;</code>
     */
    public Builder clearAgeTypeGroup() {
      
      ageTypeGroup_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType> baggageWay_ =
      java.util.Collections.emptyList();
    private void ensureBaggageWayIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        baggageWay_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType>(baggageWay_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType, com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType.Builder, com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayTypeOrBuilder> baggageWayBuilder_;

    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType> getBaggageWayList() {
      if (baggageWayBuilder_ == null) {
        return java.util.Collections.unmodifiableList(baggageWay_);
      } else {
        return baggageWayBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public int getBaggageWayCount() {
      if (baggageWayBuilder_ == null) {
        return baggageWay_.size();
      } else {
        return baggageWayBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType getBaggageWay(int index) {
      if (baggageWayBuilder_ == null) {
        return baggageWay_.get(index);
      } else {
        return baggageWayBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public Builder setBaggageWay(
        int index, com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType value) {
      if (baggageWayBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageWayIsMutable();
        baggageWay_.set(index, value);
        onChanged();
      } else {
        baggageWayBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public Builder setBaggageWay(
        int index, com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType.Builder builderForValue) {
      if (baggageWayBuilder_ == null) {
        ensureBaggageWayIsMutable();
        baggageWay_.set(index, builderForValue.build());
        onChanged();
      } else {
        baggageWayBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public Builder addBaggageWay(com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType value) {
      if (baggageWayBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageWayIsMutable();
        baggageWay_.add(value);
        onChanged();
      } else {
        baggageWayBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public Builder addBaggageWay(
        int index, com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType value) {
      if (baggageWayBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageWayIsMutable();
        baggageWay_.add(index, value);
        onChanged();
      } else {
        baggageWayBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public Builder addBaggageWay(
        com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType.Builder builderForValue) {
      if (baggageWayBuilder_ == null) {
        ensureBaggageWayIsMutable();
        baggageWay_.add(builderForValue.build());
        onChanged();
      } else {
        baggageWayBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public Builder addBaggageWay(
        int index, com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType.Builder builderForValue) {
      if (baggageWayBuilder_ == null) {
        ensureBaggageWayIsMutable();
        baggageWay_.add(index, builderForValue.build());
        onChanged();
      } else {
        baggageWayBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public Builder addAllBaggageWay(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType> values) {
      if (baggageWayBuilder_ == null) {
        ensureBaggageWayIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, baggageWay_);
        onChanged();
      } else {
        baggageWayBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public Builder clearBaggageWay() {
      if (baggageWayBuilder_ == null) {
        baggageWay_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        baggageWayBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public Builder removeBaggageWay(int index) {
      if (baggageWayBuilder_ == null) {
        ensureBaggageWayIsMutable();
        baggageWay_.remove(index);
        onChanged();
      } else {
        baggageWayBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType.Builder getBaggageWayBuilder(
        int index) {
      return getBaggageWayFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayTypeOrBuilder getBaggageWayOrBuilder(
        int index) {
      if (baggageWayBuilder_ == null) {
        return baggageWay_.get(index);  } else {
        return baggageWayBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayTypeOrBuilder> 
         getBaggageWayOrBuilderList() {
      if (baggageWayBuilder_ != null) {
        return baggageWayBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(baggageWay_);
      }
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType.Builder addBaggageWayBuilder() {
      return getBaggageWayFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType.getDefaultInstance());
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType.Builder addBaggageWayBuilder(
        int index) {
      return getBaggageWayFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType.getDefaultInstance());
    }
    /**
     * <pre>
     * 行李额类型
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType BaggageWay = 2;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType.Builder> 
         getBaggageWayBuilderList() {
      return getBaggageWayFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType, com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType.Builder, com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayTypeOrBuilder> 
        getBaggageWayFieldBuilder() {
      if (baggageWayBuilder_ == null) {
        baggageWayBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType, com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayType.Builder, com.ctrip.flight.agg.shopping.contract.baggage.BaggageWayTypeOrBuilder>(
                baggageWay_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        baggageWay_ = null;
      }
      return baggageWayBuilder_;
    }

    private java.lang.Object baggageSpecifiedDesc_ = "";
    /**
     * <pre>
     * 行李描述，根据请求的Language决定输出的语言类型
     * </pre>
     *
     * <code>string BaggageSpecifiedDesc = 3;</code>
     */
    public java.lang.String getBaggageSpecifiedDesc() {
      java.lang.Object ref = baggageSpecifiedDesc_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        baggageSpecifiedDesc_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 行李描述，根据请求的Language决定输出的语言类型
     * </pre>
     *
     * <code>string BaggageSpecifiedDesc = 3;</code>
     */
    public com.google.protobuf.ByteString
        getBaggageSpecifiedDescBytes() {
      java.lang.Object ref = baggageSpecifiedDesc_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        baggageSpecifiedDesc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 行李描述，根据请求的Language决定输出的语言类型
     * </pre>
     *
     * <code>string BaggageSpecifiedDesc = 3;</code>
     */
    public Builder setBaggageSpecifiedDesc(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      baggageSpecifiedDesc_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 行李描述，根据请求的Language决定输出的语言类型
     * </pre>
     *
     * <code>string BaggageSpecifiedDesc = 3;</code>
     */
    public Builder clearBaggageSpecifiedDesc() {
      
      baggageSpecifiedDesc_ = getDefaultInstance().getBaggageSpecifiedDesc();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 行李描述，根据请求的Language决定输出的语言类型
     * </pre>
     *
     * <code>string BaggageSpecifiedDesc = 3;</code>
     */
    public Builder setBaggageSpecifiedDescBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      baggageSpecifiedDesc_ = value;
      onChanged();
      return this;
    }

    private com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension paxBaggageExtension_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension, com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension.Builder, com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtensionOrBuilder> paxBaggageExtensionBuilder_;
    /**
     * <pre>
     * 乘客行李信息扩展
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension PaxBaggageExtension = 4;</code>
     */
    public boolean hasPaxBaggageExtension() {
      return paxBaggageExtensionBuilder_ != null || paxBaggageExtension_ != null;
    }
    /**
     * <pre>
     * 乘客行李信息扩展
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension PaxBaggageExtension = 4;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension getPaxBaggageExtension() {
      if (paxBaggageExtensionBuilder_ == null) {
        return paxBaggageExtension_ == null ? com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension.getDefaultInstance() : paxBaggageExtension_;
      } else {
        return paxBaggageExtensionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 乘客行李信息扩展
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension PaxBaggageExtension = 4;</code>
     */
    public Builder setPaxBaggageExtension(com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension value) {
      if (paxBaggageExtensionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        paxBaggageExtension_ = value;
        onChanged();
      } else {
        paxBaggageExtensionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 乘客行李信息扩展
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension PaxBaggageExtension = 4;</code>
     */
    public Builder setPaxBaggageExtension(
        com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension.Builder builderForValue) {
      if (paxBaggageExtensionBuilder_ == null) {
        paxBaggageExtension_ = builderForValue.build();
        onChanged();
      } else {
        paxBaggageExtensionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 乘客行李信息扩展
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension PaxBaggageExtension = 4;</code>
     */
    public Builder mergePaxBaggageExtension(com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension value) {
      if (paxBaggageExtensionBuilder_ == null) {
        if (paxBaggageExtension_ != null) {
          paxBaggageExtension_ =
            com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension.newBuilder(paxBaggageExtension_).mergeFrom(value).buildPartial();
        } else {
          paxBaggageExtension_ = value;
        }
        onChanged();
      } else {
        paxBaggageExtensionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 乘客行李信息扩展
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension PaxBaggageExtension = 4;</code>
     */
    public Builder clearPaxBaggageExtension() {
      if (paxBaggageExtensionBuilder_ == null) {
        paxBaggageExtension_ = null;
        onChanged();
      } else {
        paxBaggageExtension_ = null;
        paxBaggageExtensionBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 乘客行李信息扩展
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension PaxBaggageExtension = 4;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension.Builder getPaxBaggageExtensionBuilder() {
      
      onChanged();
      return getPaxBaggageExtensionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 乘客行李信息扩展
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension PaxBaggageExtension = 4;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtensionOrBuilder getPaxBaggageExtensionOrBuilder() {
      if (paxBaggageExtensionBuilder_ != null) {
        return paxBaggageExtensionBuilder_.getMessageOrBuilder();
      } else {
        return paxBaggageExtension_ == null ?
            com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension.getDefaultInstance() : paxBaggageExtension_;
      }
    }
    /**
     * <pre>
     * 乘客行李信息扩展
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension PaxBaggageExtension = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension, com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension.Builder, com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtensionOrBuilder> 
        getPaxBaggageExtensionFieldBuilder() {
      if (paxBaggageExtensionBuilder_ == null) {
        paxBaggageExtensionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension, com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtension.Builder, com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageExtensionOrBuilder>(
                getPaxBaggageExtension(),
                getParentForChildren(),
                isClean());
        paxBaggageExtension_ = null;
      }
      return paxBaggageExtensionBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType)
  private static final com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType();
  }

  public static com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<PaxBaggageType>
      PARSER = new com.google.protobuf.AbstractParser<PaxBaggageType>() {
    @java.lang.Override
    public PaxBaggageType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new PaxBaggageType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<PaxBaggageType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<PaxBaggageType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.agg.shopping.contract.baggage.PaxBaggageType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

