// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.ctrip.flight.agg.shopping.contract.transportation.response.proto

package com.ctrip.flight.agg.shopping.contract.transportation.response;

/**
 * <pre>
 * 预订场景信息
 * </pre>
 *
 * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType}
 */
public  final class FlightProductBookingSceneType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType)
    FlightProductBookingSceneTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FlightProductBookingSceneType.newBuilder() to construct.
  private FlightProductBookingSceneType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FlightProductBookingSceneType() {
    refNum_ = 0;
    deprecatedTag_ = java.util.Collections.emptyList();
    additionalTag_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FlightProductBookingSceneType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            refNum_ = input.readInt32();
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              deprecatedTag_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType>();
              mutable_bitField0_ |= 0x00000002;
            }
            deprecatedTag_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              additionalTag_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType>();
              mutable_bitField0_ |= 0x00000004;
            }
            additionalTag_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.parser(), extensionRegistry));
            break;
          }
          case 34: {
            com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.Builder subBuilder = null;
            if (ticketSharing_ != null) {
              subBuilder = ticketSharing_.toBuilder();
            }
            ticketSharing_ = input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(ticketSharing_);
              ticketSharing_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType.Builder subBuilder = null;
            if (transitPolicy_ != null) {
              subBuilder = transitPolicy_.toBuilder();
            }
            transitPolicy_ = input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(transitPolicy_);
              transitPolicy_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        deprecatedTag_ = java.util.Collections.unmodifiableList(deprecatedTag_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        additionalTag_ = java.util.Collections.unmodifiableList(additionalTag_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_FlightProductBookingSceneType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_FlightProductBookingSceneType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType.class, com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType.Builder.class);
  }

  private int bitField0_;
  public static final int REFNUM_FIELD_NUMBER = 1;
  private int refNum_;
  /**
   * <pre>
   * 索引号
   * </pre>
   *
   * <code>int32 RefNum = 1;</code>
   */
  public int getRefNum() {
    return refNum_;
  }

  public static final int DEPRECATEDTAG_FIELD_NUMBER = 2;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> deprecatedTag_;
  /**
   * <pre>
   **
   *对应原DeprecatedInfo 作为待废弃兼容实体的替换
   *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> getDeprecatedTagList() {
    return deprecatedTag_;
  }
  /**
   * <pre>
   **
   *对应原DeprecatedInfo 作为待废弃兼容实体的替换
   *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> 
      getDeprecatedTagOrBuilderList() {
    return deprecatedTag_;
  }
  /**
   * <pre>
   **
   *对应原DeprecatedInfo 作为待废弃兼容实体的替换
   *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
   */
  public int getDeprecatedTagCount() {
    return deprecatedTag_.size();
  }
  /**
   * <pre>
   **
   *对应原DeprecatedInfo 作为待废弃兼容实体的替换
   *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType getDeprecatedTag(int index) {
    return deprecatedTag_.get(index);
  }
  /**
   * <pre>
   **
   *对应原DeprecatedInfo 作为待废弃兼容实体的替换
   *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder getDeprecatedTagOrBuilder(
      int index) {
    return deprecatedTag_.get(index);
  }

  public static final int ADDITIONALTAG_FIELD_NUMBER = 3;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> additionalTag_;
  /**
   * <pre>
   **
   *对应原DeprecatedInfo.AdditionalInfoList
   *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
   *3	 :废弃,保留占位
   *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
   *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
   *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
   *7	 :废弃,保留占位 -- LuggageRemarks
   *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
   *9	 :废弃,保留占位
   *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
   *11	 :PriceAdjustment, 废弃
   *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
   *13	 :废弃,保留占位
   *14	 :废弃,保留占位
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> getAdditionalTagList() {
    return additionalTag_;
  }
  /**
   * <pre>
   **
   *对应原DeprecatedInfo.AdditionalInfoList
   *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
   *3	 :废弃,保留占位
   *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
   *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
   *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
   *7	 :废弃,保留占位 -- LuggageRemarks
   *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
   *9	 :废弃,保留占位
   *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
   *11	 :PriceAdjustment, 废弃
   *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
   *13	 :废弃,保留占位
   *14	 :废弃,保留占位
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> 
      getAdditionalTagOrBuilderList() {
    return additionalTag_;
  }
  /**
   * <pre>
   **
   *对应原DeprecatedInfo.AdditionalInfoList
   *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
   *3	 :废弃,保留占位
   *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
   *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
   *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
   *7	 :废弃,保留占位 -- LuggageRemarks
   *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
   *9	 :废弃,保留占位
   *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
   *11	 :PriceAdjustment, 废弃
   *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
   *13	 :废弃,保留占位
   *14	 :废弃,保留占位
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
   */
  public int getAdditionalTagCount() {
    return additionalTag_.size();
  }
  /**
   * <pre>
   **
   *对应原DeprecatedInfo.AdditionalInfoList
   *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
   *3	 :废弃,保留占位
   *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
   *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
   *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
   *7	 :废弃,保留占位 -- LuggageRemarks
   *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
   *9	 :废弃,保留占位
   *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
   *11	 :PriceAdjustment, 废弃
   *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
   *13	 :废弃,保留占位
   *14	 :废弃,保留占位
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType getAdditionalTag(int index) {
    return additionalTag_.get(index);
  }
  /**
   * <pre>
   **
   *对应原DeprecatedInfo.AdditionalInfoList
   *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
   *3	 :废弃,保留占位
   *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
   *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
   *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
   *7	 :废弃,保留占位 -- LuggageRemarks
   *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
   *9	 :废弃,保留占位
   *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
   *11	 :PriceAdjustment, 废弃
   *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
   *13	 :废弃,保留占位
   *14	 :废弃,保留占位
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder getAdditionalTagOrBuilder(
      int index) {
    return additionalTag_.get(index);
  }

  public static final int TICKETSHARING_FIELD_NUMBER = 4;
  private com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType ticketSharing_;
  /**
   * <pre>
   * 分票信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType TicketSharing = 4;</code>
   */
  public boolean hasTicketSharing() {
    return ticketSharing_ != null;
  }
  /**
   * <pre>
   * 分票信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType TicketSharing = 4;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType getTicketSharing() {
    return ticketSharing_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.getDefaultInstance() : ticketSharing_;
  }
  /**
   * <pre>
   * 分票信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType TicketSharing = 4;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingTypeOrBuilder getTicketSharingOrBuilder() {
    return getTicketSharing();
  }

  public static final int TRANSITPOLICY_FIELD_NUMBER = 5;
  private com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType transitPolicy_;
  /**
   * <pre>
   * 中转政策信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType TransitPolicy = 5;</code>
   */
  public boolean hasTransitPolicy() {
    return transitPolicy_ != null;
  }
  /**
   * <pre>
   * 中转政策信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType TransitPolicy = 5;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType getTransitPolicy() {
    return transitPolicy_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType.getDefaultInstance() : transitPolicy_;
  }
  /**
   * <pre>
   * 中转政策信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType TransitPolicy = 5;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyTypeOrBuilder getTransitPolicyOrBuilder() {
    return getTransitPolicy();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (refNum_ != 0) {
      output.writeInt32(1, refNum_);
    }
    for (int i = 0; i < deprecatedTag_.size(); i++) {
      output.writeMessage(2, deprecatedTag_.get(i));
    }
    for (int i = 0; i < additionalTag_.size(); i++) {
      output.writeMessage(3, additionalTag_.get(i));
    }
    if (ticketSharing_ != null) {
      output.writeMessage(4, getTicketSharing());
    }
    if (transitPolicy_ != null) {
      output.writeMessage(5, getTransitPolicy());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (refNum_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, refNum_);
    }
    for (int i = 0; i < deprecatedTag_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, deprecatedTag_.get(i));
    }
    for (int i = 0; i < additionalTag_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, additionalTag_.get(i));
    }
    if (ticketSharing_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getTicketSharing());
    }
    if (transitPolicy_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getTransitPolicy());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType other = (com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType) obj;

    boolean result = true;
    result = result && (getRefNum()
        == other.getRefNum());
    result = result && getDeprecatedTagList()
        .equals(other.getDeprecatedTagList());
    result = result && getAdditionalTagList()
        .equals(other.getAdditionalTagList());
    result = result && (hasTicketSharing() == other.hasTicketSharing());
    if (hasTicketSharing()) {
      result = result && getTicketSharing()
          .equals(other.getTicketSharing());
    }
    result = result && (hasTransitPolicy() == other.hasTransitPolicy());
    if (hasTransitPolicy()) {
      result = result && getTransitPolicy()
          .equals(other.getTransitPolicy());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + REFNUM_FIELD_NUMBER;
    hash = (53 * hash) + getRefNum();
    if (getDeprecatedTagCount() > 0) {
      hash = (37 * hash) + DEPRECATEDTAG_FIELD_NUMBER;
      hash = (53 * hash) + getDeprecatedTagList().hashCode();
    }
    if (getAdditionalTagCount() > 0) {
      hash = (37 * hash) + ADDITIONALTAG_FIELD_NUMBER;
      hash = (53 * hash) + getAdditionalTagList().hashCode();
    }
    if (hasTicketSharing()) {
      hash = (37 * hash) + TICKETSHARING_FIELD_NUMBER;
      hash = (53 * hash) + getTicketSharing().hashCode();
    }
    if (hasTransitPolicy()) {
      hash = (37 * hash) + TRANSITPOLICY_FIELD_NUMBER;
      hash = (53 * hash) + getTransitPolicy().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 预订场景信息
   * </pre>
   *
   * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType)
      com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_FlightProductBookingSceneType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_FlightProductBookingSceneType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType.class, com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType.Builder.class);
    }

    // Construct using com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDeprecatedTagFieldBuilder();
        getAdditionalTagFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      refNum_ = 0;

      if (deprecatedTagBuilder_ == null) {
        deprecatedTag_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        deprecatedTagBuilder_.clear();
      }
      if (additionalTagBuilder_ == null) {
        additionalTag_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        additionalTagBuilder_.clear();
      }
      if (ticketSharingBuilder_ == null) {
        ticketSharing_ = null;
      } else {
        ticketSharing_ = null;
        ticketSharingBuilder_ = null;
      }
      if (transitPolicyBuilder_ == null) {
        transitPolicy_ = null;
      } else {
        transitPolicy_ = null;
        transitPolicyBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_FlightProductBookingSceneType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType getDefaultInstanceForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType build() {
      com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType buildPartial() {
      com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType result = new com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.refNum_ = refNum_;
      if (deprecatedTagBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          deprecatedTag_ = java.util.Collections.unmodifiableList(deprecatedTag_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.deprecatedTag_ = deprecatedTag_;
      } else {
        result.deprecatedTag_ = deprecatedTagBuilder_.build();
      }
      if (additionalTagBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          additionalTag_ = java.util.Collections.unmodifiableList(additionalTag_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.additionalTag_ = additionalTag_;
      } else {
        result.additionalTag_ = additionalTagBuilder_.build();
      }
      if (ticketSharingBuilder_ == null) {
        result.ticketSharing_ = ticketSharing_;
      } else {
        result.ticketSharing_ = ticketSharingBuilder_.build();
      }
      if (transitPolicyBuilder_ == null) {
        result.transitPolicy_ = transitPolicy_;
      } else {
        result.transitPolicy_ = transitPolicyBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType) {
        return mergeFrom((com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType other) {
      if (other == com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType.getDefaultInstance()) return this;
      if (other.getRefNum() != 0) {
        setRefNum(other.getRefNum());
      }
      if (deprecatedTagBuilder_ == null) {
        if (!other.deprecatedTag_.isEmpty()) {
          if (deprecatedTag_.isEmpty()) {
            deprecatedTag_ = other.deprecatedTag_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDeprecatedTagIsMutable();
            deprecatedTag_.addAll(other.deprecatedTag_);
          }
          onChanged();
        }
      } else {
        if (!other.deprecatedTag_.isEmpty()) {
          if (deprecatedTagBuilder_.isEmpty()) {
            deprecatedTagBuilder_.dispose();
            deprecatedTagBuilder_ = null;
            deprecatedTag_ = other.deprecatedTag_;
            bitField0_ = (bitField0_ & ~0x00000002);
            deprecatedTagBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDeprecatedTagFieldBuilder() : null;
          } else {
            deprecatedTagBuilder_.addAllMessages(other.deprecatedTag_);
          }
        }
      }
      if (additionalTagBuilder_ == null) {
        if (!other.additionalTag_.isEmpty()) {
          if (additionalTag_.isEmpty()) {
            additionalTag_ = other.additionalTag_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureAdditionalTagIsMutable();
            additionalTag_.addAll(other.additionalTag_);
          }
          onChanged();
        }
      } else {
        if (!other.additionalTag_.isEmpty()) {
          if (additionalTagBuilder_.isEmpty()) {
            additionalTagBuilder_.dispose();
            additionalTagBuilder_ = null;
            additionalTag_ = other.additionalTag_;
            bitField0_ = (bitField0_ & ~0x00000004);
            additionalTagBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getAdditionalTagFieldBuilder() : null;
          } else {
            additionalTagBuilder_.addAllMessages(other.additionalTag_);
          }
        }
      }
      if (other.hasTicketSharing()) {
        mergeTicketSharing(other.getTicketSharing());
      }
      if (other.hasTransitPolicy()) {
        mergeTransitPolicy(other.getTransitPolicy());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int refNum_ ;
    /**
     * <pre>
     * 索引号
     * </pre>
     *
     * <code>int32 RefNum = 1;</code>
     */
    public int getRefNum() {
      return refNum_;
    }
    /**
     * <pre>
     * 索引号
     * </pre>
     *
     * <code>int32 RefNum = 1;</code>
     */
    public Builder setRefNum(int value) {
      
      refNum_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 索引号
     * </pre>
     *
     * <code>int32 RefNum = 1;</code>
     */
    public Builder clearRefNum() {
      
      refNum_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> deprecatedTag_ =
      java.util.Collections.emptyList();
    private void ensureDeprecatedTagIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        deprecatedTag_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType>(deprecatedTag_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> deprecatedTagBuilder_;

    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> getDeprecatedTagList() {
      if (deprecatedTagBuilder_ == null) {
        return java.util.Collections.unmodifiableList(deprecatedTag_);
      } else {
        return deprecatedTagBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public int getDeprecatedTagCount() {
      if (deprecatedTagBuilder_ == null) {
        return deprecatedTag_.size();
      } else {
        return deprecatedTagBuilder_.getCount();
      }
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType getDeprecatedTag(int index) {
      if (deprecatedTagBuilder_ == null) {
        return deprecatedTag_.get(index);
      } else {
        return deprecatedTagBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public Builder setDeprecatedTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType value) {
      if (deprecatedTagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeprecatedTagIsMutable();
        deprecatedTag_.set(index, value);
        onChanged();
      } else {
        deprecatedTagBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public Builder setDeprecatedTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder builderForValue) {
      if (deprecatedTagBuilder_ == null) {
        ensureDeprecatedTagIsMutable();
        deprecatedTag_.set(index, builderForValue.build());
        onChanged();
      } else {
        deprecatedTagBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public Builder addDeprecatedTag(com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType value) {
      if (deprecatedTagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeprecatedTagIsMutable();
        deprecatedTag_.add(value);
        onChanged();
      } else {
        deprecatedTagBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public Builder addDeprecatedTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType value) {
      if (deprecatedTagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDeprecatedTagIsMutable();
        deprecatedTag_.add(index, value);
        onChanged();
      } else {
        deprecatedTagBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public Builder addDeprecatedTag(
        com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder builderForValue) {
      if (deprecatedTagBuilder_ == null) {
        ensureDeprecatedTagIsMutable();
        deprecatedTag_.add(builderForValue.build());
        onChanged();
      } else {
        deprecatedTagBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public Builder addDeprecatedTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder builderForValue) {
      if (deprecatedTagBuilder_ == null) {
        ensureDeprecatedTagIsMutable();
        deprecatedTag_.add(index, builderForValue.build());
        onChanged();
      } else {
        deprecatedTagBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public Builder addAllDeprecatedTag(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> values) {
      if (deprecatedTagBuilder_ == null) {
        ensureDeprecatedTagIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, deprecatedTag_);
        onChanged();
      } else {
        deprecatedTagBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public Builder clearDeprecatedTag() {
      if (deprecatedTagBuilder_ == null) {
        deprecatedTag_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        deprecatedTagBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public Builder removeDeprecatedTag(int index) {
      if (deprecatedTagBuilder_ == null) {
        ensureDeprecatedTagIsMutable();
        deprecatedTag_.remove(index);
        onChanged();
      } else {
        deprecatedTagBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder getDeprecatedTagBuilder(
        int index) {
      return getDeprecatedTagFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder getDeprecatedTagOrBuilder(
        int index) {
      if (deprecatedTagBuilder_ == null) {
        return deprecatedTag_.get(index);  } else {
        return deprecatedTagBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> 
         getDeprecatedTagOrBuilderList() {
      if (deprecatedTagBuilder_ != null) {
        return deprecatedTagBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(deprecatedTag_);
      }
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder addDeprecatedTagBuilder() {
      return getDeprecatedTagFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.getDefaultInstance());
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder addDeprecatedTagBuilder(
        int index) {
      return getDeprecatedTagFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.getDefaultInstance());
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo 作为待废弃兼容实体的替换
     *Key：ProductType,PolicyID,PolicyCategory,PolicyType,LateCostPrice,ShareNormalPolicyID,PreAdjustPrice,OriginalPolicyType,CostRate,PackageOption,IsBooking,TransitType
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType DeprecatedTag = 2;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder> 
         getDeprecatedTagBuilderList() {
      return getDeprecatedTagFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> 
        getDeprecatedTagFieldBuilder() {
      if (deprecatedTagBuilder_ == null) {
        deprecatedTagBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder>(
                deprecatedTag_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        deprecatedTag_ = null;
      }
      return deprecatedTagBuilder_;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> additionalTag_ =
      java.util.Collections.emptyList();
    private void ensureAdditionalTagIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        additionalTag_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType>(additionalTag_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> additionalTagBuilder_;

    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> getAdditionalTagList() {
      if (additionalTagBuilder_ == null) {
        return java.util.Collections.unmodifiableList(additionalTag_);
      } else {
        return additionalTagBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public int getAdditionalTagCount() {
      if (additionalTagBuilder_ == null) {
        return additionalTag_.size();
      } else {
        return additionalTagBuilder_.getCount();
      }
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType getAdditionalTag(int index) {
      if (additionalTagBuilder_ == null) {
        return additionalTag_.get(index);
      } else {
        return additionalTagBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public Builder setAdditionalTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType value) {
      if (additionalTagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAdditionalTagIsMutable();
        additionalTag_.set(index, value);
        onChanged();
      } else {
        additionalTagBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public Builder setAdditionalTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder builderForValue) {
      if (additionalTagBuilder_ == null) {
        ensureAdditionalTagIsMutable();
        additionalTag_.set(index, builderForValue.build());
        onChanged();
      } else {
        additionalTagBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public Builder addAdditionalTag(com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType value) {
      if (additionalTagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAdditionalTagIsMutable();
        additionalTag_.add(value);
        onChanged();
      } else {
        additionalTagBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public Builder addAdditionalTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType value) {
      if (additionalTagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureAdditionalTagIsMutable();
        additionalTag_.add(index, value);
        onChanged();
      } else {
        additionalTagBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public Builder addAdditionalTag(
        com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder builderForValue) {
      if (additionalTagBuilder_ == null) {
        ensureAdditionalTagIsMutable();
        additionalTag_.add(builderForValue.build());
        onChanged();
      } else {
        additionalTagBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public Builder addAdditionalTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder builderForValue) {
      if (additionalTagBuilder_ == null) {
        ensureAdditionalTagIsMutable();
        additionalTag_.add(index, builderForValue.build());
        onChanged();
      } else {
        additionalTagBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public Builder addAllAdditionalTag(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> values) {
      if (additionalTagBuilder_ == null) {
        ensureAdditionalTagIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, additionalTag_);
        onChanged();
      } else {
        additionalTagBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public Builder clearAdditionalTag() {
      if (additionalTagBuilder_ == null) {
        additionalTag_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        additionalTagBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public Builder removeAdditionalTag(int index) {
      if (additionalTagBuilder_ == null) {
        ensureAdditionalTagIsMutable();
        additionalTag_.remove(index);
        onChanged();
      } else {
        additionalTagBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder getAdditionalTagBuilder(
        int index) {
      return getAdditionalTagFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder getAdditionalTagOrBuilder(
        int index) {
      if (additionalTagBuilder_ == null) {
        return additionalTag_.get(index);  } else {
        return additionalTagBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> 
         getAdditionalTagOrBuilderList() {
      if (additionalTagBuilder_ != null) {
        return additionalTagBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(additionalTag_);
      }
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder addAdditionalTagBuilder() {
      return getAdditionalTagFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.getDefaultInstance());
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder addAdditionalTagBuilder(
        int index) {
      return getAdditionalTagFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.getDefaultInstance());
    }
    /**
     * <pre>
     **
     *对应原DeprecatedInfo.AdditionalInfoList
     *2	 :NE_3U_DIRECT_REDUCTION, 川航东北区直减， value为对应的营销代码(MarketingCode, string)
     *3	 :废弃,保留占位
     *4	 :WaitingApplyPolicy_SuccessRate, 抢票成功率，value格式为"AVG|0.00,24H|0.00,72H|0.00,PQ_AVG|0.00,PQ_24H|0.00,PQ_72H|0.00,"
     *5	 :FLOAT_UP_GEAR, 航司上浮ABTest, value为档位ID，自动生成，仅用于分组(int)
     *6	 :Policy_UpgradeRule, 政策升舱规则,value为OutputUpgradeInfoEntity的Newtonsoft json序列化
     *7	 :废弃,保留占位 -- LuggageRemarks
     *8	 :MembershipRegisterType, 会员注册方式，value为 1：联系人注册，2：单个乘机人注册，3：多个乘机人注册
     *9	 :废弃,保留占位
     *10	 :废弃,保留占位 -- LuggageShowType, 行李额展示方式，value为 1：展示合计行李额
     *11	 :PriceAdjustment, 废弃
     *12	 :RebateInfo, 返现信息， value格式为类型+冒号+金额，当前类型仅为RebateAmount， 示例为 RebateAmount:20
     *13	 :废弃,保留占位
     *14	 :废弃,保留占位
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType AdditionalTag = 3;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder> 
         getAdditionalTagBuilderList() {
      return getAdditionalTagFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> 
        getAdditionalTagFieldBuilder() {
      if (additionalTagBuilder_ == null) {
        additionalTagBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder>(
                additionalTag_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        additionalTag_ = null;
      }
      return additionalTagBuilder_;
    }

    private com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType ticketSharing_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType, com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingTypeOrBuilder> ticketSharingBuilder_;
    /**
     * <pre>
     * 分票信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType TicketSharing = 4;</code>
     */
    public boolean hasTicketSharing() {
      return ticketSharingBuilder_ != null || ticketSharing_ != null;
    }
    /**
     * <pre>
     * 分票信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType TicketSharing = 4;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType getTicketSharing() {
      if (ticketSharingBuilder_ == null) {
        return ticketSharing_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.getDefaultInstance() : ticketSharing_;
      } else {
        return ticketSharingBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 分票信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType TicketSharing = 4;</code>
     */
    public Builder setTicketSharing(com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType value) {
      if (ticketSharingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ticketSharing_ = value;
        onChanged();
      } else {
        ticketSharingBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 分票信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType TicketSharing = 4;</code>
     */
    public Builder setTicketSharing(
        com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.Builder builderForValue) {
      if (ticketSharingBuilder_ == null) {
        ticketSharing_ = builderForValue.build();
        onChanged();
      } else {
        ticketSharingBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 分票信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType TicketSharing = 4;</code>
     */
    public Builder mergeTicketSharing(com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType value) {
      if (ticketSharingBuilder_ == null) {
        if (ticketSharing_ != null) {
          ticketSharing_ =
            com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.newBuilder(ticketSharing_).mergeFrom(value).buildPartial();
        } else {
          ticketSharing_ = value;
        }
        onChanged();
      } else {
        ticketSharingBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 分票信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType TicketSharing = 4;</code>
     */
    public Builder clearTicketSharing() {
      if (ticketSharingBuilder_ == null) {
        ticketSharing_ = null;
        onChanged();
      } else {
        ticketSharing_ = null;
        ticketSharingBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 分票信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType TicketSharing = 4;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.Builder getTicketSharingBuilder() {
      
      onChanged();
      return getTicketSharingFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 分票信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType TicketSharing = 4;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingTypeOrBuilder getTicketSharingOrBuilder() {
      if (ticketSharingBuilder_ != null) {
        return ticketSharingBuilder_.getMessageOrBuilder();
      } else {
        return ticketSharing_ == null ?
            com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.getDefaultInstance() : ticketSharing_;
      }
    }
    /**
     * <pre>
     * 分票信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType TicketSharing = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType, com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingTypeOrBuilder> 
        getTicketSharingFieldBuilder() {
      if (ticketSharingBuilder_ == null) {
        ticketSharingBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType, com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.TicketSharingTypeOrBuilder>(
                getTicketSharing(),
                getParentForChildren(),
                isClean());
        ticketSharing_ = null;
      }
      return ticketSharingBuilder_;
    }

    private com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType transitPolicy_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType, com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyTypeOrBuilder> transitPolicyBuilder_;
    /**
     * <pre>
     * 中转政策信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType TransitPolicy = 5;</code>
     */
    public boolean hasTransitPolicy() {
      return transitPolicyBuilder_ != null || transitPolicy_ != null;
    }
    /**
     * <pre>
     * 中转政策信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType TransitPolicy = 5;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType getTransitPolicy() {
      if (transitPolicyBuilder_ == null) {
        return transitPolicy_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType.getDefaultInstance() : transitPolicy_;
      } else {
        return transitPolicyBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 中转政策信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType TransitPolicy = 5;</code>
     */
    public Builder setTransitPolicy(com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType value) {
      if (transitPolicyBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        transitPolicy_ = value;
        onChanged();
      } else {
        transitPolicyBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 中转政策信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType TransitPolicy = 5;</code>
     */
    public Builder setTransitPolicy(
        com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType.Builder builderForValue) {
      if (transitPolicyBuilder_ == null) {
        transitPolicy_ = builderForValue.build();
        onChanged();
      } else {
        transitPolicyBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 中转政策信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType TransitPolicy = 5;</code>
     */
    public Builder mergeTransitPolicy(com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType value) {
      if (transitPolicyBuilder_ == null) {
        if (transitPolicy_ != null) {
          transitPolicy_ =
            com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType.newBuilder(transitPolicy_).mergeFrom(value).buildPartial();
        } else {
          transitPolicy_ = value;
        }
        onChanged();
      } else {
        transitPolicyBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 中转政策信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType TransitPolicy = 5;</code>
     */
    public Builder clearTransitPolicy() {
      if (transitPolicyBuilder_ == null) {
        transitPolicy_ = null;
        onChanged();
      } else {
        transitPolicy_ = null;
        transitPolicyBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 中转政策信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType TransitPolicy = 5;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType.Builder getTransitPolicyBuilder() {
      
      onChanged();
      return getTransitPolicyFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 中转政策信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType TransitPolicy = 5;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyTypeOrBuilder getTransitPolicyOrBuilder() {
      if (transitPolicyBuilder_ != null) {
        return transitPolicyBuilder_.getMessageOrBuilder();
      } else {
        return transitPolicy_ == null ?
            com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType.getDefaultInstance() : transitPolicy_;
      }
    }
    /**
     * <pre>
     * 中转政策信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType TransitPolicy = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType, com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyTypeOrBuilder> 
        getTransitPolicyFieldBuilder() {
      if (transitPolicyBuilder_ == null) {
        transitPolicyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType, com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.TransitPolicyTypeOrBuilder>(
                getTransitPolicy(),
                getParentForChildren(),
                isClean());
        transitPolicy_ = null;
      }
      return transitPolicyBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType)
  private static final com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType();
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FlightProductBookingSceneType>
      PARSER = new com.google.protobuf.AbstractParser<FlightProductBookingSceneType>() {
    @java.lang.Override
    public FlightProductBookingSceneType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FlightProductBookingSceneType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FlightProductBookingSceneType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FlightProductBookingSceneType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.agg.shopping.contract.transportation.response.FlightProductBookingSceneType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

