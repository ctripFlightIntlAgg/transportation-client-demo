// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.ctrip.flight.agg.shopping.contract.transportation.proto

package com.ctrip.flight.agg.shopping.contract.transportation;

/**
 * <pre>
 * 航班相关的其他参考价格信息
 * </pre>
 *
 * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType}
 */
public  final class FlightReferencePriceType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType)
    FlightReferencePriceTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FlightReferencePriceType.newBuilder() to construct.
  private FlightReferencePriceType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FlightReferencePriceType() {
    standardPrice_ = java.util.Collections.emptyList();
    upgradeCFReferencePrice_ = 0D;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FlightReferencePriceType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              standardPrice_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType>();
              mutable_bitField0_ |= 0x00000001;
            }
            standardPrice_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType.parser(), extensionRegistry));
            break;
          }
          case 17: {

            upgradeCFReferencePrice_ = input.readDouble();
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        standardPrice_ = java.util.Collections.unmodifiableList(standardPrice_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_FlightReferencePriceType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_FlightReferencePriceType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType.class, com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType.Builder.class);
  }

  private int bitField0_;
  public static final int STANDARDPRICE_FIELD_NUMBER = 1;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType> standardPrice_;
  /**
   * <pre>
   * 标准价舱位的政策信息列表
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType> getStandardPriceList() {
    return standardPrice_;
  }
  /**
   * <pre>
   * 标准价舱位的政策信息列表
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceTypeOrBuilder> 
      getStandardPriceOrBuilderList() {
    return standardPrice_;
  }
  /**
   * <pre>
   * 标准价舱位的政策信息列表
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
   */
  public int getStandardPriceCount() {
    return standardPrice_.size();
  }
  /**
   * <pre>
   * 标准价舱位的政策信息列表
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType getStandardPrice(int index) {
    return standardPrice_.get(index);
  }
  /**
   * <pre>
   * 标准价舱位的政策信息列表
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceTypeOrBuilder getStandardPriceOrBuilder(
      int index) {
    return standardPrice_.get(index);
  }

  public static final int UPGRADECFREFERENCEPRICE_FIELD_NUMBER = 2;
  private double upgradeCFReferencePrice_;
  /**
   * <pre>
   * 升舱参考价, 采集航班下F舱等的最低价或者全价,用于给前端展示升舱产品优势价差；优势价差 = 升舱参考价-客人购买经济舱价格-升舱费用
   * </pre>
   *
   * <code>double UpgradeCFReferencePrice = 2;</code>
   */
  public double getUpgradeCFReferencePrice() {
    return upgradeCFReferencePrice_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < standardPrice_.size(); i++) {
      output.writeMessage(1, standardPrice_.get(i));
    }
    if (upgradeCFReferencePrice_ != 0D) {
      output.writeDouble(2, upgradeCFReferencePrice_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < standardPrice_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, standardPrice_.get(i));
    }
    if (upgradeCFReferencePrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(2, upgradeCFReferencePrice_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType other = (com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType) obj;

    boolean result = true;
    result = result && getStandardPriceList()
        .equals(other.getStandardPriceList());
    result = result && (
        java.lang.Double.doubleToLongBits(getUpgradeCFReferencePrice())
        == java.lang.Double.doubleToLongBits(
            other.getUpgradeCFReferencePrice()));
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getStandardPriceCount() > 0) {
      hash = (37 * hash) + STANDARDPRICE_FIELD_NUMBER;
      hash = (53 * hash) + getStandardPriceList().hashCode();
    }
    hash = (37 * hash) + UPGRADECFREFERENCEPRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getUpgradeCFReferencePrice()));
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 航班相关的其他参考价格信息
   * </pre>
   *
   * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType)
      com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_FlightReferencePriceType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_FlightReferencePriceType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType.class, com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType.Builder.class);
    }

    // Construct using com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getStandardPriceFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (standardPriceBuilder_ == null) {
        standardPrice_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        standardPriceBuilder_.clear();
      }
      upgradeCFReferencePrice_ = 0D;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_FlightReferencePriceType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType getDefaultInstanceForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType build() {
      com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType buildPartial() {
      com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType result = new com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (standardPriceBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          standardPrice_ = java.util.Collections.unmodifiableList(standardPrice_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.standardPrice_ = standardPrice_;
      } else {
        result.standardPrice_ = standardPriceBuilder_.build();
      }
      result.upgradeCFReferencePrice_ = upgradeCFReferencePrice_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType) {
        return mergeFrom((com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType other) {
      if (other == com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType.getDefaultInstance()) return this;
      if (standardPriceBuilder_ == null) {
        if (!other.standardPrice_.isEmpty()) {
          if (standardPrice_.isEmpty()) {
            standardPrice_ = other.standardPrice_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureStandardPriceIsMutable();
            standardPrice_.addAll(other.standardPrice_);
          }
          onChanged();
        }
      } else {
        if (!other.standardPrice_.isEmpty()) {
          if (standardPriceBuilder_.isEmpty()) {
            standardPriceBuilder_.dispose();
            standardPriceBuilder_ = null;
            standardPrice_ = other.standardPrice_;
            bitField0_ = (bitField0_ & ~0x00000001);
            standardPriceBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getStandardPriceFieldBuilder() : null;
          } else {
            standardPriceBuilder_.addAllMessages(other.standardPrice_);
          }
        }
      }
      if (other.getUpgradeCFReferencePrice() != 0D) {
        setUpgradeCFReferencePrice(other.getUpgradeCFReferencePrice());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType> standardPrice_ =
      java.util.Collections.emptyList();
    private void ensureStandardPriceIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        standardPrice_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType>(standardPrice_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType, com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceTypeOrBuilder> standardPriceBuilder_;

    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType> getStandardPriceList() {
      if (standardPriceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(standardPrice_);
      } else {
        return standardPriceBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public int getStandardPriceCount() {
      if (standardPriceBuilder_ == null) {
        return standardPrice_.size();
      } else {
        return standardPriceBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType getStandardPrice(int index) {
      if (standardPriceBuilder_ == null) {
        return standardPrice_.get(index);
      } else {
        return standardPriceBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public Builder setStandardPrice(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType value) {
      if (standardPriceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStandardPriceIsMutable();
        standardPrice_.set(index, value);
        onChanged();
      } else {
        standardPriceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public Builder setStandardPrice(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType.Builder builderForValue) {
      if (standardPriceBuilder_ == null) {
        ensureStandardPriceIsMutable();
        standardPrice_.set(index, builderForValue.build());
        onChanged();
      } else {
        standardPriceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public Builder addStandardPrice(com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType value) {
      if (standardPriceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStandardPriceIsMutable();
        standardPrice_.add(value);
        onChanged();
      } else {
        standardPriceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public Builder addStandardPrice(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType value) {
      if (standardPriceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureStandardPriceIsMutable();
        standardPrice_.add(index, value);
        onChanged();
      } else {
        standardPriceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public Builder addStandardPrice(
        com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType.Builder builderForValue) {
      if (standardPriceBuilder_ == null) {
        ensureStandardPriceIsMutable();
        standardPrice_.add(builderForValue.build());
        onChanged();
      } else {
        standardPriceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public Builder addStandardPrice(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType.Builder builderForValue) {
      if (standardPriceBuilder_ == null) {
        ensureStandardPriceIsMutable();
        standardPrice_.add(index, builderForValue.build());
        onChanged();
      } else {
        standardPriceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public Builder addAllStandardPrice(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType> values) {
      if (standardPriceBuilder_ == null) {
        ensureStandardPriceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, standardPrice_);
        onChanged();
      } else {
        standardPriceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public Builder clearStandardPrice() {
      if (standardPriceBuilder_ == null) {
        standardPrice_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        standardPriceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public Builder removeStandardPrice(int index) {
      if (standardPriceBuilder_ == null) {
        ensureStandardPriceIsMutable();
        standardPrice_.remove(index);
        onChanged();
      } else {
        standardPriceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType.Builder getStandardPriceBuilder(
        int index) {
      return getStandardPriceFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceTypeOrBuilder getStandardPriceOrBuilder(
        int index) {
      if (standardPriceBuilder_ == null) {
        return standardPrice_.get(index);  } else {
        return standardPriceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceTypeOrBuilder> 
         getStandardPriceOrBuilderList() {
      if (standardPriceBuilder_ != null) {
        return standardPriceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(standardPrice_);
      }
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType.Builder addStandardPriceBuilder() {
      return getStandardPriceFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType.getDefaultInstance());
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType.Builder addStandardPriceBuilder(
        int index) {
      return getStandardPriceFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType.getDefaultInstance());
    }
    /**
     * <pre>
     * 标准价舱位的政策信息列表
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType StandardPrice = 1;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType.Builder> 
         getStandardPriceBuilderList() {
      return getStandardPriceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType, com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceTypeOrBuilder> 
        getStandardPriceFieldBuilder() {
      if (standardPriceBuilder_ == null) {
        standardPriceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType, com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.StandardPriceTypeOrBuilder>(
                standardPrice_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        standardPrice_ = null;
      }
      return standardPriceBuilder_;
    }

    private double upgradeCFReferencePrice_ ;
    /**
     * <pre>
     * 升舱参考价, 采集航班下F舱等的最低价或者全价,用于给前端展示升舱产品优势价差；优势价差 = 升舱参考价-客人购买经济舱价格-升舱费用
     * </pre>
     *
     * <code>double UpgradeCFReferencePrice = 2;</code>
     */
    public double getUpgradeCFReferencePrice() {
      return upgradeCFReferencePrice_;
    }
    /**
     * <pre>
     * 升舱参考价, 采集航班下F舱等的最低价或者全价,用于给前端展示升舱产品优势价差；优势价差 = 升舱参考价-客人购买经济舱价格-升舱费用
     * </pre>
     *
     * <code>double UpgradeCFReferencePrice = 2;</code>
     */
    public Builder setUpgradeCFReferencePrice(double value) {
      
      upgradeCFReferencePrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 升舱参考价, 采集航班下F舱等的最低价或者全价,用于给前端展示升舱产品优势价差；优势价差 = 升舱参考价-客人购买经济舱价格-升舱费用
     * </pre>
     *
     * <code>double UpgradeCFReferencePrice = 2;</code>
     */
    public Builder clearUpgradeCFReferencePrice() {
      
      upgradeCFReferencePrice_ = 0D;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType)
  private static final com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType();
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FlightReferencePriceType>
      PARSER = new com.google.protobuf.AbstractParser<FlightReferencePriceType>() {
    @java.lang.Override
    public FlightReferencePriceType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FlightReferencePriceType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FlightReferencePriceType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FlightReferencePriceType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.agg.shopping.contract.transportation.FlightReferencePriceType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

