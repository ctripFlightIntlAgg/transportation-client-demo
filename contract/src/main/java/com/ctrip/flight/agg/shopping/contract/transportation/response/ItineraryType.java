// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.ctrip.flight.agg.shopping.contract.transportation.response.proto

package com.ctrip.flight.agg.shopping.contract.transportation.response;

/**
 * <pre>
 * 行程组合列表
 * </pre>
 *
 * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType}
 */
public  final class ItineraryType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType)
    ItineraryTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ItineraryType.newBuilder() to construct.
  private ItineraryType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ItineraryType() {
    transportTypeGroup_ = 0;
    transportSegment_ = java.util.Collections.emptyList();
    offer_ = java.util.Collections.emptyList();
    flyingManType_ = 0;
    interchange_ = java.util.Collections.emptyList();
    tag_ = java.util.Collections.emptyList();
    priority_ = 0D;
    referenceOffer_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ItineraryType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            transportTypeGroup_ = input.readInt32();
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              transportSegment_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType>();
              mutable_bitField0_ |= 0x00000002;
            }
            transportSegment_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType.parser(), extensionRegistry));
            break;
          }
          case 26: {
            if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
              offer_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType>();
              mutable_bitField0_ |= 0x00000004;
            }
            offer_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.parser(), extensionRegistry));
            break;
          }
          case 32: {

            flyingManType_ = input.readInt32();
            break;
          }
          case 42: {
            if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
              interchange_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType>();
              mutable_bitField0_ |= 0x00000010;
            }
            interchange_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType.parser(), extensionRegistry));
            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              tag_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType>();
              mutable_bitField0_ |= 0x00000020;
            }
            tag_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.parser(), extensionRegistry));
            break;
          }
          case 57: {

            priority_ = input.readDouble();
            break;
          }
          case 66: {
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
              referenceOffer_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType>();
              mutable_bitField0_ |= 0x00000080;
            }
            referenceOffer_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        transportSegment_ = java.util.Collections.unmodifiableList(transportSegment_);
      }
      if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
        offer_ = java.util.Collections.unmodifiableList(offer_);
      }
      if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
        interchange_ = java.util.Collections.unmodifiableList(interchange_);
      }
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        tag_ = java.util.Collections.unmodifiableList(tag_);
      }
      if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
        referenceOffer_ = java.util.Collections.unmodifiableList(referenceOffer_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_ItineraryType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_ItineraryType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType.class, com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType.Builder.class);
  }

  private int bitField0_;
  public static final int TRANSPORTTYPEGROUP_FIELD_NUMBER = 1;
  private int transportTypeGroup_;
  /**
   * <pre>
   * 行程组合类型, 所有的TransportType的位或操作,如：3-flight+Train
   * </pre>
   *
   * <code>int32 TransportTypeGroup = 1;</code>
   */
  public int getTransportTypeGroup() {
    return transportTypeGroup_;
  }

  public static final int TRANSPORTSEGMENT_FIELD_NUMBER = 2;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType> transportSegment_;
  /**
   * <pre>
   * 行程、段索引
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType> getTransportSegmentList() {
    return transportSegment_;
  }
  /**
   * <pre>
   * 行程、段索引
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentTypeOrBuilder> 
      getTransportSegmentOrBuilderList() {
    return transportSegment_;
  }
  /**
   * <pre>
   * 行程、段索引
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
   */
  public int getTransportSegmentCount() {
    return transportSegment_.size();
  }
  /**
   * <pre>
   * 行程、段索引
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType getTransportSegment(int index) {
    return transportSegment_.get(index);
  }
  /**
   * <pre>
   * 行程、段索引
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentTypeOrBuilder getTransportSegmentOrBuilder(
      int index) {
    return transportSegment_.get(index);
  }

  public static final int OFFER_FIELD_NUMBER = 3;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType> offer_;
  /**
   * <pre>
   * 报价信息，每一个报价包含一组产品信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType> getOfferList() {
    return offer_;
  }
  /**
   * <pre>
   * 报价信息，每一个报价包含一组产品信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder> 
      getOfferOrBuilderList() {
    return offer_;
  }
  /**
   * <pre>
   * 报价信息，每一个报价包含一组产品信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
   */
  public int getOfferCount() {
    return offer_.size();
  }
  /**
   * <pre>
   * 报价信息，每一个报价包含一组产品信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType getOffer(int index) {
    return offer_.get(index);
  }
  /**
   * <pre>
   * 报价信息，每一个报价包含一组产品信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder getOfferOrBuilder(
      int index) {
    return offer_.get(index);
  }

  public static final int FLYINGMANTYPE_FIELD_NUMBER = 4;
  private int flyingManType_;
  /**
   * <pre>
   * 0:不是飞人, 1:普通飞人, 2:超级飞人
   * </pre>
   *
   * <code>int32 FlyingManType = 4;</code>
   */
  public int getFlyingManType() {
    return flyingManType_;
  }

  public static final int INTERCHANGE_FIELD_NUMBER = 5;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType> interchange_;
  /**
   * <pre>
   * 换乘信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType> getInterchangeList() {
    return interchange_;
  }
  /**
   * <pre>
   * 换乘信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.InterchangeTypeOrBuilder> 
      getInterchangeOrBuilderList() {
    return interchange_;
  }
  /**
   * <pre>
   * 换乘信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
   */
  public int getInterchangeCount() {
    return interchange_.size();
  }
  /**
   * <pre>
   * 换乘信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType getInterchange(int index) {
    return interchange_.get(index);
  }
  /**
   * <pre>
   * 换乘信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.InterchangeTypeOrBuilder getInterchangeOrBuilder(
      int index) {
    return interchange_.get(index);
  }

  public static final int TAG_FIELD_NUMBER = 6;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> tag_;
  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> getTagList() {
    return tag_;
  }
  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> 
      getTagOrBuilderList() {
    return tag_;
  }
  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
   */
  public int getTagCount() {
    return tag_.size();
  }
  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType getTag(int index) {
    return tag_.get(index);
  }
  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder getTagOrBuilder(
      int index) {
    return tag_.get(index);
  }

  public static final int PRIORITY_FIELD_NUMBER = 7;
  private double priority_;
  /**
   * <pre>
   * 优先级, 数值越小优先级越高
   * </pre>
   *
   * <code>double Priority = 7;</code>
   */
  public double getPriority() {
    return priority_;
  }

  public static final int REFERENCEOFFER_FIELD_NUMBER = 8;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType> referenceOffer_;
  /**
   * <pre>
   * 被正常运价引用的运价信息，如：儿童标准价
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType> getReferenceOfferList() {
    return referenceOffer_;
  }
  /**
   * <pre>
   * 被正常运价引用的运价信息，如：儿童标准价
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder> 
      getReferenceOfferOrBuilderList() {
    return referenceOffer_;
  }
  /**
   * <pre>
   * 被正常运价引用的运价信息，如：儿童标准价
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
   */
  public int getReferenceOfferCount() {
    return referenceOffer_.size();
  }
  /**
   * <pre>
   * 被正常运价引用的运价信息，如：儿童标准价
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType getReferenceOffer(int index) {
    return referenceOffer_.get(index);
  }
  /**
   * <pre>
   * 被正常运价引用的运价信息，如：儿童标准价
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder getReferenceOfferOrBuilder(
      int index) {
    return referenceOffer_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (transportTypeGroup_ != 0) {
      output.writeInt32(1, transportTypeGroup_);
    }
    for (int i = 0; i < transportSegment_.size(); i++) {
      output.writeMessage(2, transportSegment_.get(i));
    }
    for (int i = 0; i < offer_.size(); i++) {
      output.writeMessage(3, offer_.get(i));
    }
    if (flyingManType_ != 0) {
      output.writeInt32(4, flyingManType_);
    }
    for (int i = 0; i < interchange_.size(); i++) {
      output.writeMessage(5, interchange_.get(i));
    }
    for (int i = 0; i < tag_.size(); i++) {
      output.writeMessage(6, tag_.get(i));
    }
    if (priority_ != 0D) {
      output.writeDouble(7, priority_);
    }
    for (int i = 0; i < referenceOffer_.size(); i++) {
      output.writeMessage(8, referenceOffer_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (transportTypeGroup_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, transportTypeGroup_);
    }
    for (int i = 0; i < transportSegment_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, transportSegment_.get(i));
    }
    for (int i = 0; i < offer_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(3, offer_.get(i));
    }
    if (flyingManType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(4, flyingManType_);
    }
    for (int i = 0; i < interchange_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, interchange_.get(i));
    }
    for (int i = 0; i < tag_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, tag_.get(i));
    }
    if (priority_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(7, priority_);
    }
    for (int i = 0; i < referenceOffer_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(8, referenceOffer_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType other = (com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType) obj;

    boolean result = true;
    result = result && (getTransportTypeGroup()
        == other.getTransportTypeGroup());
    result = result && getTransportSegmentList()
        .equals(other.getTransportSegmentList());
    result = result && getOfferList()
        .equals(other.getOfferList());
    result = result && (getFlyingManType()
        == other.getFlyingManType());
    result = result && getInterchangeList()
        .equals(other.getInterchangeList());
    result = result && getTagList()
        .equals(other.getTagList());
    result = result && (
        java.lang.Double.doubleToLongBits(getPriority())
        == java.lang.Double.doubleToLongBits(
            other.getPriority()));
    result = result && getReferenceOfferList()
        .equals(other.getReferenceOfferList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + TRANSPORTTYPEGROUP_FIELD_NUMBER;
    hash = (53 * hash) + getTransportTypeGroup();
    if (getTransportSegmentCount() > 0) {
      hash = (37 * hash) + TRANSPORTSEGMENT_FIELD_NUMBER;
      hash = (53 * hash) + getTransportSegmentList().hashCode();
    }
    if (getOfferCount() > 0) {
      hash = (37 * hash) + OFFER_FIELD_NUMBER;
      hash = (53 * hash) + getOfferList().hashCode();
    }
    hash = (37 * hash) + FLYINGMANTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getFlyingManType();
    if (getInterchangeCount() > 0) {
      hash = (37 * hash) + INTERCHANGE_FIELD_NUMBER;
      hash = (53 * hash) + getInterchangeList().hashCode();
    }
    if (getTagCount() > 0) {
      hash = (37 * hash) + TAG_FIELD_NUMBER;
      hash = (53 * hash) + getTagList().hashCode();
    }
    hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getPriority()));
    if (getReferenceOfferCount() > 0) {
      hash = (37 * hash) + REFERENCEOFFER_FIELD_NUMBER;
      hash = (53 * hash) + getReferenceOfferList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 行程组合列表
   * </pre>
   *
   * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType)
      com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_ItineraryType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_ItineraryType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType.class, com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType.Builder.class);
    }

    // Construct using com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTransportSegmentFieldBuilder();
        getOfferFieldBuilder();
        getInterchangeFieldBuilder();
        getTagFieldBuilder();
        getReferenceOfferFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      transportTypeGroup_ = 0;

      if (transportSegmentBuilder_ == null) {
        transportSegment_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        transportSegmentBuilder_.clear();
      }
      if (offerBuilder_ == null) {
        offer_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
      } else {
        offerBuilder_.clear();
      }
      flyingManType_ = 0;

      if (interchangeBuilder_ == null) {
        interchange_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
      } else {
        interchangeBuilder_.clear();
      }
      if (tagBuilder_ == null) {
        tag_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        tagBuilder_.clear();
      }
      priority_ = 0D;

      if (referenceOfferBuilder_ == null) {
        referenceOffer_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
      } else {
        referenceOfferBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_ItineraryType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType getDefaultInstanceForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType build() {
      com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType buildPartial() {
      com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType result = new com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.transportTypeGroup_ = transportTypeGroup_;
      if (transportSegmentBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          transportSegment_ = java.util.Collections.unmodifiableList(transportSegment_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.transportSegment_ = transportSegment_;
      } else {
        result.transportSegment_ = transportSegmentBuilder_.build();
      }
      if (offerBuilder_ == null) {
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          offer_ = java.util.Collections.unmodifiableList(offer_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.offer_ = offer_;
      } else {
        result.offer_ = offerBuilder_.build();
      }
      result.flyingManType_ = flyingManType_;
      if (interchangeBuilder_ == null) {
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          interchange_ = java.util.Collections.unmodifiableList(interchange_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.interchange_ = interchange_;
      } else {
        result.interchange_ = interchangeBuilder_.build();
      }
      if (tagBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          tag_ = java.util.Collections.unmodifiableList(tag_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.tag_ = tag_;
      } else {
        result.tag_ = tagBuilder_.build();
      }
      result.priority_ = priority_;
      if (referenceOfferBuilder_ == null) {
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          referenceOffer_ = java.util.Collections.unmodifiableList(referenceOffer_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.referenceOffer_ = referenceOffer_;
      } else {
        result.referenceOffer_ = referenceOfferBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType) {
        return mergeFrom((com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType other) {
      if (other == com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType.getDefaultInstance()) return this;
      if (other.getTransportTypeGroup() != 0) {
        setTransportTypeGroup(other.getTransportTypeGroup());
      }
      if (transportSegmentBuilder_ == null) {
        if (!other.transportSegment_.isEmpty()) {
          if (transportSegment_.isEmpty()) {
            transportSegment_ = other.transportSegment_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTransportSegmentIsMutable();
            transportSegment_.addAll(other.transportSegment_);
          }
          onChanged();
        }
      } else {
        if (!other.transportSegment_.isEmpty()) {
          if (transportSegmentBuilder_.isEmpty()) {
            transportSegmentBuilder_.dispose();
            transportSegmentBuilder_ = null;
            transportSegment_ = other.transportSegment_;
            bitField0_ = (bitField0_ & ~0x00000002);
            transportSegmentBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTransportSegmentFieldBuilder() : null;
          } else {
            transportSegmentBuilder_.addAllMessages(other.transportSegment_);
          }
        }
      }
      if (offerBuilder_ == null) {
        if (!other.offer_.isEmpty()) {
          if (offer_.isEmpty()) {
            offer_ = other.offer_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureOfferIsMutable();
            offer_.addAll(other.offer_);
          }
          onChanged();
        }
      } else {
        if (!other.offer_.isEmpty()) {
          if (offerBuilder_.isEmpty()) {
            offerBuilder_.dispose();
            offerBuilder_ = null;
            offer_ = other.offer_;
            bitField0_ = (bitField0_ & ~0x00000004);
            offerBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getOfferFieldBuilder() : null;
          } else {
            offerBuilder_.addAllMessages(other.offer_);
          }
        }
      }
      if (other.getFlyingManType() != 0) {
        setFlyingManType(other.getFlyingManType());
      }
      if (interchangeBuilder_ == null) {
        if (!other.interchange_.isEmpty()) {
          if (interchange_.isEmpty()) {
            interchange_ = other.interchange_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureInterchangeIsMutable();
            interchange_.addAll(other.interchange_);
          }
          onChanged();
        }
      } else {
        if (!other.interchange_.isEmpty()) {
          if (interchangeBuilder_.isEmpty()) {
            interchangeBuilder_.dispose();
            interchangeBuilder_ = null;
            interchange_ = other.interchange_;
            bitField0_ = (bitField0_ & ~0x00000010);
            interchangeBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getInterchangeFieldBuilder() : null;
          } else {
            interchangeBuilder_.addAllMessages(other.interchange_);
          }
        }
      }
      if (tagBuilder_ == null) {
        if (!other.tag_.isEmpty()) {
          if (tag_.isEmpty()) {
            tag_ = other.tag_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureTagIsMutable();
            tag_.addAll(other.tag_);
          }
          onChanged();
        }
      } else {
        if (!other.tag_.isEmpty()) {
          if (tagBuilder_.isEmpty()) {
            tagBuilder_.dispose();
            tagBuilder_ = null;
            tag_ = other.tag_;
            bitField0_ = (bitField0_ & ~0x00000020);
            tagBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTagFieldBuilder() : null;
          } else {
            tagBuilder_.addAllMessages(other.tag_);
          }
        }
      }
      if (other.getPriority() != 0D) {
        setPriority(other.getPriority());
      }
      if (referenceOfferBuilder_ == null) {
        if (!other.referenceOffer_.isEmpty()) {
          if (referenceOffer_.isEmpty()) {
            referenceOffer_ = other.referenceOffer_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureReferenceOfferIsMutable();
            referenceOffer_.addAll(other.referenceOffer_);
          }
          onChanged();
        }
      } else {
        if (!other.referenceOffer_.isEmpty()) {
          if (referenceOfferBuilder_.isEmpty()) {
            referenceOfferBuilder_.dispose();
            referenceOfferBuilder_ = null;
            referenceOffer_ = other.referenceOffer_;
            bitField0_ = (bitField0_ & ~0x00000080);
            referenceOfferBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getReferenceOfferFieldBuilder() : null;
          } else {
            referenceOfferBuilder_.addAllMessages(other.referenceOffer_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int transportTypeGroup_ ;
    /**
     * <pre>
     * 行程组合类型, 所有的TransportType的位或操作,如：3-flight+Train
     * </pre>
     *
     * <code>int32 TransportTypeGroup = 1;</code>
     */
    public int getTransportTypeGroup() {
      return transportTypeGroup_;
    }
    /**
     * <pre>
     * 行程组合类型, 所有的TransportType的位或操作,如：3-flight+Train
     * </pre>
     *
     * <code>int32 TransportTypeGroup = 1;</code>
     */
    public Builder setTransportTypeGroup(int value) {
      
      transportTypeGroup_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 行程组合类型, 所有的TransportType的位或操作,如：3-flight+Train
     * </pre>
     *
     * <code>int32 TransportTypeGroup = 1;</code>
     */
    public Builder clearTransportTypeGroup() {
      
      transportTypeGroup_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType> transportSegment_ =
      java.util.Collections.emptyList();
    private void ensureTransportSegmentIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        transportSegment_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType>(transportSegment_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentTypeOrBuilder> transportSegmentBuilder_;

    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType> getTransportSegmentList() {
      if (transportSegmentBuilder_ == null) {
        return java.util.Collections.unmodifiableList(transportSegment_);
      } else {
        return transportSegmentBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public int getTransportSegmentCount() {
      if (transportSegmentBuilder_ == null) {
        return transportSegment_.size();
      } else {
        return transportSegmentBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType getTransportSegment(int index) {
      if (transportSegmentBuilder_ == null) {
        return transportSegment_.get(index);
      } else {
        return transportSegmentBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public Builder setTransportSegment(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType value) {
      if (transportSegmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransportSegmentIsMutable();
        transportSegment_.set(index, value);
        onChanged();
      } else {
        transportSegmentBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public Builder setTransportSegment(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType.Builder builderForValue) {
      if (transportSegmentBuilder_ == null) {
        ensureTransportSegmentIsMutable();
        transportSegment_.set(index, builderForValue.build());
        onChanged();
      } else {
        transportSegmentBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public Builder addTransportSegment(com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType value) {
      if (transportSegmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransportSegmentIsMutable();
        transportSegment_.add(value);
        onChanged();
      } else {
        transportSegmentBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public Builder addTransportSegment(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType value) {
      if (transportSegmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransportSegmentIsMutable();
        transportSegment_.add(index, value);
        onChanged();
      } else {
        transportSegmentBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public Builder addTransportSegment(
        com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType.Builder builderForValue) {
      if (transportSegmentBuilder_ == null) {
        ensureTransportSegmentIsMutable();
        transportSegment_.add(builderForValue.build());
        onChanged();
      } else {
        transportSegmentBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public Builder addTransportSegment(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType.Builder builderForValue) {
      if (transportSegmentBuilder_ == null) {
        ensureTransportSegmentIsMutable();
        transportSegment_.add(index, builderForValue.build());
        onChanged();
      } else {
        transportSegmentBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public Builder addAllTransportSegment(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType> values) {
      if (transportSegmentBuilder_ == null) {
        ensureTransportSegmentIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, transportSegment_);
        onChanged();
      } else {
        transportSegmentBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public Builder clearTransportSegment() {
      if (transportSegmentBuilder_ == null) {
        transportSegment_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        transportSegmentBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public Builder removeTransportSegment(int index) {
      if (transportSegmentBuilder_ == null) {
        ensureTransportSegmentIsMutable();
        transportSegment_.remove(index);
        onChanged();
      } else {
        transportSegmentBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType.Builder getTransportSegmentBuilder(
        int index) {
      return getTransportSegmentFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentTypeOrBuilder getTransportSegmentOrBuilder(
        int index) {
      if (transportSegmentBuilder_ == null) {
        return transportSegment_.get(index);  } else {
        return transportSegmentBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentTypeOrBuilder> 
         getTransportSegmentOrBuilderList() {
      if (transportSegmentBuilder_ != null) {
        return transportSegmentBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(transportSegment_);
      }
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType.Builder addTransportSegmentBuilder() {
      return getTransportSegmentFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType.getDefaultInstance());
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType.Builder addTransportSegmentBuilder(
        int index) {
      return getTransportSegmentFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType.getDefaultInstance());
    }
    /**
     * <pre>
     * 行程、段索引
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType TransportSegment = 2;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType.Builder> 
         getTransportSegmentBuilderList() {
      return getTransportSegmentFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentTypeOrBuilder> 
        getTransportSegmentFieldBuilder() {
      if (transportSegmentBuilder_ == null) {
        transportSegmentBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportSegmentTypeOrBuilder>(
                transportSegment_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        transportSegment_ = null;
      }
      return transportSegmentBuilder_;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType> offer_ =
      java.util.Collections.emptyList();
    private void ensureOfferIsMutable() {
      if (!((bitField0_ & 0x00000004) == 0x00000004)) {
        offer_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType>(offer_);
        bitField0_ |= 0x00000004;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder> offerBuilder_;

    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType> getOfferList() {
      if (offerBuilder_ == null) {
        return java.util.Collections.unmodifiableList(offer_);
      } else {
        return offerBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public int getOfferCount() {
      if (offerBuilder_ == null) {
        return offer_.size();
      } else {
        return offerBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType getOffer(int index) {
      if (offerBuilder_ == null) {
        return offer_.get(index);
      } else {
        return offerBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public Builder setOffer(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType value) {
      if (offerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOfferIsMutable();
        offer_.set(index, value);
        onChanged();
      } else {
        offerBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public Builder setOffer(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder builderForValue) {
      if (offerBuilder_ == null) {
        ensureOfferIsMutable();
        offer_.set(index, builderForValue.build());
        onChanged();
      } else {
        offerBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public Builder addOffer(com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType value) {
      if (offerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOfferIsMutable();
        offer_.add(value);
        onChanged();
      } else {
        offerBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public Builder addOffer(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType value) {
      if (offerBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureOfferIsMutable();
        offer_.add(index, value);
        onChanged();
      } else {
        offerBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public Builder addOffer(
        com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder builderForValue) {
      if (offerBuilder_ == null) {
        ensureOfferIsMutable();
        offer_.add(builderForValue.build());
        onChanged();
      } else {
        offerBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public Builder addOffer(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder builderForValue) {
      if (offerBuilder_ == null) {
        ensureOfferIsMutable();
        offer_.add(index, builderForValue.build());
        onChanged();
      } else {
        offerBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public Builder addAllOffer(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType> values) {
      if (offerBuilder_ == null) {
        ensureOfferIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, offer_);
        onChanged();
      } else {
        offerBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public Builder clearOffer() {
      if (offerBuilder_ == null) {
        offer_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
      } else {
        offerBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public Builder removeOffer(int index) {
      if (offerBuilder_ == null) {
        ensureOfferIsMutable();
        offer_.remove(index);
        onChanged();
      } else {
        offerBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder getOfferBuilder(
        int index) {
      return getOfferFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder getOfferOrBuilder(
        int index) {
      if (offerBuilder_ == null) {
        return offer_.get(index);  } else {
        return offerBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder> 
         getOfferOrBuilderList() {
      if (offerBuilder_ != null) {
        return offerBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(offer_);
      }
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder addOfferBuilder() {
      return getOfferFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.getDefaultInstance());
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder addOfferBuilder(
        int index) {
      return getOfferFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.getDefaultInstance());
    }
    /**
     * <pre>
     * 报价信息，每一个报价包含一组产品信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType Offer = 3;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder> 
         getOfferBuilderList() {
      return getOfferFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder> 
        getOfferFieldBuilder() {
      if (offerBuilder_ == null) {
        offerBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder>(
                offer_,
                ((bitField0_ & 0x00000004) == 0x00000004),
                getParentForChildren(),
                isClean());
        offer_ = null;
      }
      return offerBuilder_;
    }

    private int flyingManType_ ;
    /**
     * <pre>
     * 0:不是飞人, 1:普通飞人, 2:超级飞人
     * </pre>
     *
     * <code>int32 FlyingManType = 4;</code>
     */
    public int getFlyingManType() {
      return flyingManType_;
    }
    /**
     * <pre>
     * 0:不是飞人, 1:普通飞人, 2:超级飞人
     * </pre>
     *
     * <code>int32 FlyingManType = 4;</code>
     */
    public Builder setFlyingManType(int value) {
      
      flyingManType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 0:不是飞人, 1:普通飞人, 2:超级飞人
     * </pre>
     *
     * <code>int32 FlyingManType = 4;</code>
     */
    public Builder clearFlyingManType() {
      
      flyingManType_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType> interchange_ =
      java.util.Collections.emptyList();
    private void ensureInterchangeIsMutable() {
      if (!((bitField0_ & 0x00000010) == 0x00000010)) {
        interchange_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType>(interchange_);
        bitField0_ |= 0x00000010;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType, com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.InterchangeTypeOrBuilder> interchangeBuilder_;

    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType> getInterchangeList() {
      if (interchangeBuilder_ == null) {
        return java.util.Collections.unmodifiableList(interchange_);
      } else {
        return interchangeBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public int getInterchangeCount() {
      if (interchangeBuilder_ == null) {
        return interchange_.size();
      } else {
        return interchangeBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType getInterchange(int index) {
      if (interchangeBuilder_ == null) {
        return interchange_.get(index);
      } else {
        return interchangeBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public Builder setInterchange(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType value) {
      if (interchangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInterchangeIsMutable();
        interchange_.set(index, value);
        onChanged();
      } else {
        interchangeBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public Builder setInterchange(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType.Builder builderForValue) {
      if (interchangeBuilder_ == null) {
        ensureInterchangeIsMutable();
        interchange_.set(index, builderForValue.build());
        onChanged();
      } else {
        interchangeBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public Builder addInterchange(com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType value) {
      if (interchangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInterchangeIsMutable();
        interchange_.add(value);
        onChanged();
      } else {
        interchangeBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public Builder addInterchange(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType value) {
      if (interchangeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureInterchangeIsMutable();
        interchange_.add(index, value);
        onChanged();
      } else {
        interchangeBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public Builder addInterchange(
        com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType.Builder builderForValue) {
      if (interchangeBuilder_ == null) {
        ensureInterchangeIsMutable();
        interchange_.add(builderForValue.build());
        onChanged();
      } else {
        interchangeBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public Builder addInterchange(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType.Builder builderForValue) {
      if (interchangeBuilder_ == null) {
        ensureInterchangeIsMutable();
        interchange_.add(index, builderForValue.build());
        onChanged();
      } else {
        interchangeBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public Builder addAllInterchange(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType> values) {
      if (interchangeBuilder_ == null) {
        ensureInterchangeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, interchange_);
        onChanged();
      } else {
        interchangeBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public Builder clearInterchange() {
      if (interchangeBuilder_ == null) {
        interchange_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
      } else {
        interchangeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public Builder removeInterchange(int index) {
      if (interchangeBuilder_ == null) {
        ensureInterchangeIsMutable();
        interchange_.remove(index);
        onChanged();
      } else {
        interchangeBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType.Builder getInterchangeBuilder(
        int index) {
      return getInterchangeFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.InterchangeTypeOrBuilder getInterchangeOrBuilder(
        int index) {
      if (interchangeBuilder_ == null) {
        return interchange_.get(index);  } else {
        return interchangeBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.InterchangeTypeOrBuilder> 
         getInterchangeOrBuilderList() {
      if (interchangeBuilder_ != null) {
        return interchangeBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(interchange_);
      }
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType.Builder addInterchangeBuilder() {
      return getInterchangeFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType.getDefaultInstance());
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType.Builder addInterchangeBuilder(
        int index) {
      return getInterchangeFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType.getDefaultInstance());
    }
    /**
     * <pre>
     * 换乘信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType Interchange = 5;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType.Builder> 
         getInterchangeBuilderList() {
      return getInterchangeFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType, com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.InterchangeTypeOrBuilder> 
        getInterchangeFieldBuilder() {
      if (interchangeBuilder_ == null) {
        interchangeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType, com.ctrip.flight.agg.shopping.contract.transportation.InterchangeType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.InterchangeTypeOrBuilder>(
                interchange_,
                ((bitField0_ & 0x00000010) == 0x00000010),
                getParentForChildren(),
                isClean());
        interchange_ = null;
      }
      return interchangeBuilder_;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> tag_ =
      java.util.Collections.emptyList();
    private void ensureTagIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        tag_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType>(tag_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> tagBuilder_;

    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> getTagList() {
      if (tagBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tag_);
      } else {
        return tagBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public int getTagCount() {
      if (tagBuilder_ == null) {
        return tag_.size();
      } else {
        return tagBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType getTag(int index) {
      if (tagBuilder_ == null) {
        return tag_.get(index);
      } else {
        return tagBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public Builder setTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType value) {
      if (tagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagIsMutable();
        tag_.set(index, value);
        onChanged();
      } else {
        tagBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public Builder setTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder builderForValue) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.set(index, builderForValue.build());
        onChanged();
      } else {
        tagBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public Builder addTag(com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType value) {
      if (tagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagIsMutable();
        tag_.add(value);
        onChanged();
      } else {
        tagBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public Builder addTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType value) {
      if (tagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagIsMutable();
        tag_.add(index, value);
        onChanged();
      } else {
        tagBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public Builder addTag(
        com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder builderForValue) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.add(builderForValue.build());
        onChanged();
      } else {
        tagBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public Builder addTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder builderForValue) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.add(index, builderForValue.build());
        onChanged();
      } else {
        tagBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public Builder addAllTag(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> values) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tag_);
        onChanged();
      } else {
        tagBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public Builder clearTag() {
      if (tagBuilder_ == null) {
        tag_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        tagBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public Builder removeTag(int index) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.remove(index);
        onChanged();
      } else {
        tagBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder getTagBuilder(
        int index) {
      return getTagFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder getTagOrBuilder(
        int index) {
      if (tagBuilder_ == null) {
        return tag_.get(index);  } else {
        return tagBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> 
         getTagOrBuilderList() {
      if (tagBuilder_ != null) {
        return tagBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tag_);
      }
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder addTagBuilder() {
      return getTagFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.getDefaultInstance());
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder addTagBuilder(
        int index) {
      return getTagFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.getDefaultInstance());
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 6;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder> 
         getTagBuilderList() {
      return getTagFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> 
        getTagFieldBuilder() {
      if (tagBuilder_ == null) {
        tagBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder>(
                tag_,
                ((bitField0_ & 0x00000020) == 0x00000020),
                getParentForChildren(),
                isClean());
        tag_ = null;
      }
      return tagBuilder_;
    }

    private double priority_ ;
    /**
     * <pre>
     * 优先级, 数值越小优先级越高
     * </pre>
     *
     * <code>double Priority = 7;</code>
     */
    public double getPriority() {
      return priority_;
    }
    /**
     * <pre>
     * 优先级, 数值越小优先级越高
     * </pre>
     *
     * <code>double Priority = 7;</code>
     */
    public Builder setPriority(double value) {
      
      priority_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 优先级, 数值越小优先级越高
     * </pre>
     *
     * <code>double Priority = 7;</code>
     */
    public Builder clearPriority() {
      
      priority_ = 0D;
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType> referenceOffer_ =
      java.util.Collections.emptyList();
    private void ensureReferenceOfferIsMutable() {
      if (!((bitField0_ & 0x00000080) == 0x00000080)) {
        referenceOffer_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType>(referenceOffer_);
        bitField0_ |= 0x00000080;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder> referenceOfferBuilder_;

    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType> getReferenceOfferList() {
      if (referenceOfferBuilder_ == null) {
        return java.util.Collections.unmodifiableList(referenceOffer_);
      } else {
        return referenceOfferBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public int getReferenceOfferCount() {
      if (referenceOfferBuilder_ == null) {
        return referenceOffer_.size();
      } else {
        return referenceOfferBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType getReferenceOffer(int index) {
      if (referenceOfferBuilder_ == null) {
        return referenceOffer_.get(index);
      } else {
        return referenceOfferBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public Builder setReferenceOffer(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType value) {
      if (referenceOfferBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReferenceOfferIsMutable();
        referenceOffer_.set(index, value);
        onChanged();
      } else {
        referenceOfferBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public Builder setReferenceOffer(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder builderForValue) {
      if (referenceOfferBuilder_ == null) {
        ensureReferenceOfferIsMutable();
        referenceOffer_.set(index, builderForValue.build());
        onChanged();
      } else {
        referenceOfferBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public Builder addReferenceOffer(com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType value) {
      if (referenceOfferBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReferenceOfferIsMutable();
        referenceOffer_.add(value);
        onChanged();
      } else {
        referenceOfferBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public Builder addReferenceOffer(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType value) {
      if (referenceOfferBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureReferenceOfferIsMutable();
        referenceOffer_.add(index, value);
        onChanged();
      } else {
        referenceOfferBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public Builder addReferenceOffer(
        com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder builderForValue) {
      if (referenceOfferBuilder_ == null) {
        ensureReferenceOfferIsMutable();
        referenceOffer_.add(builderForValue.build());
        onChanged();
      } else {
        referenceOfferBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public Builder addReferenceOffer(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder builderForValue) {
      if (referenceOfferBuilder_ == null) {
        ensureReferenceOfferIsMutable();
        referenceOffer_.add(index, builderForValue.build());
        onChanged();
      } else {
        referenceOfferBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public Builder addAllReferenceOffer(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType> values) {
      if (referenceOfferBuilder_ == null) {
        ensureReferenceOfferIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, referenceOffer_);
        onChanged();
      } else {
        referenceOfferBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public Builder clearReferenceOffer() {
      if (referenceOfferBuilder_ == null) {
        referenceOffer_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
      } else {
        referenceOfferBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public Builder removeReferenceOffer(int index) {
      if (referenceOfferBuilder_ == null) {
        ensureReferenceOfferIsMutable();
        referenceOffer_.remove(index);
        onChanged();
      } else {
        referenceOfferBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder getReferenceOfferBuilder(
        int index) {
      return getReferenceOfferFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder getReferenceOfferOrBuilder(
        int index) {
      if (referenceOfferBuilder_ == null) {
        return referenceOffer_.get(index);  } else {
        return referenceOfferBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder> 
         getReferenceOfferOrBuilderList() {
      if (referenceOfferBuilder_ != null) {
        return referenceOfferBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(referenceOffer_);
      }
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder addReferenceOfferBuilder() {
      return getReferenceOfferFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.getDefaultInstance());
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder addReferenceOfferBuilder(
        int index) {
      return getReferenceOfferFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.getDefaultInstance());
    }
    /**
     * <pre>
     * 被正常运价引用的运价信息，如：儿童标准价
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType ReferenceOffer = 8;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder> 
         getReferenceOfferBuilderList() {
      return getReferenceOfferFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder> 
        getReferenceOfferFieldBuilder() {
      if (referenceOfferBuilder_ == null) {
        referenceOfferBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder>(
                referenceOffer_,
                ((bitField0_ & 0x00000080) == 0x00000080),
                getParentForChildren(),
                isClean());
        referenceOffer_ = null;
      }
      return referenceOfferBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType)
  private static final com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType();
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ItineraryType>
      PARSER = new com.google.protobuf.AbstractParser<ItineraryType>() {
    @java.lang.Override
    public ItineraryType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ItineraryType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ItineraryType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ItineraryType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.agg.shopping.contract.transportation.response.ItineraryType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

