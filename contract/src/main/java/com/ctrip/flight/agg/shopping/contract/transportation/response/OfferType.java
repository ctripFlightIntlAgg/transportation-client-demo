// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.ctrip.flight.agg.shopping.contract.transportation.response.proto

package com.ctrip.flight.agg.shopping.contract.transportation.response;

/**
 * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType}
 */
public  final class OfferType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType)
    OfferTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use OfferType.newBuilder() to construct.
  private OfferType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private OfferType() {
    transportFareMapping_ = java.util.Collections.emptyList();
    productDetail_ = java.util.Collections.emptyList();
    offerToken_ = "";
    productCombinationType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    baggageRef_ = java.util.Collections.emptyList();
    baggageAncillary_ = java.util.Collections.emptyList();
    priceAttributeID_ = java.util.Collections.emptyList();
    tag_ = java.util.Collections.emptyList();
    recommendedType_ = 0;
    transportHotelToken_ = "";
    priority_ = 0D;
    journeyAttachment_ = java.util.Collections.emptyList();
    offerID_ = 0;
    childStandardOfferRef_ = 0;
    sortIndicator_ = 0D;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private OfferType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              transportFareMapping_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType>();
              mutable_bitField0_ |= 0x00000001;
            }
            transportFareMapping_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType.parser(), extensionRegistry));
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              productDetail_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType>();
              mutable_bitField0_ |= 0x00000002;
            }
            productDetail_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType.parser(), extensionRegistry));
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();

            offerToken_ = s;
            break;
          }
          case 34: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              productCombinationType_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000008;
            }
            productCombinationType_.add(s);
            break;
          }
          case 42: {
            com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType.Builder subBuilder = null;
            if (offerPackage_ != null) {
              subBuilder = offerPackage_.toBuilder();
            }
            offerPackage_ = input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(offerPackage_);
              offerPackage_ = subBuilder.buildPartial();
            }

            break;
          }
          case 50: {
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              baggageRef_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType>();
              mutable_bitField0_ |= 0x00000020;
            }
            baggageRef_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType.parser(), extensionRegistry));
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              baggageAncillary_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType>();
              mutable_bitField0_ |= 0x00000040;
            }
            baggageAncillary_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType.parser(), extensionRegistry));
            break;
          }
          case 64: {
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
              priceAttributeID_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000080;
            }
            priceAttributeID_.add(input.readInt32());
            break;
          }
          case 66: {
            int length = input.readRawVarint32();
            int limit = input.pushLimit(length);
            if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
              priceAttributeID_ = new java.util.ArrayList<java.lang.Integer>();
              mutable_bitField0_ |= 0x00000080;
            }
            while (input.getBytesUntilLimit() > 0) {
              priceAttributeID_.add(input.readInt32());
            }
            input.popLimit(limit);
            break;
          }
          case 74: {
            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
              tag_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType>();
              mutable_bitField0_ |= 0x00000100;
            }
            tag_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.parser(), extensionRegistry));
            break;
          }
          case 80: {

            recommendedType_ = input.readInt32();
            break;
          }
          case 90: {
            java.lang.String s = input.readStringRequireUtf8();

            transportHotelToken_ = s;
            break;
          }
          case 97: {

            priority_ = input.readDouble();
            break;
          }
          case 106: {
            if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
              journeyAttachment_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType>();
              mutable_bitField0_ |= 0x00001000;
            }
            journeyAttachment_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType.parser(), extensionRegistry));
            break;
          }
          case 112: {

            offerID_ = input.readInt32();
            break;
          }
          case 120: {

            childStandardOfferRef_ = input.readInt32();
            break;
          }
          case 130: {
            com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.Builder subBuilder = null;
            if (upsellProduct_ != null) {
              subBuilder = upsellProduct_.toBuilder();
            }
            upsellProduct_ = input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(upsellProduct_);
              upsellProduct_ = subBuilder.buildPartial();
            }

            break;
          }
          case 138: {
            com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType.Builder subBuilder = null;
            if (productComposition_ != null) {
              subBuilder = productComposition_.toBuilder();
            }
            productComposition_ = input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(productComposition_);
              productComposition_ = subBuilder.buildPartial();
            }

            break;
          }
          case 146: {
            com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType.Builder subBuilder = null;
            if (offerComparison_ != null) {
              subBuilder = offerComparison_.toBuilder();
            }
            offerComparison_ = input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(offerComparison_);
              offerComparison_ = subBuilder.buildPartial();
            }

            break;
          }
          case 153: {

            sortIndicator_ = input.readDouble();
            break;
          }
          case 162: {
            com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType.Builder subBuilder = null;
            if (orderRule_ != null) {
              subBuilder = orderRule_.toBuilder();
            }
            orderRule_ = input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(orderRule_);
              orderRule_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        transportFareMapping_ = java.util.Collections.unmodifiableList(transportFareMapping_);
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        productDetail_ = java.util.Collections.unmodifiableList(productDetail_);
      }
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        productCombinationType_ = productCombinationType_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        baggageRef_ = java.util.Collections.unmodifiableList(baggageRef_);
      }
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        baggageAncillary_ = java.util.Collections.unmodifiableList(baggageAncillary_);
      }
      if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
        priceAttributeID_ = java.util.Collections.unmodifiableList(priceAttributeID_);
      }
      if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
        tag_ = java.util.Collections.unmodifiableList(tag_);
      }
      if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
        journeyAttachment_ = java.util.Collections.unmodifiableList(journeyAttachment_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_OfferType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_OfferType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.class, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder.class);
  }

  private int bitField0_;
  public static final int TRANSPORTFAREMAPPING_FIELD_NUMBER = 1;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType> transportFareMapping_;
  /**
   * <pre>
   * 行段详细信息，顺序与TransportRef一一对应
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType> getTransportFareMappingList() {
    return transportFareMapping_;
  }
  /**
   * <pre>
   * 行段详细信息，顺序与TransportRef一一对应
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingTypeOrBuilder> 
      getTransportFareMappingOrBuilderList() {
    return transportFareMapping_;
  }
  /**
   * <pre>
   * 行段详细信息，顺序与TransportRef一一对应
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
   */
  public int getTransportFareMappingCount() {
    return transportFareMapping_.size();
  }
  /**
   * <pre>
   * 行段详细信息，顺序与TransportRef一一对应
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType getTransportFareMapping(int index) {
    return transportFareMapping_.get(index);
  }
  /**
   * <pre>
   * 行段详细信息，顺序与TransportRef一一对应
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingTypeOrBuilder getTransportFareMappingOrBuilder(
      int index) {
    return transportFareMapping_.get(index);
  }

  public static final int PRODUCTDETAIL_FIELD_NUMBER = 2;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType> productDetail_;
  /**
   * <pre>
   * 产品详情列表，含价格等重要信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType> getProductDetailList() {
    return productDetail_;
  }
  /**
   * <pre>
   * 产品详情列表，含价格等重要信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailTypeOrBuilder> 
      getProductDetailOrBuilderList() {
    return productDetail_;
  }
  /**
   * <pre>
   * 产品详情列表，含价格等重要信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
   */
  public int getProductDetailCount() {
    return productDetail_.size();
  }
  /**
   * <pre>
   * 产品详情列表，含价格等重要信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType getProductDetail(int index) {
    return productDetail_.get(index);
  }
  /**
   * <pre>
   * 产品详情列表，含价格等重要信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailTypeOrBuilder getProductDetailOrBuilder(
      int index) {
    return productDetail_.get(index);
  }

  public static final int OFFERTOKEN_FIELD_NUMBER = 3;
  private volatile java.lang.Object offerToken_;
  /**
   * <pre>
   * 服务内部为每一个offer生成一个字符串类型的token，内容为加密字符串，反查时需要回传，不保证唯一性！
   * </pre>
   *
   * <code>string OfferToken = 3;</code>
   */
  public java.lang.String getOfferToken() {
    java.lang.Object ref = offerToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      offerToken_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 服务内部为每一个offer生成一个字符串类型的token，内容为加密字符串，反查时需要回传，不保证唯一性！
   * </pre>
   *
   * <code>string OfferToken = 3;</code>
   */
  public com.google.protobuf.ByteString
      getOfferTokenBytes() {
    java.lang.Object ref = offerToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      offerToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRODUCTCOMBINATIONTYPE_FIELD_NUMBER = 4;
  private com.google.protobuf.LazyStringList productCombinationType_;
  /**
   * <pre>
   * 产品组合类型, 包括了单程直飞的部分信息
   * </pre>
   *
   * <code>repeated string ProductCombinationType = 4;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getProductCombinationTypeList() {
    return productCombinationType_;
  }
  /**
   * <pre>
   * 产品组合类型, 包括了单程直飞的部分信息
   * </pre>
   *
   * <code>repeated string ProductCombinationType = 4;</code>
   */
  public int getProductCombinationTypeCount() {
    return productCombinationType_.size();
  }
  /**
   * <pre>
   * 产品组合类型, 包括了单程直飞的部分信息
   * </pre>
   *
   * <code>repeated string ProductCombinationType = 4;</code>
   */
  public java.lang.String getProductCombinationType(int index) {
    return productCombinationType_.get(index);
  }
  /**
   * <pre>
   * 产品组合类型, 包括了单程直飞的部分信息
   * </pre>
   *
   * <code>repeated string ProductCombinationType = 4;</code>
   */
  public com.google.protobuf.ByteString
      getProductCombinationTypeBytes(int index) {
    return productCombinationType_.getByteString(index);
  }

  public static final int OFFERPACKAGE_FIELD_NUMBER = 5;
  private com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType offerPackage_;
  /**
   * <pre>
   * 绑定在Offer维度的辅营信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
   */
  public boolean hasOfferPackage() {
    return offerPackage_ != null;
  }
  /**
   * <pre>
   * 绑定在Offer维度的辅营信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType getOfferPackage() {
    return offerPackage_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType.getDefaultInstance() : offerPackage_;
  }
  /**
   * <pre>
   * 绑定在Offer维度的辅营信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageTypeOrBuilder getOfferPackageOrBuilder() {
    return getOfferPackage();
  }

  public static final int BAGGAGEREF_FIELD_NUMBER = 6;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType> baggageRef_;
  /**
   * <pre>
   * 行李信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType> getBaggageRefList() {
    return baggageRef_;
  }
  /**
   * <pre>
   * 行李信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefTypeOrBuilder> 
      getBaggageRefOrBuilderList() {
    return baggageRef_;
  }
  /**
   * <pre>
   * 行李信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
   */
  public int getBaggageRefCount() {
    return baggageRef_.size();
  }
  /**
   * <pre>
   * 行李信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType getBaggageRef(int index) {
    return baggageRef_.get(index);
  }
  /**
   * <pre>
   * 行李信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefTypeOrBuilder getBaggageRefOrBuilder(
      int index) {
    return baggageRef_.get(index);
  }

  public static final int BAGGAGEANCILLARY_FIELD_NUMBER = 7;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType> baggageAncillary_;
  /**
   * <pre>
   * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType> getBaggageAncillaryList() {
    return baggageAncillary_;
  }
  /**
   * <pre>
   * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryTypeOrBuilder> 
      getBaggageAncillaryOrBuilderList() {
    return baggageAncillary_;
  }
  /**
   * <pre>
   * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
   */
  public int getBaggageAncillaryCount() {
    return baggageAncillary_.size();
  }
  /**
   * <pre>
   * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType getBaggageAncillary(int index) {
    return baggageAncillary_.get(index);
  }
  /**
   * <pre>
   * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryTypeOrBuilder getBaggageAncillaryOrBuilder(
      int index) {
    return baggageAncillary_.get(index);
  }

  public static final int PRICEATTRIBUTEID_FIELD_NUMBER = 8;
  private java.util.List<java.lang.Integer> priceAttributeID_;
  /**
   * <pre>
   * 国际机票价格属性ID集合
   * </pre>
   *
   * <code>repeated int32 PriceAttributeID = 8;</code>
   */
  public java.util.List<java.lang.Integer>
      getPriceAttributeIDList() {
    return priceAttributeID_;
  }
  /**
   * <pre>
   * 国际机票价格属性ID集合
   * </pre>
   *
   * <code>repeated int32 PriceAttributeID = 8;</code>
   */
  public int getPriceAttributeIDCount() {
    return priceAttributeID_.size();
  }
  /**
   * <pre>
   * 国际机票价格属性ID集合
   * </pre>
   *
   * <code>repeated int32 PriceAttributeID = 8;</code>
   */
  public int getPriceAttributeID(int index) {
    return priceAttributeID_.get(index);
  }
  private int priceAttributeIDMemoizedSerializedSize = -1;

  public static final int TAG_FIELD_NUMBER = 9;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> tag_;
  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> getTagList() {
    return tag_;
  }
  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> 
      getTagOrBuilderList() {
    return tag_;
  }
  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
   */
  public int getTagCount() {
    return tag_.size();
  }
  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType getTag(int index) {
    return tag_.get(index);
  }
  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder getTagOrBuilder(
      int index) {
    return tag_.get(index);
  }

  public static final int RECOMMENDEDTYPE_FIELD_NUMBER = 10;
  private int recommendedType_;
  /**
   * <pre>
   * 推荐类运价类型, 默认0：普通运价； 1: 推荐类运价； 2:普通运价+推荐类(既是普通又是推荐类，与前端展示有关)
   * </pre>
   *
   * <code>int32 RecommendedType = 10;</code>
   */
  public int getRecommendedType() {
    return recommendedType_;
  }

  public static final int TRANSPORTHOTELTOKEN_FIELD_NUMBER = 11;
  private volatile java.lang.Object transportHotelToken_;
  /**
   * <pre>
   * 机酒Token，调机酒服务时使用
   * </pre>
   *
   * <code>string TransportHotelToken = 11;</code>
   */
  public java.lang.String getTransportHotelToken() {
    java.lang.Object ref = transportHotelToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      transportHotelToken_ = s;
      return s;
    }
  }
  /**
   * <pre>
   * 机酒Token，调机酒服务时使用
   * </pre>
   *
   * <code>string TransportHotelToken = 11;</code>
   */
  public com.google.protobuf.ByteString
      getTransportHotelTokenBytes() {
    java.lang.Object ref = transportHotelToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      transportHotelToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PRIORITY_FIELD_NUMBER = 12;
  private double priority_;
  /**
   * <pre>
   * 优先级, 数值越小优先级越高
   * </pre>
   *
   * <code>double Priority = 12;</code>
   */
  public double getPriority() {
    return priority_;
  }

  public static final int JOURNEYATTACHMENT_FIELD_NUMBER = 13;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType> journeyAttachment_;
  /**
   * <pre>
   * 与行程有关的相关信息。List中元素的数量最多和行程数一样
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType> getJourneyAttachmentList() {
    return journeyAttachment_;
  }
  /**
   * <pre>
   * 与行程有关的相关信息。List中元素的数量最多和行程数一样
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentTypeOrBuilder> 
      getJourneyAttachmentOrBuilderList() {
    return journeyAttachment_;
  }
  /**
   * <pre>
   * 与行程有关的相关信息。List中元素的数量最多和行程数一样
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
   */
  public int getJourneyAttachmentCount() {
    return journeyAttachment_.size();
  }
  /**
   * <pre>
   * 与行程有关的相关信息。List中元素的数量最多和行程数一样
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType getJourneyAttachment(int index) {
    return journeyAttachment_.get(index);
  }
  /**
   * <pre>
   * 与行程有关的相关信息。List中元素的数量最多和行程数一样
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentTypeOrBuilder getJourneyAttachmentOrBuilder(
      int index) {
    return journeyAttachment_.get(index);
  }

  public static final int OFFERID_FIELD_NUMBER = 14;
  private int offerID_;
  /**
   * <pre>
   * 运价索引 每次查询唯一
   * </pre>
   *
   * <code>int32 OfferID = 14;</code>
   */
  public int getOfferID() {
    return offerID_;
  }

  public static final int CHILDSTANDARDOFFERREF_FIELD_NUMBER = 15;
  private int childStandardOfferRef_;
  /**
   * <pre>
   * 引用的offerId。暂时用于标识儿童标准价offer隶属于哪个Offer下
   * </pre>
   *
   * <code>int32 ChildStandardOfferRef = 15;</code>
   */
  public int getChildStandardOfferRef() {
    return childStandardOfferRef_;
  }

  public static final int UPSELLPRODUCT_FIELD_NUMBER = 16;
  private com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType upsellProduct_;
  /**
   * <pre>
   * Upsell促销信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType UpsellProduct = 16;</code>
   */
  public boolean hasUpsellProduct() {
    return upsellProduct_ != null;
  }
  /**
   * <pre>
   * Upsell促销信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType UpsellProduct = 16;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType getUpsellProduct() {
    return upsellProduct_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.getDefaultInstance() : upsellProduct_;
  }
  /**
   * <pre>
   * Upsell促销信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType UpsellProduct = 16;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductTypeOrBuilder getUpsellProductOrBuilder() {
    return getUpsellProduct();
  }

  public static final int PRODUCTCOMPOSITION_FIELD_NUMBER = 17;
  private com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType productComposition_;
  /**
   * <pre>
   * 可展示的运价金额 已确认目前没人用,直接删除
   * DisplayedOfferAmountType DisplayedOfferAmount = 17 [deprecated = true];
   * 产品组合关系
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType ProductComposition = 17;</code>
   */
  public boolean hasProductComposition() {
    return productComposition_ != null;
  }
  /**
   * <pre>
   * 可展示的运价金额 已确认目前没人用,直接删除
   * DisplayedOfferAmountType DisplayedOfferAmount = 17 [deprecated = true];
   * 产品组合关系
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType ProductComposition = 17;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType getProductComposition() {
    return productComposition_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType.getDefaultInstance() : productComposition_;
  }
  /**
   * <pre>
   * 可展示的运价金额 已确认目前没人用,直接删除
   * DisplayedOfferAmountType DisplayedOfferAmount = 17 [deprecated = true];
   * 产品组合关系
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType ProductComposition = 17;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionTypeOrBuilder getProductCompositionOrBuilder() {
    return getProductComposition();
  }

  public static final int OFFERCOMPARISON_FIELD_NUMBER = 18;
  private com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType offerComparison_;
  /**
   * <pre>
   * 比价信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType OfferComparison = 18;</code>
   */
  public boolean hasOfferComparison() {
    return offerComparison_ != null;
  }
  /**
   * <pre>
   * 比价信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType OfferComparison = 18;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType getOfferComparison() {
    return offerComparison_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType.getDefaultInstance() : offerComparison_;
  }
  /**
   * <pre>
   * 比价信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType OfferComparison = 18;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonTypeOrBuilder getOfferComparisonOrBuilder() {
    return getOfferComparison();
  }

  public static final int SORTINDICATOR_FIELD_NUMBER = 19;
  private double sortIndicator_;
  /**
   * <pre>
   * 平均含税底价 0表示未输出
   * </pre>
   *
   * <code>double SortIndicator = 19;</code>
   */
  public double getSortIndicator() {
    return sortIndicator_;
  }

  public static final int ORDERRULE_FIELD_NUMBER = 20;
  private com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType orderRule_;
  /**
   * <pre>
   * 运价展示顺序规则
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType OrderRule = 20;</code>
   */
  public boolean hasOrderRule() {
    return orderRule_ != null;
  }
  /**
   * <pre>
   * 运价展示顺序规则
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType OrderRule = 20;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType getOrderRule() {
    return orderRule_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType.getDefaultInstance() : orderRule_;
  }
  /**
   * <pre>
   * 运价展示顺序规则
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType OrderRule = 20;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleTypeOrBuilder getOrderRuleOrBuilder() {
    return getOrderRule();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    getSerializedSize();
    for (int i = 0; i < transportFareMapping_.size(); i++) {
      output.writeMessage(1, transportFareMapping_.get(i));
    }
    for (int i = 0; i < productDetail_.size(); i++) {
      output.writeMessage(2, productDetail_.get(i));
    }
    if (!getOfferTokenBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, offerToken_);
    }
    for (int i = 0; i < productCombinationType_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, productCombinationType_.getRaw(i));
    }
    if (offerPackage_ != null) {
      output.writeMessage(5, getOfferPackage());
    }
    for (int i = 0; i < baggageRef_.size(); i++) {
      output.writeMessage(6, baggageRef_.get(i));
    }
    for (int i = 0; i < baggageAncillary_.size(); i++) {
      output.writeMessage(7, baggageAncillary_.get(i));
    }
    if (getPriceAttributeIDList().size() > 0) {
      output.writeUInt32NoTag(66);
      output.writeUInt32NoTag(priceAttributeIDMemoizedSerializedSize);
    }
    for (int i = 0; i < priceAttributeID_.size(); i++) {
      output.writeInt32NoTag(priceAttributeID_.get(i));
    }
    for (int i = 0; i < tag_.size(); i++) {
      output.writeMessage(9, tag_.get(i));
    }
    if (recommendedType_ != 0) {
      output.writeInt32(10, recommendedType_);
    }
    if (!getTransportHotelTokenBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, transportHotelToken_);
    }
    if (priority_ != 0D) {
      output.writeDouble(12, priority_);
    }
    for (int i = 0; i < journeyAttachment_.size(); i++) {
      output.writeMessage(13, journeyAttachment_.get(i));
    }
    if (offerID_ != 0) {
      output.writeInt32(14, offerID_);
    }
    if (childStandardOfferRef_ != 0) {
      output.writeInt32(15, childStandardOfferRef_);
    }
    if (upsellProduct_ != null) {
      output.writeMessage(16, getUpsellProduct());
    }
    if (productComposition_ != null) {
      output.writeMessage(17, getProductComposition());
    }
    if (offerComparison_ != null) {
      output.writeMessage(18, getOfferComparison());
    }
    if (sortIndicator_ != 0D) {
      output.writeDouble(19, sortIndicator_);
    }
    if (orderRule_ != null) {
      output.writeMessage(20, getOrderRule());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (int i = 0; i < transportFareMapping_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, transportFareMapping_.get(i));
    }
    for (int i = 0; i < productDetail_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, productDetail_.get(i));
    }
    if (!getOfferTokenBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, offerToken_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < productCombinationType_.size(); i++) {
        dataSize += computeStringSizeNoTag(productCombinationType_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getProductCombinationTypeList().size();
    }
    if (offerPackage_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getOfferPackage());
    }
    for (int i = 0; i < baggageRef_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(6, baggageRef_.get(i));
    }
    for (int i = 0; i < baggageAncillary_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, baggageAncillary_.get(i));
    }
    {
      int dataSize = 0;
      for (int i = 0; i < priceAttributeID_.size(); i++) {
        dataSize += com.google.protobuf.CodedOutputStream
          .computeInt32SizeNoTag(priceAttributeID_.get(i));
      }
      size += dataSize;
      if (!getPriceAttributeIDList().isEmpty()) {
        size += 1;
        size += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dataSize);
      }
      priceAttributeIDMemoizedSerializedSize = dataSize;
    }
    for (int i = 0; i < tag_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, tag_.get(i));
    }
    if (recommendedType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, recommendedType_);
    }
    if (!getTransportHotelTokenBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, transportHotelToken_);
    }
    if (priority_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(12, priority_);
    }
    for (int i = 0; i < journeyAttachment_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, journeyAttachment_.get(i));
    }
    if (offerID_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(14, offerID_);
    }
    if (childStandardOfferRef_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(15, childStandardOfferRef_);
    }
    if (upsellProduct_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(16, getUpsellProduct());
    }
    if (productComposition_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(17, getProductComposition());
    }
    if (offerComparison_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(18, getOfferComparison());
    }
    if (sortIndicator_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(19, sortIndicator_);
    }
    if (orderRule_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(20, getOrderRule());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType other = (com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType) obj;

    boolean result = true;
    result = result && getTransportFareMappingList()
        .equals(other.getTransportFareMappingList());
    result = result && getProductDetailList()
        .equals(other.getProductDetailList());
    result = result && getOfferToken()
        .equals(other.getOfferToken());
    result = result && getProductCombinationTypeList()
        .equals(other.getProductCombinationTypeList());
    result = result && (hasOfferPackage() == other.hasOfferPackage());
    if (hasOfferPackage()) {
      result = result && getOfferPackage()
          .equals(other.getOfferPackage());
    }
    result = result && getBaggageRefList()
        .equals(other.getBaggageRefList());
    result = result && getBaggageAncillaryList()
        .equals(other.getBaggageAncillaryList());
    result = result && getPriceAttributeIDList()
        .equals(other.getPriceAttributeIDList());
    result = result && getTagList()
        .equals(other.getTagList());
    result = result && (getRecommendedType()
        == other.getRecommendedType());
    result = result && getTransportHotelToken()
        .equals(other.getTransportHotelToken());
    result = result && (
        java.lang.Double.doubleToLongBits(getPriority())
        == java.lang.Double.doubleToLongBits(
            other.getPriority()));
    result = result && getJourneyAttachmentList()
        .equals(other.getJourneyAttachmentList());
    result = result && (getOfferID()
        == other.getOfferID());
    result = result && (getChildStandardOfferRef()
        == other.getChildStandardOfferRef());
    result = result && (hasUpsellProduct() == other.hasUpsellProduct());
    if (hasUpsellProduct()) {
      result = result && getUpsellProduct()
          .equals(other.getUpsellProduct());
    }
    result = result && (hasProductComposition() == other.hasProductComposition());
    if (hasProductComposition()) {
      result = result && getProductComposition()
          .equals(other.getProductComposition());
    }
    result = result && (hasOfferComparison() == other.hasOfferComparison());
    if (hasOfferComparison()) {
      result = result && getOfferComparison()
          .equals(other.getOfferComparison());
    }
    result = result && (
        java.lang.Double.doubleToLongBits(getSortIndicator())
        == java.lang.Double.doubleToLongBits(
            other.getSortIndicator()));
    result = result && (hasOrderRule() == other.hasOrderRule());
    if (hasOrderRule()) {
      result = result && getOrderRule()
          .equals(other.getOrderRule());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getTransportFareMappingCount() > 0) {
      hash = (37 * hash) + TRANSPORTFAREMAPPING_FIELD_NUMBER;
      hash = (53 * hash) + getTransportFareMappingList().hashCode();
    }
    if (getProductDetailCount() > 0) {
      hash = (37 * hash) + PRODUCTDETAIL_FIELD_NUMBER;
      hash = (53 * hash) + getProductDetailList().hashCode();
    }
    hash = (37 * hash) + OFFERTOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getOfferToken().hashCode();
    if (getProductCombinationTypeCount() > 0) {
      hash = (37 * hash) + PRODUCTCOMBINATIONTYPE_FIELD_NUMBER;
      hash = (53 * hash) + getProductCombinationTypeList().hashCode();
    }
    if (hasOfferPackage()) {
      hash = (37 * hash) + OFFERPACKAGE_FIELD_NUMBER;
      hash = (53 * hash) + getOfferPackage().hashCode();
    }
    if (getBaggageRefCount() > 0) {
      hash = (37 * hash) + BAGGAGEREF_FIELD_NUMBER;
      hash = (53 * hash) + getBaggageRefList().hashCode();
    }
    if (getBaggageAncillaryCount() > 0) {
      hash = (37 * hash) + BAGGAGEANCILLARY_FIELD_NUMBER;
      hash = (53 * hash) + getBaggageAncillaryList().hashCode();
    }
    if (getPriceAttributeIDCount() > 0) {
      hash = (37 * hash) + PRICEATTRIBUTEID_FIELD_NUMBER;
      hash = (53 * hash) + getPriceAttributeIDList().hashCode();
    }
    if (getTagCount() > 0) {
      hash = (37 * hash) + TAG_FIELD_NUMBER;
      hash = (53 * hash) + getTagList().hashCode();
    }
    hash = (37 * hash) + RECOMMENDEDTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getRecommendedType();
    hash = (37 * hash) + TRANSPORTHOTELTOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getTransportHotelToken().hashCode();
    hash = (37 * hash) + PRIORITY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getPriority()));
    if (getJourneyAttachmentCount() > 0) {
      hash = (37 * hash) + JOURNEYATTACHMENT_FIELD_NUMBER;
      hash = (53 * hash) + getJourneyAttachmentList().hashCode();
    }
    hash = (37 * hash) + OFFERID_FIELD_NUMBER;
    hash = (53 * hash) + getOfferID();
    hash = (37 * hash) + CHILDSTANDARDOFFERREF_FIELD_NUMBER;
    hash = (53 * hash) + getChildStandardOfferRef();
    if (hasUpsellProduct()) {
      hash = (37 * hash) + UPSELLPRODUCT_FIELD_NUMBER;
      hash = (53 * hash) + getUpsellProduct().hashCode();
    }
    if (hasProductComposition()) {
      hash = (37 * hash) + PRODUCTCOMPOSITION_FIELD_NUMBER;
      hash = (53 * hash) + getProductComposition().hashCode();
    }
    if (hasOfferComparison()) {
      hash = (37 * hash) + OFFERCOMPARISON_FIELD_NUMBER;
      hash = (53 * hash) + getOfferComparison().hashCode();
    }
    hash = (37 * hash) + SORTINDICATOR_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getSortIndicator()));
    if (hasOrderRule()) {
      hash = (37 * hash) + ORDERRULE_FIELD_NUMBER;
      hash = (53 * hash) + getOrderRule().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType)
      com.ctrip.flight.agg.shopping.contract.transportation.response.OfferTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_OfferType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_OfferType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.class, com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.Builder.class);
    }

    // Construct using com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getTransportFareMappingFieldBuilder();
        getProductDetailFieldBuilder();
        getBaggageRefFieldBuilder();
        getBaggageAncillaryFieldBuilder();
        getTagFieldBuilder();
        getJourneyAttachmentFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (transportFareMappingBuilder_ == null) {
        transportFareMapping_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
      } else {
        transportFareMappingBuilder_.clear();
      }
      if (productDetailBuilder_ == null) {
        productDetail_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        productDetailBuilder_.clear();
      }
      offerToken_ = "";

      productCombinationType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      if (offerPackageBuilder_ == null) {
        offerPackage_ = null;
      } else {
        offerPackage_ = null;
        offerPackageBuilder_ = null;
      }
      if (baggageRefBuilder_ == null) {
        baggageRef_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
      } else {
        baggageRefBuilder_.clear();
      }
      if (baggageAncillaryBuilder_ == null) {
        baggageAncillary_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        baggageAncillaryBuilder_.clear();
      }
      priceAttributeID_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000080);
      if (tagBuilder_ == null) {
        tag_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
      } else {
        tagBuilder_.clear();
      }
      recommendedType_ = 0;

      transportHotelToken_ = "";

      priority_ = 0D;

      if (journeyAttachmentBuilder_ == null) {
        journeyAttachment_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
      } else {
        journeyAttachmentBuilder_.clear();
      }
      offerID_ = 0;

      childStandardOfferRef_ = 0;

      if (upsellProductBuilder_ == null) {
        upsellProduct_ = null;
      } else {
        upsellProduct_ = null;
        upsellProductBuilder_ = null;
      }
      if (productCompositionBuilder_ == null) {
        productComposition_ = null;
      } else {
        productComposition_ = null;
        productCompositionBuilder_ = null;
      }
      if (offerComparisonBuilder_ == null) {
        offerComparison_ = null;
      } else {
        offerComparison_ = null;
        offerComparisonBuilder_ = null;
      }
      sortIndicator_ = 0D;

      if (orderRuleBuilder_ == null) {
        orderRule_ = null;
      } else {
        orderRule_ = null;
        orderRuleBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_OfferType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType getDefaultInstanceForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType build() {
      com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType buildPartial() {
      com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType result = new com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (transportFareMappingBuilder_ == null) {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          transportFareMapping_ = java.util.Collections.unmodifiableList(transportFareMapping_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.transportFareMapping_ = transportFareMapping_;
      } else {
        result.transportFareMapping_ = transportFareMappingBuilder_.build();
      }
      if (productDetailBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          productDetail_ = java.util.Collections.unmodifiableList(productDetail_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.productDetail_ = productDetail_;
      } else {
        result.productDetail_ = productDetailBuilder_.build();
      }
      result.offerToken_ = offerToken_;
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        productCombinationType_ = productCombinationType_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000008);
      }
      result.productCombinationType_ = productCombinationType_;
      if (offerPackageBuilder_ == null) {
        result.offerPackage_ = offerPackage_;
      } else {
        result.offerPackage_ = offerPackageBuilder_.build();
      }
      if (baggageRefBuilder_ == null) {
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          baggageRef_ = java.util.Collections.unmodifiableList(baggageRef_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.baggageRef_ = baggageRef_;
      } else {
        result.baggageRef_ = baggageRefBuilder_.build();
      }
      if (baggageAncillaryBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          baggageAncillary_ = java.util.Collections.unmodifiableList(baggageAncillary_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.baggageAncillary_ = baggageAncillary_;
      } else {
        result.baggageAncillary_ = baggageAncillaryBuilder_.build();
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        priceAttributeID_ = java.util.Collections.unmodifiableList(priceAttributeID_);
        bitField0_ = (bitField0_ & ~0x00000080);
      }
      result.priceAttributeID_ = priceAttributeID_;
      if (tagBuilder_ == null) {
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          tag_ = java.util.Collections.unmodifiableList(tag_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.tag_ = tag_;
      } else {
        result.tag_ = tagBuilder_.build();
      }
      result.recommendedType_ = recommendedType_;
      result.transportHotelToken_ = transportHotelToken_;
      result.priority_ = priority_;
      if (journeyAttachmentBuilder_ == null) {
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          journeyAttachment_ = java.util.Collections.unmodifiableList(journeyAttachment_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.journeyAttachment_ = journeyAttachment_;
      } else {
        result.journeyAttachment_ = journeyAttachmentBuilder_.build();
      }
      result.offerID_ = offerID_;
      result.childStandardOfferRef_ = childStandardOfferRef_;
      if (upsellProductBuilder_ == null) {
        result.upsellProduct_ = upsellProduct_;
      } else {
        result.upsellProduct_ = upsellProductBuilder_.build();
      }
      if (productCompositionBuilder_ == null) {
        result.productComposition_ = productComposition_;
      } else {
        result.productComposition_ = productCompositionBuilder_.build();
      }
      if (offerComparisonBuilder_ == null) {
        result.offerComparison_ = offerComparison_;
      } else {
        result.offerComparison_ = offerComparisonBuilder_.build();
      }
      result.sortIndicator_ = sortIndicator_;
      if (orderRuleBuilder_ == null) {
        result.orderRule_ = orderRule_;
      } else {
        result.orderRule_ = orderRuleBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType) {
        return mergeFrom((com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType other) {
      if (other == com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType.getDefaultInstance()) return this;
      if (transportFareMappingBuilder_ == null) {
        if (!other.transportFareMapping_.isEmpty()) {
          if (transportFareMapping_.isEmpty()) {
            transportFareMapping_ = other.transportFareMapping_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTransportFareMappingIsMutable();
            transportFareMapping_.addAll(other.transportFareMapping_);
          }
          onChanged();
        }
      } else {
        if (!other.transportFareMapping_.isEmpty()) {
          if (transportFareMappingBuilder_.isEmpty()) {
            transportFareMappingBuilder_.dispose();
            transportFareMappingBuilder_ = null;
            transportFareMapping_ = other.transportFareMapping_;
            bitField0_ = (bitField0_ & ~0x00000001);
            transportFareMappingBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTransportFareMappingFieldBuilder() : null;
          } else {
            transportFareMappingBuilder_.addAllMessages(other.transportFareMapping_);
          }
        }
      }
      if (productDetailBuilder_ == null) {
        if (!other.productDetail_.isEmpty()) {
          if (productDetail_.isEmpty()) {
            productDetail_ = other.productDetail_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureProductDetailIsMutable();
            productDetail_.addAll(other.productDetail_);
          }
          onChanged();
        }
      } else {
        if (!other.productDetail_.isEmpty()) {
          if (productDetailBuilder_.isEmpty()) {
            productDetailBuilder_.dispose();
            productDetailBuilder_ = null;
            productDetail_ = other.productDetail_;
            bitField0_ = (bitField0_ & ~0x00000002);
            productDetailBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getProductDetailFieldBuilder() : null;
          } else {
            productDetailBuilder_.addAllMessages(other.productDetail_);
          }
        }
      }
      if (!other.getOfferToken().isEmpty()) {
        offerToken_ = other.offerToken_;
        onChanged();
      }
      if (!other.productCombinationType_.isEmpty()) {
        if (productCombinationType_.isEmpty()) {
          productCombinationType_ = other.productCombinationType_;
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          ensureProductCombinationTypeIsMutable();
          productCombinationType_.addAll(other.productCombinationType_);
        }
        onChanged();
      }
      if (other.hasOfferPackage()) {
        mergeOfferPackage(other.getOfferPackage());
      }
      if (baggageRefBuilder_ == null) {
        if (!other.baggageRef_.isEmpty()) {
          if (baggageRef_.isEmpty()) {
            baggageRef_ = other.baggageRef_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureBaggageRefIsMutable();
            baggageRef_.addAll(other.baggageRef_);
          }
          onChanged();
        }
      } else {
        if (!other.baggageRef_.isEmpty()) {
          if (baggageRefBuilder_.isEmpty()) {
            baggageRefBuilder_.dispose();
            baggageRefBuilder_ = null;
            baggageRef_ = other.baggageRef_;
            bitField0_ = (bitField0_ & ~0x00000020);
            baggageRefBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBaggageRefFieldBuilder() : null;
          } else {
            baggageRefBuilder_.addAllMessages(other.baggageRef_);
          }
        }
      }
      if (baggageAncillaryBuilder_ == null) {
        if (!other.baggageAncillary_.isEmpty()) {
          if (baggageAncillary_.isEmpty()) {
            baggageAncillary_ = other.baggageAncillary_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureBaggageAncillaryIsMutable();
            baggageAncillary_.addAll(other.baggageAncillary_);
          }
          onChanged();
        }
      } else {
        if (!other.baggageAncillary_.isEmpty()) {
          if (baggageAncillaryBuilder_.isEmpty()) {
            baggageAncillaryBuilder_.dispose();
            baggageAncillaryBuilder_ = null;
            baggageAncillary_ = other.baggageAncillary_;
            bitField0_ = (bitField0_ & ~0x00000040);
            baggageAncillaryBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getBaggageAncillaryFieldBuilder() : null;
          } else {
            baggageAncillaryBuilder_.addAllMessages(other.baggageAncillary_);
          }
        }
      }
      if (!other.priceAttributeID_.isEmpty()) {
        if (priceAttributeID_.isEmpty()) {
          priceAttributeID_ = other.priceAttributeID_;
          bitField0_ = (bitField0_ & ~0x00000080);
        } else {
          ensurePriceAttributeIDIsMutable();
          priceAttributeID_.addAll(other.priceAttributeID_);
        }
        onChanged();
      }
      if (tagBuilder_ == null) {
        if (!other.tag_.isEmpty()) {
          if (tag_.isEmpty()) {
            tag_ = other.tag_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureTagIsMutable();
            tag_.addAll(other.tag_);
          }
          onChanged();
        }
      } else {
        if (!other.tag_.isEmpty()) {
          if (tagBuilder_.isEmpty()) {
            tagBuilder_.dispose();
            tagBuilder_ = null;
            tag_ = other.tag_;
            bitField0_ = (bitField0_ & ~0x00000100);
            tagBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTagFieldBuilder() : null;
          } else {
            tagBuilder_.addAllMessages(other.tag_);
          }
        }
      }
      if (other.getRecommendedType() != 0) {
        setRecommendedType(other.getRecommendedType());
      }
      if (!other.getTransportHotelToken().isEmpty()) {
        transportHotelToken_ = other.transportHotelToken_;
        onChanged();
      }
      if (other.getPriority() != 0D) {
        setPriority(other.getPriority());
      }
      if (journeyAttachmentBuilder_ == null) {
        if (!other.journeyAttachment_.isEmpty()) {
          if (journeyAttachment_.isEmpty()) {
            journeyAttachment_ = other.journeyAttachment_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureJourneyAttachmentIsMutable();
            journeyAttachment_.addAll(other.journeyAttachment_);
          }
          onChanged();
        }
      } else {
        if (!other.journeyAttachment_.isEmpty()) {
          if (journeyAttachmentBuilder_.isEmpty()) {
            journeyAttachmentBuilder_.dispose();
            journeyAttachmentBuilder_ = null;
            journeyAttachment_ = other.journeyAttachment_;
            bitField0_ = (bitField0_ & ~0x00001000);
            journeyAttachmentBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getJourneyAttachmentFieldBuilder() : null;
          } else {
            journeyAttachmentBuilder_.addAllMessages(other.journeyAttachment_);
          }
        }
      }
      if (other.getOfferID() != 0) {
        setOfferID(other.getOfferID());
      }
      if (other.getChildStandardOfferRef() != 0) {
        setChildStandardOfferRef(other.getChildStandardOfferRef());
      }
      if (other.hasUpsellProduct()) {
        mergeUpsellProduct(other.getUpsellProduct());
      }
      if (other.hasProductComposition()) {
        mergeProductComposition(other.getProductComposition());
      }
      if (other.hasOfferComparison()) {
        mergeOfferComparison(other.getOfferComparison());
      }
      if (other.getSortIndicator() != 0D) {
        setSortIndicator(other.getSortIndicator());
      }
      if (other.hasOrderRule()) {
        mergeOrderRule(other.getOrderRule());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType> transportFareMapping_ =
      java.util.Collections.emptyList();
    private void ensureTransportFareMappingIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        transportFareMapping_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType>(transportFareMapping_);
        bitField0_ |= 0x00000001;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingTypeOrBuilder> transportFareMappingBuilder_;

    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType> getTransportFareMappingList() {
      if (transportFareMappingBuilder_ == null) {
        return java.util.Collections.unmodifiableList(transportFareMapping_);
      } else {
        return transportFareMappingBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public int getTransportFareMappingCount() {
      if (transportFareMappingBuilder_ == null) {
        return transportFareMapping_.size();
      } else {
        return transportFareMappingBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType getTransportFareMapping(int index) {
      if (transportFareMappingBuilder_ == null) {
        return transportFareMapping_.get(index);
      } else {
        return transportFareMappingBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public Builder setTransportFareMapping(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType value) {
      if (transportFareMappingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransportFareMappingIsMutable();
        transportFareMapping_.set(index, value);
        onChanged();
      } else {
        transportFareMappingBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public Builder setTransportFareMapping(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType.Builder builderForValue) {
      if (transportFareMappingBuilder_ == null) {
        ensureTransportFareMappingIsMutable();
        transportFareMapping_.set(index, builderForValue.build());
        onChanged();
      } else {
        transportFareMappingBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public Builder addTransportFareMapping(com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType value) {
      if (transportFareMappingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransportFareMappingIsMutable();
        transportFareMapping_.add(value);
        onChanged();
      } else {
        transportFareMappingBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public Builder addTransportFareMapping(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType value) {
      if (transportFareMappingBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTransportFareMappingIsMutable();
        transportFareMapping_.add(index, value);
        onChanged();
      } else {
        transportFareMappingBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public Builder addTransportFareMapping(
        com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType.Builder builderForValue) {
      if (transportFareMappingBuilder_ == null) {
        ensureTransportFareMappingIsMutable();
        transportFareMapping_.add(builderForValue.build());
        onChanged();
      } else {
        transportFareMappingBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public Builder addTransportFareMapping(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType.Builder builderForValue) {
      if (transportFareMappingBuilder_ == null) {
        ensureTransportFareMappingIsMutable();
        transportFareMapping_.add(index, builderForValue.build());
        onChanged();
      } else {
        transportFareMappingBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public Builder addAllTransportFareMapping(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType> values) {
      if (transportFareMappingBuilder_ == null) {
        ensureTransportFareMappingIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, transportFareMapping_);
        onChanged();
      } else {
        transportFareMappingBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public Builder clearTransportFareMapping() {
      if (transportFareMappingBuilder_ == null) {
        transportFareMapping_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
      } else {
        transportFareMappingBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public Builder removeTransportFareMapping(int index) {
      if (transportFareMappingBuilder_ == null) {
        ensureTransportFareMappingIsMutable();
        transportFareMapping_.remove(index);
        onChanged();
      } else {
        transportFareMappingBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType.Builder getTransportFareMappingBuilder(
        int index) {
      return getTransportFareMappingFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingTypeOrBuilder getTransportFareMappingOrBuilder(
        int index) {
      if (transportFareMappingBuilder_ == null) {
        return transportFareMapping_.get(index);  } else {
        return transportFareMappingBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingTypeOrBuilder> 
         getTransportFareMappingOrBuilderList() {
      if (transportFareMappingBuilder_ != null) {
        return transportFareMappingBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(transportFareMapping_);
      }
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType.Builder addTransportFareMappingBuilder() {
      return getTransportFareMappingFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType.getDefaultInstance());
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType.Builder addTransportFareMappingBuilder(
        int index) {
      return getTransportFareMappingFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType.getDefaultInstance());
    }
    /**
     * <pre>
     * 行段详细信息，顺序与TransportRef一一对应
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType.Builder> 
         getTransportFareMappingBuilderList() {
      return getTransportFareMappingFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingTypeOrBuilder> 
        getTransportFareMappingFieldBuilder() {
      if (transportFareMappingBuilder_ == null) {
        transportFareMappingBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingTypeOrBuilder>(
                transportFareMapping_,
                ((bitField0_ & 0x00000001) == 0x00000001),
                getParentForChildren(),
                isClean());
        transportFareMapping_ = null;
      }
      return transportFareMappingBuilder_;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType> productDetail_ =
      java.util.Collections.emptyList();
    private void ensureProductDetailIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        productDetail_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType>(productDetail_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType, com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailTypeOrBuilder> productDetailBuilder_;

    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType> getProductDetailList() {
      if (productDetailBuilder_ == null) {
        return java.util.Collections.unmodifiableList(productDetail_);
      } else {
        return productDetailBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public int getProductDetailCount() {
      if (productDetailBuilder_ == null) {
        return productDetail_.size();
      } else {
        return productDetailBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType getProductDetail(int index) {
      if (productDetailBuilder_ == null) {
        return productDetail_.get(index);
      } else {
        return productDetailBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public Builder setProductDetail(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType value) {
      if (productDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProductDetailIsMutable();
        productDetail_.set(index, value);
        onChanged();
      } else {
        productDetailBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public Builder setProductDetail(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType.Builder builderForValue) {
      if (productDetailBuilder_ == null) {
        ensureProductDetailIsMutable();
        productDetail_.set(index, builderForValue.build());
        onChanged();
      } else {
        productDetailBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public Builder addProductDetail(com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType value) {
      if (productDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProductDetailIsMutable();
        productDetail_.add(value);
        onChanged();
      } else {
        productDetailBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public Builder addProductDetail(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType value) {
      if (productDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureProductDetailIsMutable();
        productDetail_.add(index, value);
        onChanged();
      } else {
        productDetailBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public Builder addProductDetail(
        com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType.Builder builderForValue) {
      if (productDetailBuilder_ == null) {
        ensureProductDetailIsMutable();
        productDetail_.add(builderForValue.build());
        onChanged();
      } else {
        productDetailBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public Builder addProductDetail(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType.Builder builderForValue) {
      if (productDetailBuilder_ == null) {
        ensureProductDetailIsMutable();
        productDetail_.add(index, builderForValue.build());
        onChanged();
      } else {
        productDetailBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public Builder addAllProductDetail(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType> values) {
      if (productDetailBuilder_ == null) {
        ensureProductDetailIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, productDetail_);
        onChanged();
      } else {
        productDetailBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public Builder clearProductDetail() {
      if (productDetailBuilder_ == null) {
        productDetail_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        productDetailBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public Builder removeProductDetail(int index) {
      if (productDetailBuilder_ == null) {
        ensureProductDetailIsMutable();
        productDetail_.remove(index);
        onChanged();
      } else {
        productDetailBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType.Builder getProductDetailBuilder(
        int index) {
      return getProductDetailFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailTypeOrBuilder getProductDetailOrBuilder(
        int index) {
      if (productDetailBuilder_ == null) {
        return productDetail_.get(index);  } else {
        return productDetailBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailTypeOrBuilder> 
         getProductDetailOrBuilderList() {
      if (productDetailBuilder_ != null) {
        return productDetailBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(productDetail_);
      }
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType.Builder addProductDetailBuilder() {
      return getProductDetailFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType.getDefaultInstance());
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType.Builder addProductDetailBuilder(
        int index) {
      return getProductDetailFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType.getDefaultInstance());
    }
    /**
     * <pre>
     * 产品详情列表，含价格等重要信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType.Builder> 
         getProductDetailBuilderList() {
      return getProductDetailFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType, com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailTypeOrBuilder> 
        getProductDetailFieldBuilder() {
      if (productDetailBuilder_ == null) {
        productDetailBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType, com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailTypeOrBuilder>(
                productDetail_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        productDetail_ = null;
      }
      return productDetailBuilder_;
    }

    private java.lang.Object offerToken_ = "";
    /**
     * <pre>
     * 服务内部为每一个offer生成一个字符串类型的token，内容为加密字符串，反查时需要回传，不保证唯一性！
     * </pre>
     *
     * <code>string OfferToken = 3;</code>
     */
    public java.lang.String getOfferToken() {
      java.lang.Object ref = offerToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        offerToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 服务内部为每一个offer生成一个字符串类型的token，内容为加密字符串，反查时需要回传，不保证唯一性！
     * </pre>
     *
     * <code>string OfferToken = 3;</code>
     */
    public com.google.protobuf.ByteString
        getOfferTokenBytes() {
      java.lang.Object ref = offerToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        offerToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 服务内部为每一个offer生成一个字符串类型的token，内容为加密字符串，反查时需要回传，不保证唯一性！
     * </pre>
     *
     * <code>string OfferToken = 3;</code>
     */
    public Builder setOfferToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      offerToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 服务内部为每一个offer生成一个字符串类型的token，内容为加密字符串，反查时需要回传，不保证唯一性！
     * </pre>
     *
     * <code>string OfferToken = 3;</code>
     */
    public Builder clearOfferToken() {
      
      offerToken_ = getDefaultInstance().getOfferToken();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 服务内部为每一个offer生成一个字符串类型的token，内容为加密字符串，反查时需要回传，不保证唯一性！
     * </pre>
     *
     * <code>string OfferToken = 3;</code>
     */
    public Builder setOfferTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      offerToken_ = value;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList productCombinationType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureProductCombinationTypeIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        productCombinationType_ = new com.google.protobuf.LazyStringArrayList(productCombinationType_);
        bitField0_ |= 0x00000008;
       }
    }
    /**
     * <pre>
     * 产品组合类型, 包括了单程直飞的部分信息
     * </pre>
     *
     * <code>repeated string ProductCombinationType = 4;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getProductCombinationTypeList() {
      return productCombinationType_.getUnmodifiableView();
    }
    /**
     * <pre>
     * 产品组合类型, 包括了单程直飞的部分信息
     * </pre>
     *
     * <code>repeated string ProductCombinationType = 4;</code>
     */
    public int getProductCombinationTypeCount() {
      return productCombinationType_.size();
    }
    /**
     * <pre>
     * 产品组合类型, 包括了单程直飞的部分信息
     * </pre>
     *
     * <code>repeated string ProductCombinationType = 4;</code>
     */
    public java.lang.String getProductCombinationType(int index) {
      return productCombinationType_.get(index);
    }
    /**
     * <pre>
     * 产品组合类型, 包括了单程直飞的部分信息
     * </pre>
     *
     * <code>repeated string ProductCombinationType = 4;</code>
     */
    public com.google.protobuf.ByteString
        getProductCombinationTypeBytes(int index) {
      return productCombinationType_.getByteString(index);
    }
    /**
     * <pre>
     * 产品组合类型, 包括了单程直飞的部分信息
     * </pre>
     *
     * <code>repeated string ProductCombinationType = 4;</code>
     */
    public Builder setProductCombinationType(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureProductCombinationTypeIsMutable();
      productCombinationType_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 产品组合类型, 包括了单程直飞的部分信息
     * </pre>
     *
     * <code>repeated string ProductCombinationType = 4;</code>
     */
    public Builder addProductCombinationType(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureProductCombinationTypeIsMutable();
      productCombinationType_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 产品组合类型, 包括了单程直飞的部分信息
     * </pre>
     *
     * <code>repeated string ProductCombinationType = 4;</code>
     */
    public Builder addAllProductCombinationType(
        java.lang.Iterable<java.lang.String> values) {
      ensureProductCombinationTypeIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, productCombinationType_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 产品组合类型, 包括了单程直飞的部分信息
     * </pre>
     *
     * <code>repeated string ProductCombinationType = 4;</code>
     */
    public Builder clearProductCombinationType() {
      productCombinationType_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000008);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 产品组合类型, 包括了单程直飞的部分信息
     * </pre>
     *
     * <code>repeated string ProductCombinationType = 4;</code>
     */
    public Builder addProductCombinationTypeBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureProductCombinationTypeIsMutable();
      productCombinationType_.add(value);
      onChanged();
      return this;
    }

    private com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType offerPackage_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType, com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageTypeOrBuilder> offerPackageBuilder_;
    /**
     * <pre>
     * 绑定在Offer维度的辅营信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
     */
    public boolean hasOfferPackage() {
      return offerPackageBuilder_ != null || offerPackage_ != null;
    }
    /**
     * <pre>
     * 绑定在Offer维度的辅营信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType getOfferPackage() {
      if (offerPackageBuilder_ == null) {
        return offerPackage_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType.getDefaultInstance() : offerPackage_;
      } else {
        return offerPackageBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 绑定在Offer维度的辅营信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
     */
    public Builder setOfferPackage(com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType value) {
      if (offerPackageBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        offerPackage_ = value;
        onChanged();
      } else {
        offerPackageBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 绑定在Offer维度的辅营信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
     */
    public Builder setOfferPackage(
        com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType.Builder builderForValue) {
      if (offerPackageBuilder_ == null) {
        offerPackage_ = builderForValue.build();
        onChanged();
      } else {
        offerPackageBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 绑定在Offer维度的辅营信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
     */
    public Builder mergeOfferPackage(com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType value) {
      if (offerPackageBuilder_ == null) {
        if (offerPackage_ != null) {
          offerPackage_ =
            com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType.newBuilder(offerPackage_).mergeFrom(value).buildPartial();
        } else {
          offerPackage_ = value;
        }
        onChanged();
      } else {
        offerPackageBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 绑定在Offer维度的辅营信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
     */
    public Builder clearOfferPackage() {
      if (offerPackageBuilder_ == null) {
        offerPackage_ = null;
        onChanged();
      } else {
        offerPackage_ = null;
        offerPackageBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 绑定在Offer维度的辅营信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType.Builder getOfferPackageBuilder() {
      
      onChanged();
      return getOfferPackageFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 绑定在Offer维度的辅营信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageTypeOrBuilder getOfferPackageOrBuilder() {
      if (offerPackageBuilder_ != null) {
        return offerPackageBuilder_.getMessageOrBuilder();
      } else {
        return offerPackage_ == null ?
            com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType.getDefaultInstance() : offerPackage_;
      }
    }
    /**
     * <pre>
     * 绑定在Offer维度的辅营信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType, com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageTypeOrBuilder> 
        getOfferPackageFieldBuilder() {
      if (offerPackageBuilder_ == null) {
        offerPackageBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType, com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageTypeOrBuilder>(
                getOfferPackage(),
                getParentForChildren(),
                isClean());
        offerPackage_ = null;
      }
      return offerPackageBuilder_;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType> baggageRef_ =
      java.util.Collections.emptyList();
    private void ensureBaggageRefIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        baggageRef_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType>(baggageRef_);
        bitField0_ |= 0x00000020;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType, com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType.Builder, com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefTypeOrBuilder> baggageRefBuilder_;

    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType> getBaggageRefList() {
      if (baggageRefBuilder_ == null) {
        return java.util.Collections.unmodifiableList(baggageRef_);
      } else {
        return baggageRefBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public int getBaggageRefCount() {
      if (baggageRefBuilder_ == null) {
        return baggageRef_.size();
      } else {
        return baggageRefBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType getBaggageRef(int index) {
      if (baggageRefBuilder_ == null) {
        return baggageRef_.get(index);
      } else {
        return baggageRefBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public Builder setBaggageRef(
        int index, com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType value) {
      if (baggageRefBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageRefIsMutable();
        baggageRef_.set(index, value);
        onChanged();
      } else {
        baggageRefBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public Builder setBaggageRef(
        int index, com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType.Builder builderForValue) {
      if (baggageRefBuilder_ == null) {
        ensureBaggageRefIsMutable();
        baggageRef_.set(index, builderForValue.build());
        onChanged();
      } else {
        baggageRefBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public Builder addBaggageRef(com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType value) {
      if (baggageRefBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageRefIsMutable();
        baggageRef_.add(value);
        onChanged();
      } else {
        baggageRefBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public Builder addBaggageRef(
        int index, com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType value) {
      if (baggageRefBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageRefIsMutable();
        baggageRef_.add(index, value);
        onChanged();
      } else {
        baggageRefBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public Builder addBaggageRef(
        com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType.Builder builderForValue) {
      if (baggageRefBuilder_ == null) {
        ensureBaggageRefIsMutable();
        baggageRef_.add(builderForValue.build());
        onChanged();
      } else {
        baggageRefBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public Builder addBaggageRef(
        int index, com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType.Builder builderForValue) {
      if (baggageRefBuilder_ == null) {
        ensureBaggageRefIsMutable();
        baggageRef_.add(index, builderForValue.build());
        onChanged();
      } else {
        baggageRefBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public Builder addAllBaggageRef(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType> values) {
      if (baggageRefBuilder_ == null) {
        ensureBaggageRefIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, baggageRef_);
        onChanged();
      } else {
        baggageRefBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public Builder clearBaggageRef() {
      if (baggageRefBuilder_ == null) {
        baggageRef_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
      } else {
        baggageRefBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public Builder removeBaggageRef(int index) {
      if (baggageRefBuilder_ == null) {
        ensureBaggageRefIsMutable();
        baggageRef_.remove(index);
        onChanged();
      } else {
        baggageRefBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType.Builder getBaggageRefBuilder(
        int index) {
      return getBaggageRefFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefTypeOrBuilder getBaggageRefOrBuilder(
        int index) {
      if (baggageRefBuilder_ == null) {
        return baggageRef_.get(index);  } else {
        return baggageRefBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefTypeOrBuilder> 
         getBaggageRefOrBuilderList() {
      if (baggageRefBuilder_ != null) {
        return baggageRefBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(baggageRef_);
      }
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType.Builder addBaggageRefBuilder() {
      return getBaggageRefFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType.getDefaultInstance());
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType.Builder addBaggageRefBuilder(
        int index) {
      return getBaggageRefFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType.getDefaultInstance());
    }
    /**
     * <pre>
     * 行李信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType.Builder> 
         getBaggageRefBuilderList() {
      return getBaggageRefFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType, com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType.Builder, com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefTypeOrBuilder> 
        getBaggageRefFieldBuilder() {
      if (baggageRefBuilder_ == null) {
        baggageRefBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType, com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType.Builder, com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefTypeOrBuilder>(
                baggageRef_,
                ((bitField0_ & 0x00000020) == 0x00000020),
                getParentForChildren(),
                isClean());
        baggageRef_ = null;
      }
      return baggageRefBuilder_;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType> baggageAncillary_ =
      java.util.Collections.emptyList();
    private void ensureBaggageAncillaryIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        baggageAncillary_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType>(baggageAncillary_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType, com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryTypeOrBuilder> baggageAncillaryBuilder_;

    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType> getBaggageAncillaryList() {
      if (baggageAncillaryBuilder_ == null) {
        return java.util.Collections.unmodifiableList(baggageAncillary_);
      } else {
        return baggageAncillaryBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public int getBaggageAncillaryCount() {
      if (baggageAncillaryBuilder_ == null) {
        return baggageAncillary_.size();
      } else {
        return baggageAncillaryBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType getBaggageAncillary(int index) {
      if (baggageAncillaryBuilder_ == null) {
        return baggageAncillary_.get(index);
      } else {
        return baggageAncillaryBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public Builder setBaggageAncillary(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType value) {
      if (baggageAncillaryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageAncillaryIsMutable();
        baggageAncillary_.set(index, value);
        onChanged();
      } else {
        baggageAncillaryBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public Builder setBaggageAncillary(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType.Builder builderForValue) {
      if (baggageAncillaryBuilder_ == null) {
        ensureBaggageAncillaryIsMutable();
        baggageAncillary_.set(index, builderForValue.build());
        onChanged();
      } else {
        baggageAncillaryBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public Builder addBaggageAncillary(com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType value) {
      if (baggageAncillaryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageAncillaryIsMutable();
        baggageAncillary_.add(value);
        onChanged();
      } else {
        baggageAncillaryBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public Builder addBaggageAncillary(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType value) {
      if (baggageAncillaryBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureBaggageAncillaryIsMutable();
        baggageAncillary_.add(index, value);
        onChanged();
      } else {
        baggageAncillaryBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public Builder addBaggageAncillary(
        com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType.Builder builderForValue) {
      if (baggageAncillaryBuilder_ == null) {
        ensureBaggageAncillaryIsMutable();
        baggageAncillary_.add(builderForValue.build());
        onChanged();
      } else {
        baggageAncillaryBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public Builder addBaggageAncillary(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType.Builder builderForValue) {
      if (baggageAncillaryBuilder_ == null) {
        ensureBaggageAncillaryIsMutable();
        baggageAncillary_.add(index, builderForValue.build());
        onChanged();
      } else {
        baggageAncillaryBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public Builder addAllBaggageAncillary(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType> values) {
      if (baggageAncillaryBuilder_ == null) {
        ensureBaggageAncillaryIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, baggageAncillary_);
        onChanged();
      } else {
        baggageAncillaryBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public Builder clearBaggageAncillary() {
      if (baggageAncillaryBuilder_ == null) {
        baggageAncillary_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        baggageAncillaryBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public Builder removeBaggageAncillary(int index) {
      if (baggageAncillaryBuilder_ == null) {
        ensureBaggageAncillaryIsMutable();
        baggageAncillary_.remove(index);
        onChanged();
      } else {
        baggageAncillaryBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType.Builder getBaggageAncillaryBuilder(
        int index) {
      return getBaggageAncillaryFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryTypeOrBuilder getBaggageAncillaryOrBuilder(
        int index) {
      if (baggageAncillaryBuilder_ == null) {
        return baggageAncillary_.get(index);  } else {
        return baggageAncillaryBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryTypeOrBuilder> 
         getBaggageAncillaryOrBuilderList() {
      if (baggageAncillaryBuilder_ != null) {
        return baggageAncillaryBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(baggageAncillary_);
      }
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType.Builder addBaggageAncillaryBuilder() {
      return getBaggageAncillaryFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType.getDefaultInstance());
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType.Builder addBaggageAncillaryBuilder(
        int index) {
      return getBaggageAncillaryFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType.getDefaultInstance());
    }
    /**
     * <pre>
     * 增值行李：区分打包和加购方式，且每种方式可能有不同的规格
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType.Builder> 
         getBaggageAncillaryBuilderList() {
      return getBaggageAncillaryFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType, com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryTypeOrBuilder> 
        getBaggageAncillaryFieldBuilder() {
      if (baggageAncillaryBuilder_ == null) {
        baggageAncillaryBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType, com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryTypeOrBuilder>(
                baggageAncillary_,
                ((bitField0_ & 0x00000040) == 0x00000040),
                getParentForChildren(),
                isClean());
        baggageAncillary_ = null;
      }
      return baggageAncillaryBuilder_;
    }

    private java.util.List<java.lang.Integer> priceAttributeID_ = java.util.Collections.emptyList();
    private void ensurePriceAttributeIDIsMutable() {
      if (!((bitField0_ & 0x00000080) == 0x00000080)) {
        priceAttributeID_ = new java.util.ArrayList<java.lang.Integer>(priceAttributeID_);
        bitField0_ |= 0x00000080;
       }
    }
    /**
     * <pre>
     * 国际机票价格属性ID集合
     * </pre>
     *
     * <code>repeated int32 PriceAttributeID = 8;</code>
     */
    public java.util.List<java.lang.Integer>
        getPriceAttributeIDList() {
      return java.util.Collections.unmodifiableList(priceAttributeID_);
    }
    /**
     * <pre>
     * 国际机票价格属性ID集合
     * </pre>
     *
     * <code>repeated int32 PriceAttributeID = 8;</code>
     */
    public int getPriceAttributeIDCount() {
      return priceAttributeID_.size();
    }
    /**
     * <pre>
     * 国际机票价格属性ID集合
     * </pre>
     *
     * <code>repeated int32 PriceAttributeID = 8;</code>
     */
    public int getPriceAttributeID(int index) {
      return priceAttributeID_.get(index);
    }
    /**
     * <pre>
     * 国际机票价格属性ID集合
     * </pre>
     *
     * <code>repeated int32 PriceAttributeID = 8;</code>
     */
    public Builder setPriceAttributeID(
        int index, int value) {
      ensurePriceAttributeIDIsMutable();
      priceAttributeID_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 国际机票价格属性ID集合
     * </pre>
     *
     * <code>repeated int32 PriceAttributeID = 8;</code>
     */
    public Builder addPriceAttributeID(int value) {
      ensurePriceAttributeIDIsMutable();
      priceAttributeID_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 国际机票价格属性ID集合
     * </pre>
     *
     * <code>repeated int32 PriceAttributeID = 8;</code>
     */
    public Builder addAllPriceAttributeID(
        java.lang.Iterable<? extends java.lang.Integer> values) {
      ensurePriceAttributeIDIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, priceAttributeID_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 国际机票价格属性ID集合
     * </pre>
     *
     * <code>repeated int32 PriceAttributeID = 8;</code>
     */
    public Builder clearPriceAttributeID() {
      priceAttributeID_ = java.util.Collections.emptyList();
      bitField0_ = (bitField0_ & ~0x00000080);
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> tag_ =
      java.util.Collections.emptyList();
    private void ensureTagIsMutable() {
      if (!((bitField0_ & 0x00000100) == 0x00000100)) {
        tag_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType>(tag_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> tagBuilder_;

    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> getTagList() {
      if (tagBuilder_ == null) {
        return java.util.Collections.unmodifiableList(tag_);
      } else {
        return tagBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public int getTagCount() {
      if (tagBuilder_ == null) {
        return tag_.size();
      } else {
        return tagBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType getTag(int index) {
      if (tagBuilder_ == null) {
        return tag_.get(index);
      } else {
        return tagBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public Builder setTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType value) {
      if (tagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagIsMutable();
        tag_.set(index, value);
        onChanged();
      } else {
        tagBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public Builder setTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder builderForValue) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.set(index, builderForValue.build());
        onChanged();
      } else {
        tagBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public Builder addTag(com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType value) {
      if (tagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagIsMutable();
        tag_.add(value);
        onChanged();
      } else {
        tagBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public Builder addTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType value) {
      if (tagBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTagIsMutable();
        tag_.add(index, value);
        onChanged();
      } else {
        tagBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public Builder addTag(
        com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder builderForValue) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.add(builderForValue.build());
        onChanged();
      } else {
        tagBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public Builder addTag(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder builderForValue) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.add(index, builderForValue.build());
        onChanged();
      } else {
        tagBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public Builder addAllTag(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> values) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tag_);
        onChanged();
      } else {
        tagBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public Builder clearTag() {
      if (tagBuilder_ == null) {
        tag_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        tagBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public Builder removeTag(int index) {
      if (tagBuilder_ == null) {
        ensureTagIsMutable();
        tag_.remove(index);
        onChanged();
      } else {
        tagBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder getTagBuilder(
        int index) {
      return getTagFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder getTagOrBuilder(
        int index) {
      if (tagBuilder_ == null) {
        return tag_.get(index);  } else {
        return tagBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> 
         getTagOrBuilderList() {
      if (tagBuilder_ != null) {
        return tagBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(tag_);
      }
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder addTagBuilder() {
      return getTagFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.getDefaultInstance());
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder addTagBuilder(
        int index) {
      return getTagFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.getDefaultInstance());
    }
    /**
     * <pre>
     * 扩展结点
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 9;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder> 
         getTagBuilderList() {
      return getTagFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> 
        getTagFieldBuilder() {
      if (tagBuilder_ == null) {
        tagBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder>(
                tag_,
                ((bitField0_ & 0x00000100) == 0x00000100),
                getParentForChildren(),
                isClean());
        tag_ = null;
      }
      return tagBuilder_;
    }

    private int recommendedType_ ;
    /**
     * <pre>
     * 推荐类运价类型, 默认0：普通运价； 1: 推荐类运价； 2:普通运价+推荐类(既是普通又是推荐类，与前端展示有关)
     * </pre>
     *
     * <code>int32 RecommendedType = 10;</code>
     */
    public int getRecommendedType() {
      return recommendedType_;
    }
    /**
     * <pre>
     * 推荐类运价类型, 默认0：普通运价； 1: 推荐类运价； 2:普通运价+推荐类(既是普通又是推荐类，与前端展示有关)
     * </pre>
     *
     * <code>int32 RecommendedType = 10;</code>
     */
    public Builder setRecommendedType(int value) {
      
      recommendedType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 推荐类运价类型, 默认0：普通运价； 1: 推荐类运价； 2:普通运价+推荐类(既是普通又是推荐类，与前端展示有关)
     * </pre>
     *
     * <code>int32 RecommendedType = 10;</code>
     */
    public Builder clearRecommendedType() {
      
      recommendedType_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object transportHotelToken_ = "";
    /**
     * <pre>
     * 机酒Token，调机酒服务时使用
     * </pre>
     *
     * <code>string TransportHotelToken = 11;</code>
     */
    public java.lang.String getTransportHotelToken() {
      java.lang.Object ref = transportHotelToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        transportHotelToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <pre>
     * 机酒Token，调机酒服务时使用
     * </pre>
     *
     * <code>string TransportHotelToken = 11;</code>
     */
    public com.google.protobuf.ByteString
        getTransportHotelTokenBytes() {
      java.lang.Object ref = transportHotelToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        transportHotelToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     * 机酒Token，调机酒服务时使用
     * </pre>
     *
     * <code>string TransportHotelToken = 11;</code>
     */
    public Builder setTransportHotelToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      transportHotelToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 机酒Token，调机酒服务时使用
     * </pre>
     *
     * <code>string TransportHotelToken = 11;</code>
     */
    public Builder clearTransportHotelToken() {
      
      transportHotelToken_ = getDefaultInstance().getTransportHotelToken();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 机酒Token，调机酒服务时使用
     * </pre>
     *
     * <code>string TransportHotelToken = 11;</code>
     */
    public Builder setTransportHotelTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      transportHotelToken_ = value;
      onChanged();
      return this;
    }

    private double priority_ ;
    /**
     * <pre>
     * 优先级, 数值越小优先级越高
     * </pre>
     *
     * <code>double Priority = 12;</code>
     */
    public double getPriority() {
      return priority_;
    }
    /**
     * <pre>
     * 优先级, 数值越小优先级越高
     * </pre>
     *
     * <code>double Priority = 12;</code>
     */
    public Builder setPriority(double value) {
      
      priority_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 优先级, 数值越小优先级越高
     * </pre>
     *
     * <code>double Priority = 12;</code>
     */
    public Builder clearPriority() {
      
      priority_ = 0D;
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType> journeyAttachment_ =
      java.util.Collections.emptyList();
    private void ensureJourneyAttachmentIsMutable() {
      if (!((bitField0_ & 0x00001000) == 0x00001000)) {
        journeyAttachment_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType>(journeyAttachment_);
        bitField0_ |= 0x00001000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType, com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentTypeOrBuilder> journeyAttachmentBuilder_;

    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType> getJourneyAttachmentList() {
      if (journeyAttachmentBuilder_ == null) {
        return java.util.Collections.unmodifiableList(journeyAttachment_);
      } else {
        return journeyAttachmentBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public int getJourneyAttachmentCount() {
      if (journeyAttachmentBuilder_ == null) {
        return journeyAttachment_.size();
      } else {
        return journeyAttachmentBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType getJourneyAttachment(int index) {
      if (journeyAttachmentBuilder_ == null) {
        return journeyAttachment_.get(index);
      } else {
        return journeyAttachmentBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public Builder setJourneyAttachment(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType value) {
      if (journeyAttachmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureJourneyAttachmentIsMutable();
        journeyAttachment_.set(index, value);
        onChanged();
      } else {
        journeyAttachmentBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public Builder setJourneyAttachment(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType.Builder builderForValue) {
      if (journeyAttachmentBuilder_ == null) {
        ensureJourneyAttachmentIsMutable();
        journeyAttachment_.set(index, builderForValue.build());
        onChanged();
      } else {
        journeyAttachmentBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public Builder addJourneyAttachment(com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType value) {
      if (journeyAttachmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureJourneyAttachmentIsMutable();
        journeyAttachment_.add(value);
        onChanged();
      } else {
        journeyAttachmentBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public Builder addJourneyAttachment(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType value) {
      if (journeyAttachmentBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureJourneyAttachmentIsMutable();
        journeyAttachment_.add(index, value);
        onChanged();
      } else {
        journeyAttachmentBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public Builder addJourneyAttachment(
        com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType.Builder builderForValue) {
      if (journeyAttachmentBuilder_ == null) {
        ensureJourneyAttachmentIsMutable();
        journeyAttachment_.add(builderForValue.build());
        onChanged();
      } else {
        journeyAttachmentBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public Builder addJourneyAttachment(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType.Builder builderForValue) {
      if (journeyAttachmentBuilder_ == null) {
        ensureJourneyAttachmentIsMutable();
        journeyAttachment_.add(index, builderForValue.build());
        onChanged();
      } else {
        journeyAttachmentBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public Builder addAllJourneyAttachment(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType> values) {
      if (journeyAttachmentBuilder_ == null) {
        ensureJourneyAttachmentIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, journeyAttachment_);
        onChanged();
      } else {
        journeyAttachmentBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public Builder clearJourneyAttachment() {
      if (journeyAttachmentBuilder_ == null) {
        journeyAttachment_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
      } else {
        journeyAttachmentBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public Builder removeJourneyAttachment(int index) {
      if (journeyAttachmentBuilder_ == null) {
        ensureJourneyAttachmentIsMutable();
        journeyAttachment_.remove(index);
        onChanged();
      } else {
        journeyAttachmentBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType.Builder getJourneyAttachmentBuilder(
        int index) {
      return getJourneyAttachmentFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentTypeOrBuilder getJourneyAttachmentOrBuilder(
        int index) {
      if (journeyAttachmentBuilder_ == null) {
        return journeyAttachment_.get(index);  } else {
        return journeyAttachmentBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentTypeOrBuilder> 
         getJourneyAttachmentOrBuilderList() {
      if (journeyAttachmentBuilder_ != null) {
        return journeyAttachmentBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(journeyAttachment_);
      }
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType.Builder addJourneyAttachmentBuilder() {
      return getJourneyAttachmentFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType.getDefaultInstance());
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType.Builder addJourneyAttachmentBuilder(
        int index) {
      return getJourneyAttachmentFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType.getDefaultInstance());
    }
    /**
     * <pre>
     * 与行程有关的相关信息。List中元素的数量最多和行程数一样
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType JourneyAttachment = 13;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType.Builder> 
         getJourneyAttachmentBuilderList() {
      return getJourneyAttachmentFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType, com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentTypeOrBuilder> 
        getJourneyAttachmentFieldBuilder() {
      if (journeyAttachmentBuilder_ == null) {
        journeyAttachmentBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType, com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.JourneyAttachmentTypeOrBuilder>(
                journeyAttachment_,
                ((bitField0_ & 0x00001000) == 0x00001000),
                getParentForChildren(),
                isClean());
        journeyAttachment_ = null;
      }
      return journeyAttachmentBuilder_;
    }

    private int offerID_ ;
    /**
     * <pre>
     * 运价索引 每次查询唯一
     * </pre>
     *
     * <code>int32 OfferID = 14;</code>
     */
    public int getOfferID() {
      return offerID_;
    }
    /**
     * <pre>
     * 运价索引 每次查询唯一
     * </pre>
     *
     * <code>int32 OfferID = 14;</code>
     */
    public Builder setOfferID(int value) {
      
      offerID_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 运价索引 每次查询唯一
     * </pre>
     *
     * <code>int32 OfferID = 14;</code>
     */
    public Builder clearOfferID() {
      
      offerID_ = 0;
      onChanged();
      return this;
    }

    private int childStandardOfferRef_ ;
    /**
     * <pre>
     * 引用的offerId。暂时用于标识儿童标准价offer隶属于哪个Offer下
     * </pre>
     *
     * <code>int32 ChildStandardOfferRef = 15;</code>
     */
    public int getChildStandardOfferRef() {
      return childStandardOfferRef_;
    }
    /**
     * <pre>
     * 引用的offerId。暂时用于标识儿童标准价offer隶属于哪个Offer下
     * </pre>
     *
     * <code>int32 ChildStandardOfferRef = 15;</code>
     */
    public Builder setChildStandardOfferRef(int value) {
      
      childStandardOfferRef_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 引用的offerId。暂时用于标识儿童标准价offer隶属于哪个Offer下
     * </pre>
     *
     * <code>int32 ChildStandardOfferRef = 15;</code>
     */
    public Builder clearChildStandardOfferRef() {
      
      childStandardOfferRef_ = 0;
      onChanged();
      return this;
    }

    private com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType upsellProduct_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType, com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductTypeOrBuilder> upsellProductBuilder_;
    /**
     * <pre>
     * Upsell促销信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType UpsellProduct = 16;</code>
     */
    public boolean hasUpsellProduct() {
      return upsellProductBuilder_ != null || upsellProduct_ != null;
    }
    /**
     * <pre>
     * Upsell促销信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType UpsellProduct = 16;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType getUpsellProduct() {
      if (upsellProductBuilder_ == null) {
        return upsellProduct_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.getDefaultInstance() : upsellProduct_;
      } else {
        return upsellProductBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * Upsell促销信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType UpsellProduct = 16;</code>
     */
    public Builder setUpsellProduct(com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType value) {
      if (upsellProductBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        upsellProduct_ = value;
        onChanged();
      } else {
        upsellProductBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * Upsell促销信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType UpsellProduct = 16;</code>
     */
    public Builder setUpsellProduct(
        com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.Builder builderForValue) {
      if (upsellProductBuilder_ == null) {
        upsellProduct_ = builderForValue.build();
        onChanged();
      } else {
        upsellProductBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * Upsell促销信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType UpsellProduct = 16;</code>
     */
    public Builder mergeUpsellProduct(com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType value) {
      if (upsellProductBuilder_ == null) {
        if (upsellProduct_ != null) {
          upsellProduct_ =
            com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.newBuilder(upsellProduct_).mergeFrom(value).buildPartial();
        } else {
          upsellProduct_ = value;
        }
        onChanged();
      } else {
        upsellProductBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * Upsell促销信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType UpsellProduct = 16;</code>
     */
    public Builder clearUpsellProduct() {
      if (upsellProductBuilder_ == null) {
        upsellProduct_ = null;
        onChanged();
      } else {
        upsellProduct_ = null;
        upsellProductBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * Upsell促销信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType UpsellProduct = 16;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.Builder getUpsellProductBuilder() {
      
      onChanged();
      return getUpsellProductFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * Upsell促销信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType UpsellProduct = 16;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductTypeOrBuilder getUpsellProductOrBuilder() {
      if (upsellProductBuilder_ != null) {
        return upsellProductBuilder_.getMessageOrBuilder();
      } else {
        return upsellProduct_ == null ?
            com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.getDefaultInstance() : upsellProduct_;
      }
    }
    /**
     * <pre>
     * Upsell促销信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType UpsellProduct = 16;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType, com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductTypeOrBuilder> 
        getUpsellProductFieldBuilder() {
      if (upsellProductBuilder_ == null) {
        upsellProductBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType, com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductTypeOrBuilder>(
                getUpsellProduct(),
                getParentForChildren(),
                isClean());
        upsellProduct_ = null;
      }
      return upsellProductBuilder_;
    }

    private com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType productComposition_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType, com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionTypeOrBuilder> productCompositionBuilder_;
    /**
     * <pre>
     * 可展示的运价金额 已确认目前没人用,直接删除
     * DisplayedOfferAmountType DisplayedOfferAmount = 17 [deprecated = true];
     * 产品组合关系
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType ProductComposition = 17;</code>
     */
    public boolean hasProductComposition() {
      return productCompositionBuilder_ != null || productComposition_ != null;
    }
    /**
     * <pre>
     * 可展示的运价金额 已确认目前没人用,直接删除
     * DisplayedOfferAmountType DisplayedOfferAmount = 17 [deprecated = true];
     * 产品组合关系
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType ProductComposition = 17;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType getProductComposition() {
      if (productCompositionBuilder_ == null) {
        return productComposition_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType.getDefaultInstance() : productComposition_;
      } else {
        return productCompositionBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 可展示的运价金额 已确认目前没人用,直接删除
     * DisplayedOfferAmountType DisplayedOfferAmount = 17 [deprecated = true];
     * 产品组合关系
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType ProductComposition = 17;</code>
     */
    public Builder setProductComposition(com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType value) {
      if (productCompositionBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        productComposition_ = value;
        onChanged();
      } else {
        productCompositionBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 可展示的运价金额 已确认目前没人用,直接删除
     * DisplayedOfferAmountType DisplayedOfferAmount = 17 [deprecated = true];
     * 产品组合关系
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType ProductComposition = 17;</code>
     */
    public Builder setProductComposition(
        com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType.Builder builderForValue) {
      if (productCompositionBuilder_ == null) {
        productComposition_ = builderForValue.build();
        onChanged();
      } else {
        productCompositionBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 可展示的运价金额 已确认目前没人用,直接删除
     * DisplayedOfferAmountType DisplayedOfferAmount = 17 [deprecated = true];
     * 产品组合关系
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType ProductComposition = 17;</code>
     */
    public Builder mergeProductComposition(com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType value) {
      if (productCompositionBuilder_ == null) {
        if (productComposition_ != null) {
          productComposition_ =
            com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType.newBuilder(productComposition_).mergeFrom(value).buildPartial();
        } else {
          productComposition_ = value;
        }
        onChanged();
      } else {
        productCompositionBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 可展示的运价金额 已确认目前没人用,直接删除
     * DisplayedOfferAmountType DisplayedOfferAmount = 17 [deprecated = true];
     * 产品组合关系
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType ProductComposition = 17;</code>
     */
    public Builder clearProductComposition() {
      if (productCompositionBuilder_ == null) {
        productComposition_ = null;
        onChanged();
      } else {
        productComposition_ = null;
        productCompositionBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 可展示的运价金额 已确认目前没人用,直接删除
     * DisplayedOfferAmountType DisplayedOfferAmount = 17 [deprecated = true];
     * 产品组合关系
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType ProductComposition = 17;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType.Builder getProductCompositionBuilder() {
      
      onChanged();
      return getProductCompositionFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 可展示的运价金额 已确认目前没人用,直接删除
     * DisplayedOfferAmountType DisplayedOfferAmount = 17 [deprecated = true];
     * 产品组合关系
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType ProductComposition = 17;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionTypeOrBuilder getProductCompositionOrBuilder() {
      if (productCompositionBuilder_ != null) {
        return productCompositionBuilder_.getMessageOrBuilder();
      } else {
        return productComposition_ == null ?
            com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType.getDefaultInstance() : productComposition_;
      }
    }
    /**
     * <pre>
     * 可展示的运价金额 已确认目前没人用,直接删除
     * DisplayedOfferAmountType DisplayedOfferAmount = 17 [deprecated = true];
     * 产品组合关系
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType ProductComposition = 17;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType, com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionTypeOrBuilder> 
        getProductCompositionFieldBuilder() {
      if (productCompositionBuilder_ == null) {
        productCompositionBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType, com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.ProductCompositionTypeOrBuilder>(
                getProductComposition(),
                getParentForChildren(),
                isClean());
        productComposition_ = null;
      }
      return productCompositionBuilder_;
    }

    private com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType offerComparison_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType, com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonTypeOrBuilder> offerComparisonBuilder_;
    /**
     * <pre>
     * 比价信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType OfferComparison = 18;</code>
     */
    public boolean hasOfferComparison() {
      return offerComparisonBuilder_ != null || offerComparison_ != null;
    }
    /**
     * <pre>
     * 比价信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType OfferComparison = 18;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType getOfferComparison() {
      if (offerComparisonBuilder_ == null) {
        return offerComparison_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType.getDefaultInstance() : offerComparison_;
      } else {
        return offerComparisonBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 比价信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType OfferComparison = 18;</code>
     */
    public Builder setOfferComparison(com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType value) {
      if (offerComparisonBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        offerComparison_ = value;
        onChanged();
      } else {
        offerComparisonBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 比价信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType OfferComparison = 18;</code>
     */
    public Builder setOfferComparison(
        com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType.Builder builderForValue) {
      if (offerComparisonBuilder_ == null) {
        offerComparison_ = builderForValue.build();
        onChanged();
      } else {
        offerComparisonBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 比价信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType OfferComparison = 18;</code>
     */
    public Builder mergeOfferComparison(com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType value) {
      if (offerComparisonBuilder_ == null) {
        if (offerComparison_ != null) {
          offerComparison_ =
            com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType.newBuilder(offerComparison_).mergeFrom(value).buildPartial();
        } else {
          offerComparison_ = value;
        }
        onChanged();
      } else {
        offerComparisonBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 比价信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType OfferComparison = 18;</code>
     */
    public Builder clearOfferComparison() {
      if (offerComparisonBuilder_ == null) {
        offerComparison_ = null;
        onChanged();
      } else {
        offerComparison_ = null;
        offerComparisonBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 比价信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType OfferComparison = 18;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType.Builder getOfferComparisonBuilder() {
      
      onChanged();
      return getOfferComparisonFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 比价信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType OfferComparison = 18;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonTypeOrBuilder getOfferComparisonOrBuilder() {
      if (offerComparisonBuilder_ != null) {
        return offerComparisonBuilder_.getMessageOrBuilder();
      } else {
        return offerComparison_ == null ?
            com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType.getDefaultInstance() : offerComparison_;
      }
    }
    /**
     * <pre>
     * 比价信息
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType OfferComparison = 18;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType, com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonTypeOrBuilder> 
        getOfferComparisonFieldBuilder() {
      if (offerComparisonBuilder_ == null) {
        offerComparisonBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType, com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.OfferComparisonTypeOrBuilder>(
                getOfferComparison(),
                getParentForChildren(),
                isClean());
        offerComparison_ = null;
      }
      return offerComparisonBuilder_;
    }

    private double sortIndicator_ ;
    /**
     * <pre>
     * 平均含税底价 0表示未输出
     * </pre>
     *
     * <code>double SortIndicator = 19;</code>
     */
    public double getSortIndicator() {
      return sortIndicator_;
    }
    /**
     * <pre>
     * 平均含税底价 0表示未输出
     * </pre>
     *
     * <code>double SortIndicator = 19;</code>
     */
    public Builder setSortIndicator(double value) {
      
      sortIndicator_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 平均含税底价 0表示未输出
     * </pre>
     *
     * <code>double SortIndicator = 19;</code>
     */
    public Builder clearSortIndicator() {
      
      sortIndicator_ = 0D;
      onChanged();
      return this;
    }

    private com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType orderRule_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType, com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleTypeOrBuilder> orderRuleBuilder_;
    /**
     * <pre>
     * 运价展示顺序规则
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType OrderRule = 20;</code>
     */
    public boolean hasOrderRule() {
      return orderRuleBuilder_ != null || orderRule_ != null;
    }
    /**
     * <pre>
     * 运价展示顺序规则
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType OrderRule = 20;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType getOrderRule() {
      if (orderRuleBuilder_ == null) {
        return orderRule_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType.getDefaultInstance() : orderRule_;
      } else {
        return orderRuleBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 运价展示顺序规则
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType OrderRule = 20;</code>
     */
    public Builder setOrderRule(com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType value) {
      if (orderRuleBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        orderRule_ = value;
        onChanged();
      } else {
        orderRuleBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 运价展示顺序规则
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType OrderRule = 20;</code>
     */
    public Builder setOrderRule(
        com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType.Builder builderForValue) {
      if (orderRuleBuilder_ == null) {
        orderRule_ = builderForValue.build();
        onChanged();
      } else {
        orderRuleBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 运价展示顺序规则
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType OrderRule = 20;</code>
     */
    public Builder mergeOrderRule(com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType value) {
      if (orderRuleBuilder_ == null) {
        if (orderRule_ != null) {
          orderRule_ =
            com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType.newBuilder(orderRule_).mergeFrom(value).buildPartial();
        } else {
          orderRule_ = value;
        }
        onChanged();
      } else {
        orderRuleBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 运价展示顺序规则
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType OrderRule = 20;</code>
     */
    public Builder clearOrderRule() {
      if (orderRuleBuilder_ == null) {
        orderRule_ = null;
        onChanged();
      } else {
        orderRule_ = null;
        orderRuleBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 运价展示顺序规则
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType OrderRule = 20;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType.Builder getOrderRuleBuilder() {
      
      onChanged();
      return getOrderRuleFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 运价展示顺序规则
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType OrderRule = 20;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleTypeOrBuilder getOrderRuleOrBuilder() {
      if (orderRuleBuilder_ != null) {
        return orderRuleBuilder_.getMessageOrBuilder();
      } else {
        return orderRule_ == null ?
            com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType.getDefaultInstance() : orderRule_;
      }
    }
    /**
     * <pre>
     * 运价展示顺序规则
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType OrderRule = 20;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType, com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleTypeOrBuilder> 
        getOrderRuleFieldBuilder() {
      if (orderRuleBuilder_ == null) {
        orderRuleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType, com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.OrderRuleTypeOrBuilder>(
                getOrderRule(),
                getParentForChildren(),
                isClean());
        orderRule_ = null;
      }
      return orderRuleBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType)
  private static final com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType();
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<OfferType>
      PARSER = new com.google.protobuf.AbstractParser<OfferType>() {
    @java.lang.Override
    public OfferType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new OfferType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<OfferType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<OfferType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

