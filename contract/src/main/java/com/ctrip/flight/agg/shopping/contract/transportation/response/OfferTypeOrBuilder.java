// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.ctrip.flight.agg.shopping.contract.transportation.response.proto

package com.ctrip.flight.agg.shopping.contract.transportation.response;

public interface OfferTypeOrBuilder extends
    // @@protoc_insertion_point(interface_extends:com.ctrip.flight.agg.shopping.contract.transportation.response.OfferType)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * 与TransportRef一一对应
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
   */
  java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType> 
      getTransportFareMappingList();
  /**
   * <pre>
   * 与TransportRef一一对应
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
   */
  com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType getTransportFareMapping(int index);
  /**
   * <pre>
   * 与TransportRef一一对应
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
   */
  int getTransportFareMappingCount();
  /**
   * <pre>
   * 与TransportRef一一对应
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
   */
  java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingTypeOrBuilder> 
      getTransportFareMappingOrBuilderList();
  /**
   * <pre>
   * 与TransportRef一一对应
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingType TransportFareMapping = 1;</code>
   */
  com.ctrip.flight.agg.shopping.contract.transportation.response.TransportFareMappingTypeOrBuilder getTransportFareMappingOrBuilder(
      int index);

  /**
   * <pre>
   * 行程组合的价格单元列表
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
   */
  java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType> 
      getProductDetailList();
  /**
   * <pre>
   * 行程组合的价格单元列表
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
   */
  com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType getProductDetail(int index);
  /**
   * <pre>
   * 行程组合的价格单元列表
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
   */
  int getProductDetailCount();
  /**
   * <pre>
   * 行程组合的价格单元列表
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
   */
  java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailTypeOrBuilder> 
      getProductDetailOrBuilderList();
  /**
   * <pre>
   * 行程组合的价格单元列表
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailType ProductDetail = 2;</code>
   */
  com.ctrip.flight.agg.shopping.contract.transportation.response.ProductDetailTypeOrBuilder getProductDetailOrBuilder(
      int index);

  /**
   * <pre>
   * 大交通价格反查token。Agg内部解析使用，对外不保证唯一性！
   * </pre>
   *
   * <code>string OfferToken = 3;</code>
   */
  java.lang.String getOfferToken();
  /**
   * <pre>
   * 大交通价格反查token。Agg内部解析使用，对外不保证唯一性！
   * </pre>
   *
   * <code>string OfferToken = 3;</code>
   */
  com.google.protobuf.ByteString
      getOfferTokenBytes();

  /**
   * <pre>
   * 产品组合类型
   * </pre>
   *
   * <code>repeated string ProductCombinationType = 4;</code>
   */
  java.util.List<java.lang.String>
      getProductCombinationTypeList();
  /**
   * <pre>
   * 产品组合类型
   * </pre>
   *
   * <code>repeated string ProductCombinationType = 4;</code>
   */
  int getProductCombinationTypeCount();
  /**
   * <pre>
   * 产品组合类型
   * </pre>
   *
   * <code>repeated string ProductCombinationType = 4;</code>
   */
  java.lang.String getProductCombinationType(int index);
  /**
   * <pre>
   * 产品组合类型
   * </pre>
   *
   * <code>repeated string ProductCombinationType = 4;</code>
   */
  com.google.protobuf.ByteString
      getProductCombinationTypeBytes(int index);

  /**
   * <pre>
   * 绑定在Offer维度的辅营信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
   */
  boolean hasOfferPackage();
  /**
   * <pre>
   * 绑定在Offer维度的辅营信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
   */
  com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType getOfferPackage();
  /**
   * <pre>
   * 绑定在Offer维度的辅营信息
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageType OfferPackage = 5;</code>
   */
  com.ctrip.flight.agg.shopping.contract.transportation.OfferPackageTypeOrBuilder getOfferPackageOrBuilder();

  /**
   * <pre>
   * 行李信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
   */
  java.util.List<com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType> 
      getBaggageRefList();
  /**
   * <pre>
   * 行李信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
   */
  com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType getBaggageRef(int index);
  /**
   * <pre>
   * 行李信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
   */
  int getBaggageRefCount();
  /**
   * <pre>
   * 行李信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
   */
  java.util.List<? extends com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefTypeOrBuilder> 
      getBaggageRefOrBuilderList();
  /**
   * <pre>
   * 行李信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefType BaggageRef = 6;</code>
   */
  com.ctrip.flight.agg.shopping.contract.baggage.BaggageRefTypeOrBuilder getBaggageRefOrBuilder(
      int index);

  /**
   * <pre>
   * 打包行李，可能会有多种规格
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
   */
  java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType> 
      getBaggageAncillaryList();
  /**
   * <pre>
   * 打包行李，可能会有多种规格
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
   */
  com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType getBaggageAncillary(int index);
  /**
   * <pre>
   * 打包行李，可能会有多种规格
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
   */
  int getBaggageAncillaryCount();
  /**
   * <pre>
   * 打包行李，可能会有多种规格
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
   */
  java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryTypeOrBuilder> 
      getBaggageAncillaryOrBuilderList();
  /**
   * <pre>
   * 打包行李，可能会有多种规格
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryType BaggageAncillary = 7;</code>
   */
  com.ctrip.flight.agg.shopping.contract.transportation.BaggageAncillaryTypeOrBuilder getBaggageAncillaryOrBuilder(
      int index);

  /**
   * <pre>
   * 优先级
   * </pre>
   *
   * <code>int32 Priority = 8;</code>
   */
  int getPriority();

  /**
   * <pre>
   * 国际机票价格属性ID集合
   * </pre>
   *
   * <code>repeated int32 PriceAttributeID = 9;</code>
   */
  java.util.List<java.lang.Integer> getPriceAttributeIDList();
  /**
   * <pre>
   * 国际机票价格属性ID集合
   * </pre>
   *
   * <code>repeated int32 PriceAttributeID = 9;</code>
   */
  int getPriceAttributeIDCount();
  /**
   * <pre>
   * 国际机票价格属性ID集合
   * </pre>
   *
   * <code>repeated int32 PriceAttributeID = 9;</code>
   */
  int getPriceAttributeID(int index);

  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 10;</code>
   */
  java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType> 
      getTagList();
  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 10;</code>
   */
  com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType getTag(int index);
  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 10;</code>
   */
  int getTagCount();
  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 10;</code>
   */
  java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder> 
      getTagOrBuilderList();
  /**
   * <pre>
   * 扩展结点
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairType Tag = 10;</code>
   */
  com.ctrip.flight.agg.shopping.contract.transportation.KeyValuePairTypeOrBuilder getTagOrBuilder(
      int index);

  /**
   * <pre>
   * 推荐类运价类型, 默认0：普通运价； 1: 推荐类运价； 2:普通运价+推荐类(既是普通又是推荐类，与前端展示有关)
   * </pre>
   *
   * <code>int32 RecommendedType = 11;</code>
   */
  int getRecommendedType();
}
