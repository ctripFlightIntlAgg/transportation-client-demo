// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.ctrip.flight.agg.shopping.contract.transportation.proto

package com.ctrip.flight.agg.shopping.contract.transportation;

/**
 * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType}
 */
public  final class RefundChangeType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType)
    RefundChangeTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use RefundChangeType.newBuilder() to construct.
  private RefundChangeType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RefundChangeType() {
    refundType_ = 0;
    changeType_ = 0;
    endorseType_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private RefundChangeType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            refundType_ = input.readInt32();
            break;
          }
          case 16: {

            changeType_ = input.readInt32();
            break;
          }
          case 24: {

            endorseType_ = input.readInt32();
            break;
          }
          case 34: {
            com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.Builder subBuilder = null;
            if (minRefundFee_ != null) {
              subBuilder = minRefundFee_.toBuilder();
            }
            minRefundFee_ = input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(minRefundFee_);
              minRefundFee_ = subBuilder.buildPartial();
            }

            break;
          }
          case 42: {
            com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.Builder subBuilder = null;
            if (minChangeFee_ != null) {
              subBuilder = minChangeFee_.toBuilder();
            }
            minChangeFee_ = input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(minChangeFee_);
              minChangeFee_ = subBuilder.buildPartial();
            }

            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_RefundChangeType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_RefundChangeType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType.class, com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType.Builder.class);
  }

  public static final int REFUNDTYPE_FIELD_NUMBER = 1;
  private int refundType_;
  /**
   * <pre>
   * 是否可退票,1:不允许,2:允许,3:有条件
   * </pre>
   *
   * <code>int32 RefundType = 1;</code>
   */
  public int getRefundType() {
    return refundType_;
  }

  public static final int CHANGETYPE_FIELD_NUMBER = 2;
  private int changeType_;
  /**
   * <pre>
   * 是否可更改,1:不允许,2:允许,3:有条件
   * </pre>
   *
   * <code>int32 ChangeType = 2;</code>
   */
  public int getChangeType() {
    return changeType_;
  }

  public static final int ENDORSETYPE_FIELD_NUMBER = 3;
  private int endorseType_;
  /**
   * <pre>
   * 是否可签转,1:不允许,2:允许,3:有条件
   * </pre>
   *
   * <code>int32 EndorseType = 3;</code>
   */
  public int getEndorseType() {
    return endorseType_;
  }

  public static final int MINREFUNDFEE_FIELD_NUMBER = 4;
  private com.ctrip.flight.agg.shopping.contract.transportation.DoubleType minRefundFee_;
  /**
   * <pre>
   * 最小退票费，定义成引用类型，是为了区分0和空
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinRefundFee = 4;</code>
   */
  public boolean hasMinRefundFee() {
    return minRefundFee_ != null;
  }
  /**
   * <pre>
   * 最小退票费，定义成引用类型，是为了区分0和空
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinRefundFee = 4;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.DoubleType getMinRefundFee() {
    return minRefundFee_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.getDefaultInstance() : minRefundFee_;
  }
  /**
   * <pre>
   * 最小退票费，定义成引用类型，是为了区分0和空
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinRefundFee = 4;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.DoubleTypeOrBuilder getMinRefundFeeOrBuilder() {
    return getMinRefundFee();
  }

  public static final int MINCHANGEFEE_FIELD_NUMBER = 5;
  private com.ctrip.flight.agg.shopping.contract.transportation.DoubleType minChangeFee_;
  /**
   * <pre>
   * 最小改期费，定义成引用类型，是为了区分0和空
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinChangeFee = 5;</code>
   */
  public boolean hasMinChangeFee() {
    return minChangeFee_ != null;
  }
  /**
   * <pre>
   * 最小改期费，定义成引用类型，是为了区分0和空
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinChangeFee = 5;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.DoubleType getMinChangeFee() {
    return minChangeFee_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.getDefaultInstance() : minChangeFee_;
  }
  /**
   * <pre>
   * 最小改期费，定义成引用类型，是为了区分0和空
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinChangeFee = 5;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.DoubleTypeOrBuilder getMinChangeFeeOrBuilder() {
    return getMinChangeFee();
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (refundType_ != 0) {
      output.writeInt32(1, refundType_);
    }
    if (changeType_ != 0) {
      output.writeInt32(2, changeType_);
    }
    if (endorseType_ != 0) {
      output.writeInt32(3, endorseType_);
    }
    if (minRefundFee_ != null) {
      output.writeMessage(4, getMinRefundFee());
    }
    if (minChangeFee_ != null) {
      output.writeMessage(5, getMinChangeFee());
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (refundType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, refundType_);
    }
    if (changeType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, changeType_);
    }
    if (endorseType_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, endorseType_);
    }
    if (minRefundFee_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, getMinRefundFee());
    }
    if (minChangeFee_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(5, getMinChangeFee());
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType other = (com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType) obj;

    boolean result = true;
    result = result && (getRefundType()
        == other.getRefundType());
    result = result && (getChangeType()
        == other.getChangeType());
    result = result && (getEndorseType()
        == other.getEndorseType());
    result = result && (hasMinRefundFee() == other.hasMinRefundFee());
    if (hasMinRefundFee()) {
      result = result && getMinRefundFee()
          .equals(other.getMinRefundFee());
    }
    result = result && (hasMinChangeFee() == other.hasMinChangeFee());
    if (hasMinChangeFee()) {
      result = result && getMinChangeFee()
          .equals(other.getMinChangeFee());
    }
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + REFUNDTYPE_FIELD_NUMBER;
    hash = (53 * hash) + getRefundType();
    hash = (37 * hash) + CHANGETYPE_FIELD_NUMBER;
    hash = (53 * hash) + getChangeType();
    hash = (37 * hash) + ENDORSETYPE_FIELD_NUMBER;
    hash = (53 * hash) + getEndorseType();
    if (hasMinRefundFee()) {
      hash = (37 * hash) + MINREFUNDFEE_FIELD_NUMBER;
      hash = (53 * hash) + getMinRefundFee().hashCode();
    }
    if (hasMinChangeFee()) {
      hash = (37 * hash) + MINCHANGEFEE_FIELD_NUMBER;
      hash = (53 * hash) + getMinChangeFee().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType)
      com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_RefundChangeType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_RefundChangeType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType.class, com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType.Builder.class);
    }

    // Construct using com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      refundType_ = 0;

      changeType_ = 0;

      endorseType_ = 0;

      if (minRefundFeeBuilder_ == null) {
        minRefundFee_ = null;
      } else {
        minRefundFee_ = null;
        minRefundFeeBuilder_ = null;
      }
      if (minChangeFeeBuilder_ == null) {
        minChangeFee_ = null;
      } else {
        minChangeFee_ = null;
        minChangeFeeBuilder_ = null;
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_RefundChangeType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType getDefaultInstanceForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType build() {
      com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType buildPartial() {
      com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType result = new com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType(this);
      result.refundType_ = refundType_;
      result.changeType_ = changeType_;
      result.endorseType_ = endorseType_;
      if (minRefundFeeBuilder_ == null) {
        result.minRefundFee_ = minRefundFee_;
      } else {
        result.minRefundFee_ = minRefundFeeBuilder_.build();
      }
      if (minChangeFeeBuilder_ == null) {
        result.minChangeFee_ = minChangeFee_;
      } else {
        result.minChangeFee_ = minChangeFeeBuilder_.build();
      }
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType) {
        return mergeFrom((com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType other) {
      if (other == com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType.getDefaultInstance()) return this;
      if (other.getRefundType() != 0) {
        setRefundType(other.getRefundType());
      }
      if (other.getChangeType() != 0) {
        setChangeType(other.getChangeType());
      }
      if (other.getEndorseType() != 0) {
        setEndorseType(other.getEndorseType());
      }
      if (other.hasMinRefundFee()) {
        mergeMinRefundFee(other.getMinRefundFee());
      }
      if (other.hasMinChangeFee()) {
        mergeMinChangeFee(other.getMinChangeFee());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int refundType_ ;
    /**
     * <pre>
     * 是否可退票,1:不允许,2:允许,3:有条件
     * </pre>
     *
     * <code>int32 RefundType = 1;</code>
     */
    public int getRefundType() {
      return refundType_;
    }
    /**
     * <pre>
     * 是否可退票,1:不允许,2:允许,3:有条件
     * </pre>
     *
     * <code>int32 RefundType = 1;</code>
     */
    public Builder setRefundType(int value) {
      
      refundType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否可退票,1:不允许,2:允许,3:有条件
     * </pre>
     *
     * <code>int32 RefundType = 1;</code>
     */
    public Builder clearRefundType() {
      
      refundType_ = 0;
      onChanged();
      return this;
    }

    private int changeType_ ;
    /**
     * <pre>
     * 是否可更改,1:不允许,2:允许,3:有条件
     * </pre>
     *
     * <code>int32 ChangeType = 2;</code>
     */
    public int getChangeType() {
      return changeType_;
    }
    /**
     * <pre>
     * 是否可更改,1:不允许,2:允许,3:有条件
     * </pre>
     *
     * <code>int32 ChangeType = 2;</code>
     */
    public Builder setChangeType(int value) {
      
      changeType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否可更改,1:不允许,2:允许,3:有条件
     * </pre>
     *
     * <code>int32 ChangeType = 2;</code>
     */
    public Builder clearChangeType() {
      
      changeType_ = 0;
      onChanged();
      return this;
    }

    private int endorseType_ ;
    /**
     * <pre>
     * 是否可签转,1:不允许,2:允许,3:有条件
     * </pre>
     *
     * <code>int32 EndorseType = 3;</code>
     */
    public int getEndorseType() {
      return endorseType_;
    }
    /**
     * <pre>
     * 是否可签转,1:不允许,2:允许,3:有条件
     * </pre>
     *
     * <code>int32 EndorseType = 3;</code>
     */
    public Builder setEndorseType(int value) {
      
      endorseType_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 是否可签转,1:不允许,2:允许,3:有条件
     * </pre>
     *
     * <code>int32 EndorseType = 3;</code>
     */
    public Builder clearEndorseType() {
      
      endorseType_ = 0;
      onChanged();
      return this;
    }

    private com.ctrip.flight.agg.shopping.contract.transportation.DoubleType minRefundFee_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.DoubleType, com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.DoubleTypeOrBuilder> minRefundFeeBuilder_;
    /**
     * <pre>
     * 最小退票费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinRefundFee = 4;</code>
     */
    public boolean hasMinRefundFee() {
      return minRefundFeeBuilder_ != null || minRefundFee_ != null;
    }
    /**
     * <pre>
     * 最小退票费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinRefundFee = 4;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.DoubleType getMinRefundFee() {
      if (minRefundFeeBuilder_ == null) {
        return minRefundFee_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.getDefaultInstance() : minRefundFee_;
      } else {
        return minRefundFeeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 最小退票费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinRefundFee = 4;</code>
     */
    public Builder setMinRefundFee(com.ctrip.flight.agg.shopping.contract.transportation.DoubleType value) {
      if (minRefundFeeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        minRefundFee_ = value;
        onChanged();
      } else {
        minRefundFeeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 最小退票费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinRefundFee = 4;</code>
     */
    public Builder setMinRefundFee(
        com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.Builder builderForValue) {
      if (minRefundFeeBuilder_ == null) {
        minRefundFee_ = builderForValue.build();
        onChanged();
      } else {
        minRefundFeeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 最小退票费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinRefundFee = 4;</code>
     */
    public Builder mergeMinRefundFee(com.ctrip.flight.agg.shopping.contract.transportation.DoubleType value) {
      if (minRefundFeeBuilder_ == null) {
        if (minRefundFee_ != null) {
          minRefundFee_ =
            com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.newBuilder(minRefundFee_).mergeFrom(value).buildPartial();
        } else {
          minRefundFee_ = value;
        }
        onChanged();
      } else {
        minRefundFeeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 最小退票费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinRefundFee = 4;</code>
     */
    public Builder clearMinRefundFee() {
      if (minRefundFeeBuilder_ == null) {
        minRefundFee_ = null;
        onChanged();
      } else {
        minRefundFee_ = null;
        minRefundFeeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 最小退票费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinRefundFee = 4;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.Builder getMinRefundFeeBuilder() {
      
      onChanged();
      return getMinRefundFeeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 最小退票费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinRefundFee = 4;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.DoubleTypeOrBuilder getMinRefundFeeOrBuilder() {
      if (minRefundFeeBuilder_ != null) {
        return minRefundFeeBuilder_.getMessageOrBuilder();
      } else {
        return minRefundFee_ == null ?
            com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.getDefaultInstance() : minRefundFee_;
      }
    }
    /**
     * <pre>
     * 最小退票费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinRefundFee = 4;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.DoubleType, com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.DoubleTypeOrBuilder> 
        getMinRefundFeeFieldBuilder() {
      if (minRefundFeeBuilder_ == null) {
        minRefundFeeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.DoubleType, com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.DoubleTypeOrBuilder>(
                getMinRefundFee(),
                getParentForChildren(),
                isClean());
        minRefundFee_ = null;
      }
      return minRefundFeeBuilder_;
    }

    private com.ctrip.flight.agg.shopping.contract.transportation.DoubleType minChangeFee_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.DoubleType, com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.DoubleTypeOrBuilder> minChangeFeeBuilder_;
    /**
     * <pre>
     * 最小改期费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinChangeFee = 5;</code>
     */
    public boolean hasMinChangeFee() {
      return minChangeFeeBuilder_ != null || minChangeFee_ != null;
    }
    /**
     * <pre>
     * 最小改期费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinChangeFee = 5;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.DoubleType getMinChangeFee() {
      if (minChangeFeeBuilder_ == null) {
        return minChangeFee_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.getDefaultInstance() : minChangeFee_;
      } else {
        return minChangeFeeBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 最小改期费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinChangeFee = 5;</code>
     */
    public Builder setMinChangeFee(com.ctrip.flight.agg.shopping.contract.transportation.DoubleType value) {
      if (minChangeFeeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        minChangeFee_ = value;
        onChanged();
      } else {
        minChangeFeeBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 最小改期费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinChangeFee = 5;</code>
     */
    public Builder setMinChangeFee(
        com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.Builder builderForValue) {
      if (minChangeFeeBuilder_ == null) {
        minChangeFee_ = builderForValue.build();
        onChanged();
      } else {
        minChangeFeeBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 最小改期费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinChangeFee = 5;</code>
     */
    public Builder mergeMinChangeFee(com.ctrip.flight.agg.shopping.contract.transportation.DoubleType value) {
      if (minChangeFeeBuilder_ == null) {
        if (minChangeFee_ != null) {
          minChangeFee_ =
            com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.newBuilder(minChangeFee_).mergeFrom(value).buildPartial();
        } else {
          minChangeFee_ = value;
        }
        onChanged();
      } else {
        minChangeFeeBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 最小改期费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinChangeFee = 5;</code>
     */
    public Builder clearMinChangeFee() {
      if (minChangeFeeBuilder_ == null) {
        minChangeFee_ = null;
        onChanged();
      } else {
        minChangeFee_ = null;
        minChangeFeeBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 最小改期费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinChangeFee = 5;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.Builder getMinChangeFeeBuilder() {
      
      onChanged();
      return getMinChangeFeeFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 最小改期费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinChangeFee = 5;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.DoubleTypeOrBuilder getMinChangeFeeOrBuilder() {
      if (minChangeFeeBuilder_ != null) {
        return minChangeFeeBuilder_.getMessageOrBuilder();
      } else {
        return minChangeFee_ == null ?
            com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.getDefaultInstance() : minChangeFee_;
      }
    }
    /**
     * <pre>
     * 最小改期费，定义成引用类型，是为了区分0和空
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.DoubleType MinChangeFee = 5;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.DoubleType, com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.DoubleTypeOrBuilder> 
        getMinChangeFeeFieldBuilder() {
      if (minChangeFeeBuilder_ == null) {
        minChangeFeeBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.DoubleType, com.ctrip.flight.agg.shopping.contract.transportation.DoubleType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.DoubleTypeOrBuilder>(
                getMinChangeFee(),
                getParentForChildren(),
                isClean());
        minChangeFee_ = null;
      }
      return minChangeFeeBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType)
  private static final com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType();
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RefundChangeType>
      PARSER = new com.google.protobuf.AbstractParser<RefundChangeType>() {
    @java.lang.Override
    public RefundChangeType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new RefundChangeType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RefundChangeType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RefundChangeType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.agg.shopping.contract.transportation.RefundChangeType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

