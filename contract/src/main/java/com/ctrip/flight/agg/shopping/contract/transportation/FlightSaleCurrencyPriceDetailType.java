// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.ctrip.flight.agg.shopping.contract.transportation.proto

package com.ctrip.flight.agg.shopping.contract.transportation;

/**
 * <pre>
 * 销售币种的价格信息
 * </pre>
 *
 * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType}
 */
public  final class FlightSaleCurrencyPriceDetailType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType)
    FlightSaleCurrencyPriceDetailTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use FlightSaleCurrencyPriceDetailType.newBuilder() to construct.
  private FlightSaleCurrencyPriceDetailType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private FlightSaleCurrencyPriceDetailType() {
    publishPrice_ = 0D;
    discount_ = java.util.Collections.emptyList();
    rate_ = 0D;
    prePcCodePrice_ = 0D;
    serviceFee_ = java.util.Collections.emptyList();
    flightHotelDiscountAmount_ = 0D;
    taxDetail_ = java.util.Collections.emptyList();
    accountPrice_ = 0D;
    netPrice_ = 0D;
    specialOfferDiffAmount_ = 0D;
    fareTaxFeeDetail_ = java.util.Collections.emptyList();
    surcharge_ = 0D;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private FlightSaleCurrencyPriceDetailType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10: {
            com.ctrip.flight.agg.shopping.contract.transportation.AmountType.Builder subBuilder = null;
            if (salePrice_ != null) {
              subBuilder = salePrice_.toBuilder();
            }
            salePrice_ = input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.AmountType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(salePrice_);
              salePrice_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {
            com.ctrip.flight.agg.shopping.contract.transportation.AmountType.Builder subBuilder = null;
            if (tax_ != null) {
              subBuilder = tax_.toBuilder();
            }
            tax_ = input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.AmountType.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(tax_);
              tax_ = subBuilder.buildPartial();
            }

            break;
          }
          case 25: {

            publishPrice_ = input.readDouble();
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              discount_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.DiscountType>();
              mutable_bitField0_ |= 0x00000008;
            }
            discount_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.DiscountType.parser(), extensionRegistry));
            break;
          }
          case 41: {

            rate_ = input.readDouble();
            break;
          }
          case 49: {

            prePcCodePrice_ = input.readDouble();
            break;
          }
          case 58: {
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              serviceFee_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType>();
              mutable_bitField0_ |= 0x00000040;
            }
            serviceFee_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType.parser(), extensionRegistry));
            break;
          }
          case 65: {

            flightHotelDiscountAmount_ = input.readDouble();
            break;
          }
          case 74: {
            if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
              taxDetail_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType>();
              mutable_bitField0_ |= 0x00000100;
            }
            taxDetail_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType.parser(), extensionRegistry));
            break;
          }
          case 81: {

            accountPrice_ = input.readDouble();
            break;
          }
          case 89: {

            netPrice_ = input.readDouble();
            break;
          }
          case 97: {

            specialOfferDiffAmount_ = input.readDouble();
            break;
          }
          case 106: {
            if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
              fareTaxFeeDetail_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType>();
              mutable_bitField0_ |= 0x00001000;
            }
            fareTaxFeeDetail_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType.parser(), extensionRegistry));
            break;
          }
          case 113: {

            surcharge_ = input.readDouble();
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        discount_ = java.util.Collections.unmodifiableList(discount_);
      }
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        serviceFee_ = java.util.Collections.unmodifiableList(serviceFee_);
      }
      if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
        taxDetail_ = java.util.Collections.unmodifiableList(taxDetail_);
      }
      if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
        fareTaxFeeDetail_ = java.util.Collections.unmodifiableList(fareTaxFeeDetail_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_FlightSaleCurrencyPriceDetailType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_FlightSaleCurrencyPriceDetailType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType.class, com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType.Builder.class);
  }

  private int bitField0_;
  public static final int SALEPRICE_FIELD_NUMBER = 1;
  private com.ctrip.flight.agg.shopping.contract.transportation.AmountType salePrice_;
  /**
   * <pre>
   * 卖价，销售币种
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType SalePrice = 1;</code>
   */
  public boolean hasSalePrice() {
    return salePrice_ != null;
  }
  /**
   * <pre>
   * 卖价，销售币种
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType SalePrice = 1;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.AmountType getSalePrice() {
    return salePrice_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.AmountType.getDefaultInstance() : salePrice_;
  }
  /**
   * <pre>
   * 卖价，销售币种
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType SalePrice = 1;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.AmountTypeOrBuilder getSalePriceOrBuilder() {
    return getSalePrice();
  }

  public static final int TAX_FIELD_NUMBER = 2;
  private com.ctrip.flight.agg.shopping.contract.transportation.AmountType tax_;
  /**
   * <pre>
   * 税费，销售币种
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType Tax = 2;</code>
   */
  public boolean hasTax() {
    return tax_ != null;
  }
  /**
   * <pre>
   * 税费，销售币种
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType Tax = 2;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.AmountType getTax() {
    return tax_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.AmountType.getDefaultInstance() : tax_;
  }
  /**
   * <pre>
   * 税费，销售币种
   * </pre>
   *
   * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType Tax = 2;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.AmountTypeOrBuilder getTaxOrBuilder() {
    return getTax();
  }

  public static final int PUBLISHPRICE_FIELD_NUMBER = 3;
  private double publishPrice_;
  /**
   * <pre>
   * 票面价(公布价)， 等于国内的PrintPrice
   * </pre>
   *
   * <code>double PublishPrice = 3;</code>
   */
  public double getPublishPrice() {
    return publishPrice_;
  }

  public static final int DISCOUNT_FIELD_NUMBER = 4;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.DiscountType> discount_;
  /**
   * <pre>
   * 让利信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.DiscountType> getDiscountList() {
    return discount_;
  }
  /**
   * <pre>
   * 让利信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.DiscountTypeOrBuilder> 
      getDiscountOrBuilderList() {
    return discount_;
  }
  /**
   * <pre>
   * 让利信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
   */
  public int getDiscountCount() {
    return discount_.size();
  }
  /**
   * <pre>
   * 让利信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.DiscountType getDiscount(int index) {
    return discount_.get(index);
  }
  /**
   * <pre>
   * 让利信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.DiscountTypeOrBuilder getDiscountOrBuilder(
      int index) {
    return discount_.get(index);
  }

  public static final int RATE_FIELD_NUMBER = 5;
  private double rate_;
  /**
   * <pre>
   * 折扣(销售价/舱等全价)
   * </pre>
   *
   * <code>double Rate = 5;</code>
   */
  public double getRate() {
    return rate_;
  }

  public static final int PREPCCODEPRICE_FIELD_NUMBER = 6;
  private double prePcCodePrice_;
  /**
   * <pre>
   * 国内航司优惠前价格，前端结合Discount和PcCode做展示用
   * </pre>
   *
   * <code>double PrePcCodePrice = 6;</code>
   */
  public double getPrePcCodePrice() {
    return prePcCodePrice_;
  }

  public static final int SERVICEFEE_FIELD_NUMBER = 7;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType> serviceFee_;
  /**
   * <pre>
   * 服务费明细列表, 销售币种
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType> getServiceFeeList() {
    return serviceFee_;
  }
  /**
   * <pre>
   * 服务费明细列表, 销售币种
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeTypeOrBuilder> 
      getServiceFeeOrBuilderList() {
    return serviceFee_;
  }
  /**
   * <pre>
   * 服务费明细列表, 销售币种
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
   */
  public int getServiceFeeCount() {
    return serviceFee_.size();
  }
  /**
   * <pre>
   * 服务费明细列表, 销售币种
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType getServiceFee(int index) {
    return serviceFee_.get(index);
  }
  /**
   * <pre>
   * 服务费明细列表, 销售币种
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeTypeOrBuilder getServiceFeeOrBuilder(
      int index) {
    return serviceFee_.get(index);
  }

  public static final int FLIGHTHOTELDISCOUNTAMOUNT_FIELD_NUMBER = 8;
  private double flightHotelDiscountAmount_;
  /**
   * <pre>
   * 机酒专享政策优惠金额（与外放最低价价差）
   * </pre>
   *
   * <code>double FlightHotelDiscountAmount = 8;</code>
   */
  public double getFlightHotelDiscountAmount() {
    return flightHotelDiscountAmount_;
  }

  public static final int TAXDETAIL_FIELD_NUMBER = 9;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType> taxDetail_;
  /**
   * <pre>
   * Tax detail for display
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType> getTaxDetailList() {
    return taxDetail_;
  }
  /**
   * <pre>
   * Tax detail for display
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailTypeOrBuilder> 
      getTaxDetailOrBuilderList() {
    return taxDetail_;
  }
  /**
   * <pre>
   * Tax detail for display
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
   */
  public int getTaxDetailCount() {
    return taxDetail_.size();
  }
  /**
   * <pre>
   * Tax detail for display
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType getTaxDetail(int index) {
    return taxDetail_.get(index);
  }
  /**
   * <pre>
   * Tax detail for display
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailTypeOrBuilder getTaxDetailOrBuilder(
      int index) {
    return taxDetail_.get(index);
  }

  public static final int ACCOUNTPRICE_FIELD_NUMBER = 10;
  private double accountPrice_;
  /**
   * <pre>
   * 结算底价，不含后返, 等于国内的SettlementCostPrice
   * </pre>
   *
   * <code>double AccountPrice = 10;</code>
   */
  public double getAccountPrice() {
    return accountPrice_;
  }

  public static final int NETPRICE_FIELD_NUMBER = 11;
  private double netPrice_;
  /**
   * <pre>
   * 底价
   * </pre>
   *
   * <code>double NetPrice = 11;</code>
   */
  public double getNetPrice() {
    return netPrice_;
  }

  public static final int SPECIALOFFERDIFFAMOUNT_FIELD_NUMBER = 12;
  private double specialOfferDiffAmount_;
  /**
   * <pre>
   * 相对于基准运价的差价，用于权益卡等场景
   * </pre>
   *
   * <code>double SpecialOfferDiffAmount = 12;</code>
   */
  public double getSpecialOfferDiffAmount() {
    return specialOfferDiffAmount_;
  }

  public static final int FARETAXFEEDETAIL_FIELD_NUMBER = 13;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType> fareTaxFeeDetail_;
  /**
   * <pre>
   * Tax fee detail based on fare
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType> getFareTaxFeeDetailList() {
    return fareTaxFeeDetail_;
  }
  /**
   * <pre>
   * Tax fee detail based on fare
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailTypeOrBuilder> 
      getFareTaxFeeDetailOrBuilderList() {
    return fareTaxFeeDetail_;
  }
  /**
   * <pre>
   * Tax fee detail based on fare
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
   */
  public int getFareTaxFeeDetailCount() {
    return fareTaxFeeDetail_.size();
  }
  /**
   * <pre>
   * Tax fee detail based on fare
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType getFareTaxFeeDetail(int index) {
    return fareTaxFeeDetail_.get(index);
  }
  /**
   * <pre>
   * Tax fee detail based on fare
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailTypeOrBuilder getFareTaxFeeDetailOrBuilder(
      int index) {
    return fareTaxFeeDetail_.get(index);
  }

  public static final int SURCHARGE_FIELD_NUMBER = 14;
  private double surcharge_;
  /**
   * <pre>
   * travix surcharge
   * </pre>
   *
   * <code>double Surcharge = 14;</code>
   */
  public double getSurcharge() {
    return surcharge_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (salePrice_ != null) {
      output.writeMessage(1, getSalePrice());
    }
    if (tax_ != null) {
      output.writeMessage(2, getTax());
    }
    if (publishPrice_ != 0D) {
      output.writeDouble(3, publishPrice_);
    }
    for (int i = 0; i < discount_.size(); i++) {
      output.writeMessage(4, discount_.get(i));
    }
    if (rate_ != 0D) {
      output.writeDouble(5, rate_);
    }
    if (prePcCodePrice_ != 0D) {
      output.writeDouble(6, prePcCodePrice_);
    }
    for (int i = 0; i < serviceFee_.size(); i++) {
      output.writeMessage(7, serviceFee_.get(i));
    }
    if (flightHotelDiscountAmount_ != 0D) {
      output.writeDouble(8, flightHotelDiscountAmount_);
    }
    for (int i = 0; i < taxDetail_.size(); i++) {
      output.writeMessage(9, taxDetail_.get(i));
    }
    if (accountPrice_ != 0D) {
      output.writeDouble(10, accountPrice_);
    }
    if (netPrice_ != 0D) {
      output.writeDouble(11, netPrice_);
    }
    if (specialOfferDiffAmount_ != 0D) {
      output.writeDouble(12, specialOfferDiffAmount_);
    }
    for (int i = 0; i < fareTaxFeeDetail_.size(); i++) {
      output.writeMessage(13, fareTaxFeeDetail_.get(i));
    }
    if (surcharge_ != 0D) {
      output.writeDouble(14, surcharge_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (salePrice_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getSalePrice());
    }
    if (tax_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, getTax());
    }
    if (publishPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(3, publishPrice_);
    }
    for (int i = 0; i < discount_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, discount_.get(i));
    }
    if (rate_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(5, rate_);
    }
    if (prePcCodePrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(6, prePcCodePrice_);
    }
    for (int i = 0; i < serviceFee_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(7, serviceFee_.get(i));
    }
    if (flightHotelDiscountAmount_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(8, flightHotelDiscountAmount_);
    }
    for (int i = 0; i < taxDetail_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(9, taxDetail_.get(i));
    }
    if (accountPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(10, accountPrice_);
    }
    if (netPrice_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(11, netPrice_);
    }
    if (specialOfferDiffAmount_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(12, specialOfferDiffAmount_);
    }
    for (int i = 0; i < fareTaxFeeDetail_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(13, fareTaxFeeDetail_.get(i));
    }
    if (surcharge_ != 0D) {
      size += com.google.protobuf.CodedOutputStream
        .computeDoubleSize(14, surcharge_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType other = (com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType) obj;

    boolean result = true;
    result = result && (hasSalePrice() == other.hasSalePrice());
    if (hasSalePrice()) {
      result = result && getSalePrice()
          .equals(other.getSalePrice());
    }
    result = result && (hasTax() == other.hasTax());
    if (hasTax()) {
      result = result && getTax()
          .equals(other.getTax());
    }
    result = result && (
        java.lang.Double.doubleToLongBits(getPublishPrice())
        == java.lang.Double.doubleToLongBits(
            other.getPublishPrice()));
    result = result && getDiscountList()
        .equals(other.getDiscountList());
    result = result && (
        java.lang.Double.doubleToLongBits(getRate())
        == java.lang.Double.doubleToLongBits(
            other.getRate()));
    result = result && (
        java.lang.Double.doubleToLongBits(getPrePcCodePrice())
        == java.lang.Double.doubleToLongBits(
            other.getPrePcCodePrice()));
    result = result && getServiceFeeList()
        .equals(other.getServiceFeeList());
    result = result && (
        java.lang.Double.doubleToLongBits(getFlightHotelDiscountAmount())
        == java.lang.Double.doubleToLongBits(
            other.getFlightHotelDiscountAmount()));
    result = result && getTaxDetailList()
        .equals(other.getTaxDetailList());
    result = result && (
        java.lang.Double.doubleToLongBits(getAccountPrice())
        == java.lang.Double.doubleToLongBits(
            other.getAccountPrice()));
    result = result && (
        java.lang.Double.doubleToLongBits(getNetPrice())
        == java.lang.Double.doubleToLongBits(
            other.getNetPrice()));
    result = result && (
        java.lang.Double.doubleToLongBits(getSpecialOfferDiffAmount())
        == java.lang.Double.doubleToLongBits(
            other.getSpecialOfferDiffAmount()));
    result = result && getFareTaxFeeDetailList()
        .equals(other.getFareTaxFeeDetailList());
    result = result && (
        java.lang.Double.doubleToLongBits(getSurcharge())
        == java.lang.Double.doubleToLongBits(
            other.getSurcharge()));
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasSalePrice()) {
      hash = (37 * hash) + SALEPRICE_FIELD_NUMBER;
      hash = (53 * hash) + getSalePrice().hashCode();
    }
    if (hasTax()) {
      hash = (37 * hash) + TAX_FIELD_NUMBER;
      hash = (53 * hash) + getTax().hashCode();
    }
    hash = (37 * hash) + PUBLISHPRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getPublishPrice()));
    if (getDiscountCount() > 0) {
      hash = (37 * hash) + DISCOUNT_FIELD_NUMBER;
      hash = (53 * hash) + getDiscountList().hashCode();
    }
    hash = (37 * hash) + RATE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getRate()));
    hash = (37 * hash) + PREPCCODEPRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getPrePcCodePrice()));
    if (getServiceFeeCount() > 0) {
      hash = (37 * hash) + SERVICEFEE_FIELD_NUMBER;
      hash = (53 * hash) + getServiceFeeList().hashCode();
    }
    hash = (37 * hash) + FLIGHTHOTELDISCOUNTAMOUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getFlightHotelDiscountAmount()));
    if (getTaxDetailCount() > 0) {
      hash = (37 * hash) + TAXDETAIL_FIELD_NUMBER;
      hash = (53 * hash) + getTaxDetailList().hashCode();
    }
    hash = (37 * hash) + ACCOUNTPRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getAccountPrice()));
    hash = (37 * hash) + NETPRICE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getNetPrice()));
    hash = (37 * hash) + SPECIALOFFERDIFFAMOUNT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getSpecialOfferDiffAmount()));
    if (getFareTaxFeeDetailCount() > 0) {
      hash = (37 * hash) + FARETAXFEEDETAIL_FIELD_NUMBER;
      hash = (53 * hash) + getFareTaxFeeDetailList().hashCode();
    }
    hash = (37 * hash) + SURCHARGE_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        java.lang.Double.doubleToLongBits(getSurcharge()));
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * 销售币种的价格信息
   * </pre>
   *
   * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType)
      com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_FlightSaleCurrencyPriceDetailType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_FlightSaleCurrencyPriceDetailType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType.class, com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType.Builder.class);
    }

    // Construct using com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDiscountFieldBuilder();
        getServiceFeeFieldBuilder();
        getTaxDetailFieldBuilder();
        getFareTaxFeeDetailFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      if (salePriceBuilder_ == null) {
        salePrice_ = null;
      } else {
        salePrice_ = null;
        salePriceBuilder_ = null;
      }
      if (taxBuilder_ == null) {
        tax_ = null;
      } else {
        tax_ = null;
        taxBuilder_ = null;
      }
      publishPrice_ = 0D;

      if (discountBuilder_ == null) {
        discount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        discountBuilder_.clear();
      }
      rate_ = 0D;

      prePcCodePrice_ = 0D;

      if (serviceFeeBuilder_ == null) {
        serviceFee_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
      } else {
        serviceFeeBuilder_.clear();
      }
      flightHotelDiscountAmount_ = 0D;

      if (taxDetailBuilder_ == null) {
        taxDetail_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
      } else {
        taxDetailBuilder_.clear();
      }
      accountPrice_ = 0D;

      netPrice_ = 0D;

      specialOfferDiffAmount_ = 0D;

      if (fareTaxFeeDetailBuilder_ == null) {
        fareTaxFeeDetail_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
      } else {
        fareTaxFeeDetailBuilder_.clear();
      }
      surcharge_ = 0D;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.ComCtripFlightAggShoppingContractTransportation.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_FlightSaleCurrencyPriceDetailType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType getDefaultInstanceForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType build() {
      com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType buildPartial() {
      com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType result = new com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (salePriceBuilder_ == null) {
        result.salePrice_ = salePrice_;
      } else {
        result.salePrice_ = salePriceBuilder_.build();
      }
      if (taxBuilder_ == null) {
        result.tax_ = tax_;
      } else {
        result.tax_ = taxBuilder_.build();
      }
      result.publishPrice_ = publishPrice_;
      if (discountBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          discount_ = java.util.Collections.unmodifiableList(discount_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.discount_ = discount_;
      } else {
        result.discount_ = discountBuilder_.build();
      }
      result.rate_ = rate_;
      result.prePcCodePrice_ = prePcCodePrice_;
      if (serviceFeeBuilder_ == null) {
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          serviceFee_ = java.util.Collections.unmodifiableList(serviceFee_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.serviceFee_ = serviceFee_;
      } else {
        result.serviceFee_ = serviceFeeBuilder_.build();
      }
      result.flightHotelDiscountAmount_ = flightHotelDiscountAmount_;
      if (taxDetailBuilder_ == null) {
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          taxDetail_ = java.util.Collections.unmodifiableList(taxDetail_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.taxDetail_ = taxDetail_;
      } else {
        result.taxDetail_ = taxDetailBuilder_.build();
      }
      result.accountPrice_ = accountPrice_;
      result.netPrice_ = netPrice_;
      result.specialOfferDiffAmount_ = specialOfferDiffAmount_;
      if (fareTaxFeeDetailBuilder_ == null) {
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          fareTaxFeeDetail_ = java.util.Collections.unmodifiableList(fareTaxFeeDetail_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.fareTaxFeeDetail_ = fareTaxFeeDetail_;
      } else {
        result.fareTaxFeeDetail_ = fareTaxFeeDetailBuilder_.build();
      }
      result.surcharge_ = surcharge_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType) {
        return mergeFrom((com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType other) {
      if (other == com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType.getDefaultInstance()) return this;
      if (other.hasSalePrice()) {
        mergeSalePrice(other.getSalePrice());
      }
      if (other.hasTax()) {
        mergeTax(other.getTax());
      }
      if (other.getPublishPrice() != 0D) {
        setPublishPrice(other.getPublishPrice());
      }
      if (discountBuilder_ == null) {
        if (!other.discount_.isEmpty()) {
          if (discount_.isEmpty()) {
            discount_ = other.discount_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureDiscountIsMutable();
            discount_.addAll(other.discount_);
          }
          onChanged();
        }
      } else {
        if (!other.discount_.isEmpty()) {
          if (discountBuilder_.isEmpty()) {
            discountBuilder_.dispose();
            discountBuilder_ = null;
            discount_ = other.discount_;
            bitField0_ = (bitField0_ & ~0x00000008);
            discountBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDiscountFieldBuilder() : null;
          } else {
            discountBuilder_.addAllMessages(other.discount_);
          }
        }
      }
      if (other.getRate() != 0D) {
        setRate(other.getRate());
      }
      if (other.getPrePcCodePrice() != 0D) {
        setPrePcCodePrice(other.getPrePcCodePrice());
      }
      if (serviceFeeBuilder_ == null) {
        if (!other.serviceFee_.isEmpty()) {
          if (serviceFee_.isEmpty()) {
            serviceFee_ = other.serviceFee_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureServiceFeeIsMutable();
            serviceFee_.addAll(other.serviceFee_);
          }
          onChanged();
        }
      } else {
        if (!other.serviceFee_.isEmpty()) {
          if (serviceFeeBuilder_.isEmpty()) {
            serviceFeeBuilder_.dispose();
            serviceFeeBuilder_ = null;
            serviceFee_ = other.serviceFee_;
            bitField0_ = (bitField0_ & ~0x00000040);
            serviceFeeBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getServiceFeeFieldBuilder() : null;
          } else {
            serviceFeeBuilder_.addAllMessages(other.serviceFee_);
          }
        }
      }
      if (other.getFlightHotelDiscountAmount() != 0D) {
        setFlightHotelDiscountAmount(other.getFlightHotelDiscountAmount());
      }
      if (taxDetailBuilder_ == null) {
        if (!other.taxDetail_.isEmpty()) {
          if (taxDetail_.isEmpty()) {
            taxDetail_ = other.taxDetail_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureTaxDetailIsMutable();
            taxDetail_.addAll(other.taxDetail_);
          }
          onChanged();
        }
      } else {
        if (!other.taxDetail_.isEmpty()) {
          if (taxDetailBuilder_.isEmpty()) {
            taxDetailBuilder_.dispose();
            taxDetailBuilder_ = null;
            taxDetail_ = other.taxDetail_;
            bitField0_ = (bitField0_ & ~0x00000100);
            taxDetailBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getTaxDetailFieldBuilder() : null;
          } else {
            taxDetailBuilder_.addAllMessages(other.taxDetail_);
          }
        }
      }
      if (other.getAccountPrice() != 0D) {
        setAccountPrice(other.getAccountPrice());
      }
      if (other.getNetPrice() != 0D) {
        setNetPrice(other.getNetPrice());
      }
      if (other.getSpecialOfferDiffAmount() != 0D) {
        setSpecialOfferDiffAmount(other.getSpecialOfferDiffAmount());
      }
      if (fareTaxFeeDetailBuilder_ == null) {
        if (!other.fareTaxFeeDetail_.isEmpty()) {
          if (fareTaxFeeDetail_.isEmpty()) {
            fareTaxFeeDetail_ = other.fareTaxFeeDetail_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureFareTaxFeeDetailIsMutable();
            fareTaxFeeDetail_.addAll(other.fareTaxFeeDetail_);
          }
          onChanged();
        }
      } else {
        if (!other.fareTaxFeeDetail_.isEmpty()) {
          if (fareTaxFeeDetailBuilder_.isEmpty()) {
            fareTaxFeeDetailBuilder_.dispose();
            fareTaxFeeDetailBuilder_ = null;
            fareTaxFeeDetail_ = other.fareTaxFeeDetail_;
            bitField0_ = (bitField0_ & ~0x00001000);
            fareTaxFeeDetailBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getFareTaxFeeDetailFieldBuilder() : null;
          } else {
            fareTaxFeeDetailBuilder_.addAllMessages(other.fareTaxFeeDetail_);
          }
        }
      }
      if (other.getSurcharge() != 0D) {
        setSurcharge(other.getSurcharge());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.ctrip.flight.agg.shopping.contract.transportation.AmountType salePrice_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.AmountType, com.ctrip.flight.agg.shopping.contract.transportation.AmountType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.AmountTypeOrBuilder> salePriceBuilder_;
    /**
     * <pre>
     * 卖价，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType SalePrice = 1;</code>
     */
    public boolean hasSalePrice() {
      return salePriceBuilder_ != null || salePrice_ != null;
    }
    /**
     * <pre>
     * 卖价，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType SalePrice = 1;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.AmountType getSalePrice() {
      if (salePriceBuilder_ == null) {
        return salePrice_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.AmountType.getDefaultInstance() : salePrice_;
      } else {
        return salePriceBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 卖价，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType SalePrice = 1;</code>
     */
    public Builder setSalePrice(com.ctrip.flight.agg.shopping.contract.transportation.AmountType value) {
      if (salePriceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        salePrice_ = value;
        onChanged();
      } else {
        salePriceBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 卖价，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType SalePrice = 1;</code>
     */
    public Builder setSalePrice(
        com.ctrip.flight.agg.shopping.contract.transportation.AmountType.Builder builderForValue) {
      if (salePriceBuilder_ == null) {
        salePrice_ = builderForValue.build();
        onChanged();
      } else {
        salePriceBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 卖价，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType SalePrice = 1;</code>
     */
    public Builder mergeSalePrice(com.ctrip.flight.agg.shopping.contract.transportation.AmountType value) {
      if (salePriceBuilder_ == null) {
        if (salePrice_ != null) {
          salePrice_ =
            com.ctrip.flight.agg.shopping.contract.transportation.AmountType.newBuilder(salePrice_).mergeFrom(value).buildPartial();
        } else {
          salePrice_ = value;
        }
        onChanged();
      } else {
        salePriceBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 卖价，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType SalePrice = 1;</code>
     */
    public Builder clearSalePrice() {
      if (salePriceBuilder_ == null) {
        salePrice_ = null;
        onChanged();
      } else {
        salePrice_ = null;
        salePriceBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 卖价，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType SalePrice = 1;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.AmountType.Builder getSalePriceBuilder() {
      
      onChanged();
      return getSalePriceFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 卖价，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType SalePrice = 1;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.AmountTypeOrBuilder getSalePriceOrBuilder() {
      if (salePriceBuilder_ != null) {
        return salePriceBuilder_.getMessageOrBuilder();
      } else {
        return salePrice_ == null ?
            com.ctrip.flight.agg.shopping.contract.transportation.AmountType.getDefaultInstance() : salePrice_;
      }
    }
    /**
     * <pre>
     * 卖价，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType SalePrice = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.AmountType, com.ctrip.flight.agg.shopping.contract.transportation.AmountType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.AmountTypeOrBuilder> 
        getSalePriceFieldBuilder() {
      if (salePriceBuilder_ == null) {
        salePriceBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.AmountType, com.ctrip.flight.agg.shopping.contract.transportation.AmountType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.AmountTypeOrBuilder>(
                getSalePrice(),
                getParentForChildren(),
                isClean());
        salePrice_ = null;
      }
      return salePriceBuilder_;
    }

    private com.ctrip.flight.agg.shopping.contract.transportation.AmountType tax_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.AmountType, com.ctrip.flight.agg.shopping.contract.transportation.AmountType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.AmountTypeOrBuilder> taxBuilder_;
    /**
     * <pre>
     * 税费，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType Tax = 2;</code>
     */
    public boolean hasTax() {
      return taxBuilder_ != null || tax_ != null;
    }
    /**
     * <pre>
     * 税费，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType Tax = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.AmountType getTax() {
      if (taxBuilder_ == null) {
        return tax_ == null ? com.ctrip.flight.agg.shopping.contract.transportation.AmountType.getDefaultInstance() : tax_;
      } else {
        return taxBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * 税费，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType Tax = 2;</code>
     */
    public Builder setTax(com.ctrip.flight.agg.shopping.contract.transportation.AmountType value) {
      if (taxBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        tax_ = value;
        onChanged();
      } else {
        taxBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * 税费，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType Tax = 2;</code>
     */
    public Builder setTax(
        com.ctrip.flight.agg.shopping.contract.transportation.AmountType.Builder builderForValue) {
      if (taxBuilder_ == null) {
        tax_ = builderForValue.build();
        onChanged();
      } else {
        taxBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * 税费，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType Tax = 2;</code>
     */
    public Builder mergeTax(com.ctrip.flight.agg.shopping.contract.transportation.AmountType value) {
      if (taxBuilder_ == null) {
        if (tax_ != null) {
          tax_ =
            com.ctrip.flight.agg.shopping.contract.transportation.AmountType.newBuilder(tax_).mergeFrom(value).buildPartial();
        } else {
          tax_ = value;
        }
        onChanged();
      } else {
        taxBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * 税费，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType Tax = 2;</code>
     */
    public Builder clearTax() {
      if (taxBuilder_ == null) {
        tax_ = null;
        onChanged();
      } else {
        tax_ = null;
        taxBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * 税费，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType Tax = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.AmountType.Builder getTaxBuilder() {
      
      onChanged();
      return getTaxFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * 税费，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType Tax = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.AmountTypeOrBuilder getTaxOrBuilder() {
      if (taxBuilder_ != null) {
        return taxBuilder_.getMessageOrBuilder();
      } else {
        return tax_ == null ?
            com.ctrip.flight.agg.shopping.contract.transportation.AmountType.getDefaultInstance() : tax_;
      }
    }
    /**
     * <pre>
     * 税费，销售币种
     * </pre>
     *
     * <code>.com.ctrip.flight.agg.shopping.contract.transportation.AmountType Tax = 2;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.AmountType, com.ctrip.flight.agg.shopping.contract.transportation.AmountType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.AmountTypeOrBuilder> 
        getTaxFieldBuilder() {
      if (taxBuilder_ == null) {
        taxBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.AmountType, com.ctrip.flight.agg.shopping.contract.transportation.AmountType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.AmountTypeOrBuilder>(
                getTax(),
                getParentForChildren(),
                isClean());
        tax_ = null;
      }
      return taxBuilder_;
    }

    private double publishPrice_ ;
    /**
     * <pre>
     * 票面价(公布价)， 等于国内的PrintPrice
     * </pre>
     *
     * <code>double PublishPrice = 3;</code>
     */
    public double getPublishPrice() {
      return publishPrice_;
    }
    /**
     * <pre>
     * 票面价(公布价)， 等于国内的PrintPrice
     * </pre>
     *
     * <code>double PublishPrice = 3;</code>
     */
    public Builder setPublishPrice(double value) {
      
      publishPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 票面价(公布价)， 等于国内的PrintPrice
     * </pre>
     *
     * <code>double PublishPrice = 3;</code>
     */
    public Builder clearPublishPrice() {
      
      publishPrice_ = 0D;
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.DiscountType> discount_ =
      java.util.Collections.emptyList();
    private void ensureDiscountIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        discount_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.DiscountType>(discount_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.DiscountType, com.ctrip.flight.agg.shopping.contract.transportation.DiscountType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.DiscountTypeOrBuilder> discountBuilder_;

    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.DiscountType> getDiscountList() {
      if (discountBuilder_ == null) {
        return java.util.Collections.unmodifiableList(discount_);
      } else {
        return discountBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public int getDiscountCount() {
      if (discountBuilder_ == null) {
        return discount_.size();
      } else {
        return discountBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.DiscountType getDiscount(int index) {
      if (discountBuilder_ == null) {
        return discount_.get(index);
      } else {
        return discountBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public Builder setDiscount(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.DiscountType value) {
      if (discountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDiscountIsMutable();
        discount_.set(index, value);
        onChanged();
      } else {
        discountBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public Builder setDiscount(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.DiscountType.Builder builderForValue) {
      if (discountBuilder_ == null) {
        ensureDiscountIsMutable();
        discount_.set(index, builderForValue.build());
        onChanged();
      } else {
        discountBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public Builder addDiscount(com.ctrip.flight.agg.shopping.contract.transportation.DiscountType value) {
      if (discountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDiscountIsMutable();
        discount_.add(value);
        onChanged();
      } else {
        discountBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public Builder addDiscount(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.DiscountType value) {
      if (discountBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDiscountIsMutable();
        discount_.add(index, value);
        onChanged();
      } else {
        discountBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public Builder addDiscount(
        com.ctrip.flight.agg.shopping.contract.transportation.DiscountType.Builder builderForValue) {
      if (discountBuilder_ == null) {
        ensureDiscountIsMutable();
        discount_.add(builderForValue.build());
        onChanged();
      } else {
        discountBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public Builder addDiscount(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.DiscountType.Builder builderForValue) {
      if (discountBuilder_ == null) {
        ensureDiscountIsMutable();
        discount_.add(index, builderForValue.build());
        onChanged();
      } else {
        discountBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public Builder addAllDiscount(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.DiscountType> values) {
      if (discountBuilder_ == null) {
        ensureDiscountIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, discount_);
        onChanged();
      } else {
        discountBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public Builder clearDiscount() {
      if (discountBuilder_ == null) {
        discount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        discountBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public Builder removeDiscount(int index) {
      if (discountBuilder_ == null) {
        ensureDiscountIsMutable();
        discount_.remove(index);
        onChanged();
      } else {
        discountBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.DiscountType.Builder getDiscountBuilder(
        int index) {
      return getDiscountFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.DiscountTypeOrBuilder getDiscountOrBuilder(
        int index) {
      if (discountBuilder_ == null) {
        return discount_.get(index);  } else {
        return discountBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.DiscountTypeOrBuilder> 
         getDiscountOrBuilderList() {
      if (discountBuilder_ != null) {
        return discountBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(discount_);
      }
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.DiscountType.Builder addDiscountBuilder() {
      return getDiscountFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.DiscountType.getDefaultInstance());
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.DiscountType.Builder addDiscountBuilder(
        int index) {
      return getDiscountFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.DiscountType.getDefaultInstance());
    }
    /**
     * <pre>
     * 让利信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.DiscountType Discount = 4;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.DiscountType.Builder> 
         getDiscountBuilderList() {
      return getDiscountFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.DiscountType, com.ctrip.flight.agg.shopping.contract.transportation.DiscountType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.DiscountTypeOrBuilder> 
        getDiscountFieldBuilder() {
      if (discountBuilder_ == null) {
        discountBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.DiscountType, com.ctrip.flight.agg.shopping.contract.transportation.DiscountType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.DiscountTypeOrBuilder>(
                discount_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        discount_ = null;
      }
      return discountBuilder_;
    }

    private double rate_ ;
    /**
     * <pre>
     * 折扣(销售价/舱等全价)
     * </pre>
     *
     * <code>double Rate = 5;</code>
     */
    public double getRate() {
      return rate_;
    }
    /**
     * <pre>
     * 折扣(销售价/舱等全价)
     * </pre>
     *
     * <code>double Rate = 5;</code>
     */
    public Builder setRate(double value) {
      
      rate_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 折扣(销售价/舱等全价)
     * </pre>
     *
     * <code>double Rate = 5;</code>
     */
    public Builder clearRate() {
      
      rate_ = 0D;
      onChanged();
      return this;
    }

    private double prePcCodePrice_ ;
    /**
     * <pre>
     * 国内航司优惠前价格，前端结合Discount和PcCode做展示用
     * </pre>
     *
     * <code>double PrePcCodePrice = 6;</code>
     */
    public double getPrePcCodePrice() {
      return prePcCodePrice_;
    }
    /**
     * <pre>
     * 国内航司优惠前价格，前端结合Discount和PcCode做展示用
     * </pre>
     *
     * <code>double PrePcCodePrice = 6;</code>
     */
    public Builder setPrePcCodePrice(double value) {
      
      prePcCodePrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 国内航司优惠前价格，前端结合Discount和PcCode做展示用
     * </pre>
     *
     * <code>double PrePcCodePrice = 6;</code>
     */
    public Builder clearPrePcCodePrice() {
      
      prePcCodePrice_ = 0D;
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType> serviceFee_ =
      java.util.Collections.emptyList();
    private void ensureServiceFeeIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        serviceFee_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType>(serviceFee_);
        bitField0_ |= 0x00000040;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType, com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeTypeOrBuilder> serviceFeeBuilder_;

    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType> getServiceFeeList() {
      if (serviceFeeBuilder_ == null) {
        return java.util.Collections.unmodifiableList(serviceFee_);
      } else {
        return serviceFeeBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public int getServiceFeeCount() {
      if (serviceFeeBuilder_ == null) {
        return serviceFee_.size();
      } else {
        return serviceFeeBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType getServiceFee(int index) {
      if (serviceFeeBuilder_ == null) {
        return serviceFee_.get(index);
      } else {
        return serviceFeeBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public Builder setServiceFee(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType value) {
      if (serviceFeeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServiceFeeIsMutable();
        serviceFee_.set(index, value);
        onChanged();
      } else {
        serviceFeeBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public Builder setServiceFee(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType.Builder builderForValue) {
      if (serviceFeeBuilder_ == null) {
        ensureServiceFeeIsMutable();
        serviceFee_.set(index, builderForValue.build());
        onChanged();
      } else {
        serviceFeeBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public Builder addServiceFee(com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType value) {
      if (serviceFeeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServiceFeeIsMutable();
        serviceFee_.add(value);
        onChanged();
      } else {
        serviceFeeBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public Builder addServiceFee(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType value) {
      if (serviceFeeBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureServiceFeeIsMutable();
        serviceFee_.add(index, value);
        onChanged();
      } else {
        serviceFeeBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public Builder addServiceFee(
        com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType.Builder builderForValue) {
      if (serviceFeeBuilder_ == null) {
        ensureServiceFeeIsMutable();
        serviceFee_.add(builderForValue.build());
        onChanged();
      } else {
        serviceFeeBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public Builder addServiceFee(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType.Builder builderForValue) {
      if (serviceFeeBuilder_ == null) {
        ensureServiceFeeIsMutable();
        serviceFee_.add(index, builderForValue.build());
        onChanged();
      } else {
        serviceFeeBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public Builder addAllServiceFee(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType> values) {
      if (serviceFeeBuilder_ == null) {
        ensureServiceFeeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, serviceFee_);
        onChanged();
      } else {
        serviceFeeBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public Builder clearServiceFee() {
      if (serviceFeeBuilder_ == null) {
        serviceFee_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
      } else {
        serviceFeeBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public Builder removeServiceFee(int index) {
      if (serviceFeeBuilder_ == null) {
        ensureServiceFeeIsMutable();
        serviceFee_.remove(index);
        onChanged();
      } else {
        serviceFeeBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType.Builder getServiceFeeBuilder(
        int index) {
      return getServiceFeeFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeTypeOrBuilder getServiceFeeOrBuilder(
        int index) {
      if (serviceFeeBuilder_ == null) {
        return serviceFee_.get(index);  } else {
        return serviceFeeBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeTypeOrBuilder> 
         getServiceFeeOrBuilderList() {
      if (serviceFeeBuilder_ != null) {
        return serviceFeeBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(serviceFee_);
      }
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType.Builder addServiceFeeBuilder() {
      return getServiceFeeFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType.getDefaultInstance());
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType.Builder addServiceFeeBuilder(
        int index) {
      return getServiceFeeFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType.getDefaultInstance());
    }
    /**
     * <pre>
     * 服务费明细列表, 销售币种
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType ServiceFee = 7;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType.Builder> 
         getServiceFeeBuilderList() {
      return getServiceFeeFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType, com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeTypeOrBuilder> 
        getServiceFeeFieldBuilder() {
      if (serviceFeeBuilder_ == null) {
        serviceFeeBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType, com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.ServiceFeeTypeOrBuilder>(
                serviceFee_,
                ((bitField0_ & 0x00000040) == 0x00000040),
                getParentForChildren(),
                isClean());
        serviceFee_ = null;
      }
      return serviceFeeBuilder_;
    }

    private double flightHotelDiscountAmount_ ;
    /**
     * <pre>
     * 机酒专享政策优惠金额（与外放最低价价差）
     * </pre>
     *
     * <code>double FlightHotelDiscountAmount = 8;</code>
     */
    public double getFlightHotelDiscountAmount() {
      return flightHotelDiscountAmount_;
    }
    /**
     * <pre>
     * 机酒专享政策优惠金额（与外放最低价价差）
     * </pre>
     *
     * <code>double FlightHotelDiscountAmount = 8;</code>
     */
    public Builder setFlightHotelDiscountAmount(double value) {
      
      flightHotelDiscountAmount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 机酒专享政策优惠金额（与外放最低价价差）
     * </pre>
     *
     * <code>double FlightHotelDiscountAmount = 8;</code>
     */
    public Builder clearFlightHotelDiscountAmount() {
      
      flightHotelDiscountAmount_ = 0D;
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType> taxDetail_ =
      java.util.Collections.emptyList();
    private void ensureTaxDetailIsMutable() {
      if (!((bitField0_ & 0x00000100) == 0x00000100)) {
        taxDetail_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType>(taxDetail_);
        bitField0_ |= 0x00000100;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType, com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailTypeOrBuilder> taxDetailBuilder_;

    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType> getTaxDetailList() {
      if (taxDetailBuilder_ == null) {
        return java.util.Collections.unmodifiableList(taxDetail_);
      } else {
        return taxDetailBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public int getTaxDetailCount() {
      if (taxDetailBuilder_ == null) {
        return taxDetail_.size();
      } else {
        return taxDetailBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType getTaxDetail(int index) {
      if (taxDetailBuilder_ == null) {
        return taxDetail_.get(index);
      } else {
        return taxDetailBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public Builder setTaxDetail(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType value) {
      if (taxDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTaxDetailIsMutable();
        taxDetail_.set(index, value);
        onChanged();
      } else {
        taxDetailBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public Builder setTaxDetail(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType.Builder builderForValue) {
      if (taxDetailBuilder_ == null) {
        ensureTaxDetailIsMutable();
        taxDetail_.set(index, builderForValue.build());
        onChanged();
      } else {
        taxDetailBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public Builder addTaxDetail(com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType value) {
      if (taxDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTaxDetailIsMutable();
        taxDetail_.add(value);
        onChanged();
      } else {
        taxDetailBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public Builder addTaxDetail(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType value) {
      if (taxDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureTaxDetailIsMutable();
        taxDetail_.add(index, value);
        onChanged();
      } else {
        taxDetailBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public Builder addTaxDetail(
        com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType.Builder builderForValue) {
      if (taxDetailBuilder_ == null) {
        ensureTaxDetailIsMutable();
        taxDetail_.add(builderForValue.build());
        onChanged();
      } else {
        taxDetailBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public Builder addTaxDetail(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType.Builder builderForValue) {
      if (taxDetailBuilder_ == null) {
        ensureTaxDetailIsMutable();
        taxDetail_.add(index, builderForValue.build());
        onChanged();
      } else {
        taxDetailBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public Builder addAllTaxDetail(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType> values) {
      if (taxDetailBuilder_ == null) {
        ensureTaxDetailIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, taxDetail_);
        onChanged();
      } else {
        taxDetailBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public Builder clearTaxDetail() {
      if (taxDetailBuilder_ == null) {
        taxDetail_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
      } else {
        taxDetailBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public Builder removeTaxDetail(int index) {
      if (taxDetailBuilder_ == null) {
        ensureTaxDetailIsMutable();
        taxDetail_.remove(index);
        onChanged();
      } else {
        taxDetailBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType.Builder getTaxDetailBuilder(
        int index) {
      return getTaxDetailFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailTypeOrBuilder getTaxDetailOrBuilder(
        int index) {
      if (taxDetailBuilder_ == null) {
        return taxDetail_.get(index);  } else {
        return taxDetailBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailTypeOrBuilder> 
         getTaxDetailOrBuilderList() {
      if (taxDetailBuilder_ != null) {
        return taxDetailBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(taxDetail_);
      }
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType.Builder addTaxDetailBuilder() {
      return getTaxDetailFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType.getDefaultInstance());
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType.Builder addTaxDetailBuilder(
        int index) {
      return getTaxDetailFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType.getDefaultInstance());
    }
    /**
     * <pre>
     * Tax detail for display
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType TaxDetail = 9;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType.Builder> 
         getTaxDetailBuilderList() {
      return getTaxDetailFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType, com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailTypeOrBuilder> 
        getTaxDetailFieldBuilder() {
      if (taxDetailBuilder_ == null) {
        taxDetailBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType, com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.TaxDetailTypeOrBuilder>(
                taxDetail_,
                ((bitField0_ & 0x00000100) == 0x00000100),
                getParentForChildren(),
                isClean());
        taxDetail_ = null;
      }
      return taxDetailBuilder_;
    }

    private double accountPrice_ ;
    /**
     * <pre>
     * 结算底价，不含后返, 等于国内的SettlementCostPrice
     * </pre>
     *
     * <code>double AccountPrice = 10;</code>
     */
    public double getAccountPrice() {
      return accountPrice_;
    }
    /**
     * <pre>
     * 结算底价，不含后返, 等于国内的SettlementCostPrice
     * </pre>
     *
     * <code>double AccountPrice = 10;</code>
     */
    public Builder setAccountPrice(double value) {
      
      accountPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 结算底价，不含后返, 等于国内的SettlementCostPrice
     * </pre>
     *
     * <code>double AccountPrice = 10;</code>
     */
    public Builder clearAccountPrice() {
      
      accountPrice_ = 0D;
      onChanged();
      return this;
    }

    private double netPrice_ ;
    /**
     * <pre>
     * 底价
     * </pre>
     *
     * <code>double NetPrice = 11;</code>
     */
    public double getNetPrice() {
      return netPrice_;
    }
    /**
     * <pre>
     * 底价
     * </pre>
     *
     * <code>double NetPrice = 11;</code>
     */
    public Builder setNetPrice(double value) {
      
      netPrice_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 底价
     * </pre>
     *
     * <code>double NetPrice = 11;</code>
     */
    public Builder clearNetPrice() {
      
      netPrice_ = 0D;
      onChanged();
      return this;
    }

    private double specialOfferDiffAmount_ ;
    /**
     * <pre>
     * 相对于基准运价的差价，用于权益卡等场景
     * </pre>
     *
     * <code>double SpecialOfferDiffAmount = 12;</code>
     */
    public double getSpecialOfferDiffAmount() {
      return specialOfferDiffAmount_;
    }
    /**
     * <pre>
     * 相对于基准运价的差价，用于权益卡等场景
     * </pre>
     *
     * <code>double SpecialOfferDiffAmount = 12;</code>
     */
    public Builder setSpecialOfferDiffAmount(double value) {
      
      specialOfferDiffAmount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 相对于基准运价的差价，用于权益卡等场景
     * </pre>
     *
     * <code>double SpecialOfferDiffAmount = 12;</code>
     */
    public Builder clearSpecialOfferDiffAmount() {
      
      specialOfferDiffAmount_ = 0D;
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType> fareTaxFeeDetail_ =
      java.util.Collections.emptyList();
    private void ensureFareTaxFeeDetailIsMutable() {
      if (!((bitField0_ & 0x00001000) == 0x00001000)) {
        fareTaxFeeDetail_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType>(fareTaxFeeDetail_);
        bitField0_ |= 0x00001000;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType, com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailTypeOrBuilder> fareTaxFeeDetailBuilder_;

    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType> getFareTaxFeeDetailList() {
      if (fareTaxFeeDetailBuilder_ == null) {
        return java.util.Collections.unmodifiableList(fareTaxFeeDetail_);
      } else {
        return fareTaxFeeDetailBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public int getFareTaxFeeDetailCount() {
      if (fareTaxFeeDetailBuilder_ == null) {
        return fareTaxFeeDetail_.size();
      } else {
        return fareTaxFeeDetailBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType getFareTaxFeeDetail(int index) {
      if (fareTaxFeeDetailBuilder_ == null) {
        return fareTaxFeeDetail_.get(index);
      } else {
        return fareTaxFeeDetailBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public Builder setFareTaxFeeDetail(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType value) {
      if (fareTaxFeeDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFareTaxFeeDetailIsMutable();
        fareTaxFeeDetail_.set(index, value);
        onChanged();
      } else {
        fareTaxFeeDetailBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public Builder setFareTaxFeeDetail(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType.Builder builderForValue) {
      if (fareTaxFeeDetailBuilder_ == null) {
        ensureFareTaxFeeDetailIsMutable();
        fareTaxFeeDetail_.set(index, builderForValue.build());
        onChanged();
      } else {
        fareTaxFeeDetailBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public Builder addFareTaxFeeDetail(com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType value) {
      if (fareTaxFeeDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFareTaxFeeDetailIsMutable();
        fareTaxFeeDetail_.add(value);
        onChanged();
      } else {
        fareTaxFeeDetailBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public Builder addFareTaxFeeDetail(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType value) {
      if (fareTaxFeeDetailBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureFareTaxFeeDetailIsMutable();
        fareTaxFeeDetail_.add(index, value);
        onChanged();
      } else {
        fareTaxFeeDetailBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public Builder addFareTaxFeeDetail(
        com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType.Builder builderForValue) {
      if (fareTaxFeeDetailBuilder_ == null) {
        ensureFareTaxFeeDetailIsMutable();
        fareTaxFeeDetail_.add(builderForValue.build());
        onChanged();
      } else {
        fareTaxFeeDetailBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public Builder addFareTaxFeeDetail(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType.Builder builderForValue) {
      if (fareTaxFeeDetailBuilder_ == null) {
        ensureFareTaxFeeDetailIsMutable();
        fareTaxFeeDetail_.add(index, builderForValue.build());
        onChanged();
      } else {
        fareTaxFeeDetailBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public Builder addAllFareTaxFeeDetail(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType> values) {
      if (fareTaxFeeDetailBuilder_ == null) {
        ensureFareTaxFeeDetailIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, fareTaxFeeDetail_);
        onChanged();
      } else {
        fareTaxFeeDetailBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public Builder clearFareTaxFeeDetail() {
      if (fareTaxFeeDetailBuilder_ == null) {
        fareTaxFeeDetail_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
      } else {
        fareTaxFeeDetailBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public Builder removeFareTaxFeeDetail(int index) {
      if (fareTaxFeeDetailBuilder_ == null) {
        ensureFareTaxFeeDetailIsMutable();
        fareTaxFeeDetail_.remove(index);
        onChanged();
      } else {
        fareTaxFeeDetailBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType.Builder getFareTaxFeeDetailBuilder(
        int index) {
      return getFareTaxFeeDetailFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailTypeOrBuilder getFareTaxFeeDetailOrBuilder(
        int index) {
      if (fareTaxFeeDetailBuilder_ == null) {
        return fareTaxFeeDetail_.get(index);  } else {
        return fareTaxFeeDetailBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailTypeOrBuilder> 
         getFareTaxFeeDetailOrBuilderList() {
      if (fareTaxFeeDetailBuilder_ != null) {
        return fareTaxFeeDetailBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(fareTaxFeeDetail_);
      }
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType.Builder addFareTaxFeeDetailBuilder() {
      return getFareTaxFeeDetailFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType.getDefaultInstance());
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType.Builder addFareTaxFeeDetailBuilder(
        int index) {
      return getFareTaxFeeDetailFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType.getDefaultInstance());
    }
    /**
     * <pre>
     * Tax fee detail based on fare
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType FareTaxFeeDetail = 13;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType.Builder> 
         getFareTaxFeeDetailBuilderList() {
      return getFareTaxFeeDetailFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType, com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailTypeOrBuilder> 
        getFareTaxFeeDetailFieldBuilder() {
      if (fareTaxFeeDetailBuilder_ == null) {
        fareTaxFeeDetailBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType, com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.FareTaxFeeDetailTypeOrBuilder>(
                fareTaxFeeDetail_,
                ((bitField0_ & 0x00001000) == 0x00001000),
                getParentForChildren(),
                isClean());
        fareTaxFeeDetail_ = null;
      }
      return fareTaxFeeDetailBuilder_;
    }

    private double surcharge_ ;
    /**
     * <pre>
     * travix surcharge
     * </pre>
     *
     * <code>double Surcharge = 14;</code>
     */
    public double getSurcharge() {
      return surcharge_;
    }
    /**
     * <pre>
     * travix surcharge
     * </pre>
     *
     * <code>double Surcharge = 14;</code>
     */
    public Builder setSurcharge(double value) {
      
      surcharge_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * travix surcharge
     * </pre>
     *
     * <code>double Surcharge = 14;</code>
     */
    public Builder clearSurcharge() {
      
      surcharge_ = 0D;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType)
  private static final com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType();
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<FlightSaleCurrencyPriceDetailType>
      PARSER = new com.google.protobuf.AbstractParser<FlightSaleCurrencyPriceDetailType>() {
    @java.lang.Override
    public FlightSaleCurrencyPriceDetailType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new FlightSaleCurrencyPriceDetailType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<FlightSaleCurrencyPriceDetailType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<FlightSaleCurrencyPriceDetailType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.agg.shopping.contract.transportation.FlightSaleCurrencyPriceDetailType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

