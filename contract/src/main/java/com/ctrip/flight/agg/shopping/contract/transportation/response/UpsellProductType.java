// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: com.ctrip.flight.agg.shopping.contract.transportation.response.proto

package com.ctrip.flight.agg.shopping.contract.transportation.response;

/**
 * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType}
 */
public  final class UpsellProductType extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType)
    UpsellProductTypeOrBuilder {
private static final long serialVersionUID = 0L;
  // Use UpsellProductType.newBuilder() to construct.
  private UpsellProductType(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private UpsellProductType() {
    baseOfferID_ = 0;
    diffService_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private UpsellProductType(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            baseOfferID_ = input.readInt32();
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              diffService_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType>();
              mutable_bitField0_ |= 0x00000002;
            }
            diffService_.add(
                input.readMessage(com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType.parser(), extensionRegistry));
            break;
          }
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        diffService_ = java.util.Collections.unmodifiableList(diffService_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_UpsellProductType_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_UpsellProductType_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.class, com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.Builder.class);
  }

  private int bitField0_;
  public static final int BASEOFFERID_FIELD_NUMBER = 1;
  private int baseOfferID_;
  /**
   * <pre>
   * 引用基准运价id
   * </pre>
   *
   * <code>int32 BaseOfferID = 1;</code>
   */
  public int getBaseOfferID() {
    return baseOfferID_;
  }

  public static final int DIFFSERVICE_FIELD_NUMBER = 2;
  private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType> diffService_;
  /**
   * <pre>
   * 差异化服务信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
   */
  public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType> getDiffServiceList() {
    return diffService_;
  }
  /**
   * <pre>
   * 差异化服务信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
   */
  public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceTypeOrBuilder> 
      getDiffServiceOrBuilderList() {
    return diffService_;
  }
  /**
   * <pre>
   * 差异化服务信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
   */
  public int getDiffServiceCount() {
    return diffService_.size();
  }
  /**
   * <pre>
   * 差异化服务信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType getDiffService(int index) {
    return diffService_.get(index);
  }
  /**
   * <pre>
   * 差异化服务信息
   * </pre>
   *
   * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
   */
  public com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceTypeOrBuilder getDiffServiceOrBuilder(
      int index) {
    return diffService_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (baseOfferID_ != 0) {
      output.writeInt32(1, baseOfferID_);
    }
    for (int i = 0; i < diffService_.size(); i++) {
      output.writeMessage(2, diffService_.get(i));
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (baseOfferID_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, baseOfferID_);
    }
    for (int i = 0; i < diffService_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, diffService_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType)) {
      return super.equals(obj);
    }
    com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType other = (com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType) obj;

    boolean result = true;
    result = result && (getBaseOfferID()
        == other.getBaseOfferID());
    result = result && getDiffServiceList()
        .equals(other.getDiffServiceList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + BASEOFFERID_FIELD_NUMBER;
    hash = (53 * hash) + getBaseOfferID();
    if (getDiffServiceCount() > 0) {
      hash = (37 * hash) + DIFFSERVICE_FIELD_NUMBER;
      hash = (53 * hash) + getDiffServiceList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType)
      com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductTypeOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_UpsellProductType_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_UpsellProductType_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.class, com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.Builder.class);
    }

    // Construct using com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getDiffServiceFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      baseOfferID_ = 0;

      if (diffServiceBuilder_ == null) {
        diffService_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        diffServiceBuilder_.clear();
      }
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.ComCtripFlightAggShoppingContractTransportationResponse.internal_static_com_ctrip_flight_agg_shopping_contract_transportation_response_UpsellProductType_descriptor;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType getDefaultInstanceForType() {
      return com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.getDefaultInstance();
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType build() {
      com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType buildPartial() {
      com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType result = new com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.baseOfferID_ = baseOfferID_;
      if (diffServiceBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          diffService_ = java.util.Collections.unmodifiableList(diffService_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.diffService_ = diffService_;
      } else {
        result.diffService_ = diffServiceBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType) {
        return mergeFrom((com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType other) {
      if (other == com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType.getDefaultInstance()) return this;
      if (other.getBaseOfferID() != 0) {
        setBaseOfferID(other.getBaseOfferID());
      }
      if (diffServiceBuilder_ == null) {
        if (!other.diffService_.isEmpty()) {
          if (diffService_.isEmpty()) {
            diffService_ = other.diffService_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureDiffServiceIsMutable();
            diffService_.addAll(other.diffService_);
          }
          onChanged();
        }
      } else {
        if (!other.diffService_.isEmpty()) {
          if (diffServiceBuilder_.isEmpty()) {
            diffServiceBuilder_.dispose();
            diffServiceBuilder_ = null;
            diffService_ = other.diffService_;
            bitField0_ = (bitField0_ & ~0x00000002);
            diffServiceBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getDiffServiceFieldBuilder() : null;
          } else {
            diffServiceBuilder_.addAllMessages(other.diffService_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private int baseOfferID_ ;
    /**
     * <pre>
     * 引用基准运价id
     * </pre>
     *
     * <code>int32 BaseOfferID = 1;</code>
     */
    public int getBaseOfferID() {
      return baseOfferID_;
    }
    /**
     * <pre>
     * 引用基准运价id
     * </pre>
     *
     * <code>int32 BaseOfferID = 1;</code>
     */
    public Builder setBaseOfferID(int value) {
      
      baseOfferID_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * 引用基准运价id
     * </pre>
     *
     * <code>int32 BaseOfferID = 1;</code>
     */
    public Builder clearBaseOfferID() {
      
      baseOfferID_ = 0;
      onChanged();
      return this;
    }

    private java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType> diffService_ =
      java.util.Collections.emptyList();
    private void ensureDiffServiceIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        diffService_ = new java.util.ArrayList<com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType>(diffService_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType, com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceTypeOrBuilder> diffServiceBuilder_;

    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType> getDiffServiceList() {
      if (diffServiceBuilder_ == null) {
        return java.util.Collections.unmodifiableList(diffService_);
      } else {
        return diffServiceBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public int getDiffServiceCount() {
      if (diffServiceBuilder_ == null) {
        return diffService_.size();
      } else {
        return diffServiceBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType getDiffService(int index) {
      if (diffServiceBuilder_ == null) {
        return diffService_.get(index);
      } else {
        return diffServiceBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public Builder setDiffService(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType value) {
      if (diffServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDiffServiceIsMutable();
        diffService_.set(index, value);
        onChanged();
      } else {
        diffServiceBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public Builder setDiffService(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType.Builder builderForValue) {
      if (diffServiceBuilder_ == null) {
        ensureDiffServiceIsMutable();
        diffService_.set(index, builderForValue.build());
        onChanged();
      } else {
        diffServiceBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public Builder addDiffService(com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType value) {
      if (diffServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDiffServiceIsMutable();
        diffService_.add(value);
        onChanged();
      } else {
        diffServiceBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public Builder addDiffService(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType value) {
      if (diffServiceBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureDiffServiceIsMutable();
        diffService_.add(index, value);
        onChanged();
      } else {
        diffServiceBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public Builder addDiffService(
        com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType.Builder builderForValue) {
      if (diffServiceBuilder_ == null) {
        ensureDiffServiceIsMutable();
        diffService_.add(builderForValue.build());
        onChanged();
      } else {
        diffServiceBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public Builder addDiffService(
        int index, com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType.Builder builderForValue) {
      if (diffServiceBuilder_ == null) {
        ensureDiffServiceIsMutable();
        diffService_.add(index, builderForValue.build());
        onChanged();
      } else {
        diffServiceBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public Builder addAllDiffService(
        java.lang.Iterable<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType> values) {
      if (diffServiceBuilder_ == null) {
        ensureDiffServiceIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, diffService_);
        onChanged();
      } else {
        diffServiceBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public Builder clearDiffService() {
      if (diffServiceBuilder_ == null) {
        diffService_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        diffServiceBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public Builder removeDiffService(int index) {
      if (diffServiceBuilder_ == null) {
        ensureDiffServiceIsMutable();
        diffService_.remove(index);
        onChanged();
      } else {
        diffServiceBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType.Builder getDiffServiceBuilder(
        int index) {
      return getDiffServiceFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceTypeOrBuilder getDiffServiceOrBuilder(
        int index) {
      if (diffServiceBuilder_ == null) {
        return diffService_.get(index);  } else {
        return diffServiceBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public java.util.List<? extends com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceTypeOrBuilder> 
         getDiffServiceOrBuilderList() {
      if (diffServiceBuilder_ != null) {
        return diffServiceBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(diffService_);
      }
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType.Builder addDiffServiceBuilder() {
      return getDiffServiceFieldBuilder().addBuilder(
          com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType.getDefaultInstance());
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType.Builder addDiffServiceBuilder(
        int index) {
      return getDiffServiceFieldBuilder().addBuilder(
          index, com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType.getDefaultInstance());
    }
    /**
     * <pre>
     * 差异化服务信息
     * </pre>
     *
     * <code>repeated .com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType DiffService = 2;</code>
     */
    public java.util.List<com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType.Builder> 
         getDiffServiceBuilderList() {
      return getDiffServiceFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType, com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceTypeOrBuilder> 
        getDiffServiceFieldBuilder() {
      if (diffServiceBuilder_ == null) {
        diffServiceBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType, com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceType.Builder, com.ctrip.flight.agg.shopping.contract.transportation.response.DiffServiceTypeOrBuilder>(
                diffService_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        diffService_ = null;
      }
      return diffServiceBuilder_;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType)
  }

  // @@protoc_insertion_point(class_scope:com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType)
  private static final com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType();
  }

  public static com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<UpsellProductType>
      PARSER = new com.google.protobuf.AbstractParser<UpsellProductType>() {
    @java.lang.Override
    public UpsellProductType parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new UpsellProductType(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<UpsellProductType> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<UpsellProductType> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.ctrip.flight.agg.shopping.contract.transportation.response.UpsellProductType getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

